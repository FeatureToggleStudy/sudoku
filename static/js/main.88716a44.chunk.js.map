{"version":3,"sources":["workers/GeneratePuzzle.worker.ts","serviceWorker.ts","store/types.ts","models/Difficulty.ts","models/Cell.ts","models/Row.ts","models/Solver.ts","models/Sudoku.ts","PuzzleStorage.ts","store/reducers.ts","store/index.ts","presentation/SudokuCell.tsx","presentation/SudokuRow.tsx","presentation/Sudoku.tsx","presentation/Numbers.tsx","presentation/TopBar.tsx","presentation/BottomBar.tsx","presentation/CompletedDialog.tsx","presentation/App.tsx","theme.ts","store/actions.ts","index.tsx"],"names":["module","exports","Worker","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DIRECTION","MODE","DIFFICULTY","CHANGE_DIFFICULTY","NEW_GAME","VALIDATE_SOLUTION","TOGGLE_CELL","SET_DIGIT","REMOVE_DIGIT","NAVIGATE_CELLS","TOGGLE_NOTE_MODE","UNDO","REDO","TOGGLE_NIGHT_MODE","RESET_SUDOKU","FILL_CANDIDATES","NO_NOTES","Cell","previous","Object","classCallCheck","this","value","valid","solution","row","column","given","active","notes","guess","concat","calculateBlock","modifier","cell","digit","mode","Note","map","x","i","Guess","Row","cells","index","c","validate","setActive","isActive","getColumn","setDigit","removeDigit","data","toConsumableArray","_ref","_ref2","slicedToArray","create","ROw_INDECES","BLOCK_INDECES","COLUMN_INDECES","range","start","end","times","Array","keys","slice","Solver","flatData","reduce","s","candidates","findCandidates","hasUniqueSolution","recurseOverCandidates","isSolved","isUnsolvable","startIndex","getStartIndex","values","iMax","length","solutions","localCandidates","removeValueFromCandidates","_this$findParents","findParents","block","removeFrom","removeFromIndex","filter","lowestNumberOfCandidates","numberOfCandidates","Error","rows","blocks","columns","v","_this$findParents2","push","_this$segment","segment","_this$findParents3","candidate","isAvailable","r","Sudoku","activeCell","createdAt","sudoku","toggleCell","allNumbers","acc","next","getCells","getValue","solved","_loop","n","dirrection","increment","val","decrement","objectSpread","Up","Down","Right","Left","activateCell","every","some","sum","getCandidates","forEach","rowCandidates","cellCandidates","isValid","Date","now","d","EMPTY_DATA","src_PuzzleStorage","PuzzleStorage","_this","worker","inititializeStorage","GeneratePuzzleWorker","addEventListener","e","addPuzzle","hasLocalStorageKeys","_puzzles","puzzles","defineProperty","VeryEasy","saveJSONPuzzles","Puzzles","Easy","Normal","Hard","VeryHard","save","localStorage","_this2","id","uuid","puzzle","decodedPuzle","difficulty","puzzleMap","load","shift","decodeStoredPuzzle","postMessage","message","puzzleData","key","setItem","JSON","stringify","parse","initialDifficulty","fallBack","getItem","readDifficulty","initialNightMode","readNightMode","initialState","past","current","getPuzzle","future","Input","nightMode","rootReducer","combineReducers","game","arguments","undefined","action","type","payload","toString","navigate","direction","SET_MODE","writeNightMode","fillCandidates","SudokuCellComponent","classes","props","react_default","a","createElement","className","container","onClick","handleClick","calculateClasses","renderContent","style","fontSize","size","getNotes","Math","ceil","cellClasses","note1","note2","note3","note4","note5","note6","note7","note8","note9","Fragment","note","activeNote","inactiveNote","getRow","_result","getBlock","result","content","thickBorderTop","thickBorderBottom","thickBorderLeft","thickBorderRight","dark","isGiven","invalid","join","Component","withStyles","theme","borderThin","palette","common","black","borderThick","createStyles","display","position","width","paddingBottom","textAlign","userSelect","justifyContent","alignItems","top","right","bottom","left","borderRight","borderBottom","color","grey","borderTop","borderLeft","backgroundColor","primary","light","fontWeight","opacity","contrastText","SudokuRowComponent","sudokuRow","renderRow","SudokuCell","getCellSize","rowSize","SudokuComponent","possibleConstructorReturn","getPrototypeOf","call","containerRef","setCellSize","rowDOM","boundingRectangle","getBoundingClientRect","height","smallestDimmesion","fittedDimmension","floor","setState","requestAnimationFrame","React","createRef","ref","Paper_default","sudokuPaper","renderRows","getRows","SudokuRow","milliSeconds","pad","num","round","padStart","seconds","minutes","hours","marginLeft","marginRight","@media (orientation: portrait)","@media (orientation: landscape)","padding","spacing","unit","paddingTop","progress","borderBottomRightRadius","borderBottomLeftRadius","errorBar","successBar","chip","margin","isNoteMode","showRedProgressBar","countEmptyCells","index_es","isDigitSolved","Chip_default","label","bar","variant","DIFFICUTIES","icon","LooksOne_default","LooksTwo_default","Looks3_default","Looks4_default","Looks5_default","TopBar","drawerOpen","showSnackbar","AppBar_default","Toolbar_default","IconButton_default","menuButton","openDrawer","Menu_default","Typography_default","grow","getBarText","FormControlLabel_default","notesToggle","labelPlacement","toggleNightMode","control","Switch_default","checked","Drawer_default","paper","drawerPaper","open","onClose","closeDrawer","List_default","ListSubheader_default","Divider_default","ListItem_default","button","createNewGame","ListItemIcon_default","FiberNew_default","ListItemText_default","reset","Restore_default","Check_default","ChildFriendly_default","renderDifficulties","anchorOrigin","horizontal","vertical","snackbar","Close_default","_this3","option","selected","setDifficulty","changeDifficulty","_this4","validateSolution","setTimeout","_this5","find","resetSudoku","_drawerPaper","flexGrow","breakpoints","down","minWidth","up","white","appBar","toolbar","modeFab","zIndex","clearFab","Fab_default","Clear_default","disabled","undo","Undo_default","redo","Redo_default","setMode","EditOutlined_default","Edit_default","ellapsedTime","formatMillisecons","getCreationTimestamp","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","gutterBottom","Insane","difficultyText","App","handleKeyboard","which","navigateCells","t","createMuiTheme","typography","useNextVariants","main","secondary","MuiThemeProvider_default","CssBaseline_default","presentation_TopBar","presentation_Sudoku","Numbers","presentation_CompletedDialog","presentation_BottomBar","document","removeEventListener","connect","store","createStore","ReactDOM","render","es","presentation_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.88716a44.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"d1e65d8d5b36ec4850c8.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport interface IGameState {\r\n  difficulty: DIFFICULTY;\r\n  sudoku: {\r\n    past: Sudoku[];\r\n    current: Sudoku;\r\n    future: Sudoku[];\r\n  };\r\n  mode: MODE;\r\n  nightMode: boolean;\r\n}\r\n\r\nexport enum DIRECTION {\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right\r\n}\r\n\r\nexport enum MODE {\r\n  Input,\r\n  Note,\r\n  Guess\r\n}\r\n\r\nexport const CHANGE_DIFFICULTY = \"CHANGE_DIFFICULTY\";\r\nexport const NEW_GAME = \"NEW_GAME\";\r\nexport const VALIDATE_SOLUTION = \"VALIDATE_SOLUTION\";\r\nexport const TOGGLE_CELL = \"TOGGLE_CELLs\";\r\nexport const SET_DIGIT = \"SET_DIGIT\";\r\nexport const REMOVE_DIGIT = \"REMOVE_DIGIT\";\r\nexport const NAVIGATE_CELLS = \"NAVIGATE_CELLS\";\r\nexport const TOGGLE_NOTE_MODE = \"TOGGLE_NOTE_MODE\";\r\nexport const UNDO = \"UNDO\";\r\nexport const REDO = \"REDO\";\r\nexport const TOGGLE_NIGHT_MODE = \"TOGGLE_NIGHT_MODE\";\r\nexport const RESET_SUDOKU = \"RESET_SUDOKU\";\r\nexport const FILL_CANDIDATES = \"FILL_CANDIDATES\";\r\n\r\ninterface IChangeDifficultyAction {\r\n  type: typeof CHANGE_DIFFICULTY;\r\n  payload: DIFFICULTY;\r\n}\r\n\r\ninterface INewGameAction {\r\n  type: typeof NEW_GAME;\r\n}\r\n\r\ninterface IValidateSolutionAction {\r\n  type: typeof VALIDATE_SOLUTION;\r\n}\r\n\r\ninterface IToggleCellAction {\r\n  type: typeof TOGGLE_CELL;\r\n  payload: {\r\n    row: number;\r\n    column: number;\r\n  }\r\n}\r\n\r\ninterface ISetDigitAction {\r\n  type: typeof SET_DIGIT;\r\n  payload: {\r\n    digit: number;\r\n  }\r\n}\r\n\r\ninterface IRemoveDigitAction {\r\n  type: typeof REMOVE_DIGIT;\r\n}\r\n\r\ninterface INavigateCellsAction {\r\n  type: typeof NAVIGATE_CELLS;\r\n  payload: {\r\n    direction: DIRECTION;\r\n  }\r\n}\r\n\r\ninterface ISetModeAction {\r\n  type: typeof TOGGLE_NOTE_MODE;\r\n  payload: {\r\n    mode: MODE\r\n  }\r\n}\r\ninterface IUndoAction {\r\n  type: typeof UNDO;\r\n}\r\ninterface IRedoAction {\r\n  type: typeof REDO;\r\n}\r\ninterface IToggleNightModeAction {\r\n  type: typeof TOGGLE_NIGHT_MODE;\r\n}\r\n\r\ninterface IResetSudokuAction {\r\n  type: typeof RESET_SUDOKU;\r\n}\r\n\r\ninterface IFillCandidatesAction {\r\n  type: typeof FILL_CANDIDATES;\r\n}\r\n\r\n\r\nexport type OptionActions = IChangeDifficultyAction\r\n  | INewGameAction\r\n  | IValidateSolutionAction\r\n  | IToggleCellAction\r\n  | ISetDigitAction\r\n  | IRemoveDigitAction\r\n  | INavigateCellsAction\r\n  | ISetModeAction\r\n  | IUndoAction\r\n  | IRedoAction\r\n  | IToggleNightModeAction\r\n  | IResetSudokuAction\r\n  | IFillCandidatesAction;","\r\nexport enum DIFFICULTY {\r\n  VeryEasy = 30,\r\n  Easy = 36,\r\n  Normal = 42,\r\n  Hard = 48,\r\n  VeryHard = 54,\r\n  Insane = 60\r\n\r\n}","import { MODE } from \"../store/types\";\r\n\r\nconst NO_NOTES = [false, false, false, false, false, false, false, false, false];\r\n\r\nexport default class Cell {\r\n  private value: number | null;\r\n  private valid: boolean;\r\n  private solution: number;\r\n  private row: number;\r\n  private column: number;\r\n  private given: boolean;\r\n  private active: boolean;\r\n  private notes: boolean[];\r\n  private guess: boolean;\r\n\r\n  private constructor(previous?: Cell) {\r\n    this.value = previous ? previous.value : null;\r\n    this.solution = previous ? previous.solution : -1;\r\n    this.row = previous ? previous.row : -1;\r\n    this.column = previous ? previous.column : -1;\r\n    this.given = previous ? previous.given : false;\r\n    this.active = previous ? previous.active : false;\r\n    this.valid = previous ? previous.valid : true;\r\n    this.notes = previous ? previous.notes : [...NO_NOTES];\r\n    this.guess = previous ? previous.guess : false;\r\n  }\r\n\r\n  static create(solution: number, row: number, column: number, given: boolean): Cell {\r\n    const cell = new Cell();\r\n    cell.solution = solution;\r\n    cell.row = row;\r\n    cell.column = column;\r\n    cell.given = given;\r\n    cell.value = given ? solution : null;\r\n    return cell;\r\n  }\r\n\r\n  public getSolution(): number {\r\n    return this.solution;\r\n  }\r\n\r\n  public getValue(): number | null {\r\n    return this.value;\r\n  }\r\n\r\n  public getRow(): number {\r\n    return this.row;\r\n  }\r\n\r\n  public getColumn(): number {\r\n    return this.column;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public getBlock(): number {\r\n    if (this.row <= 3) {\r\n      return this.calculateBlock(0);\r\n    } else if (this.row >= 4 && this.row <= 6) {\r\n      return this.calculateBlock(1);\r\n    } else {\r\n      return this.calculateBlock(2);\r\n    }\r\n  }\r\n\r\n  private calculateBlock(modifier: number): number {\r\n    if (this.column <= 3) {\r\n      return modifier + 1;\r\n    } else if (this.column >= 4 && this.column <= 6) {\r\n      return modifier + 2;\r\n    } else {\r\n      return modifier + 3;\r\n    }\r\n  }\r\n\r\n  public isGiven(): boolean {\r\n    return this.given;\r\n  }\r\n\r\n  public validate(): Cell {\r\n    const cell = new Cell(this)\r\n    cell.valid = this.value === null || this.value === this.solution;\r\n    if (cell.valid) {\r\n      cell.active = false;\r\n    }\r\n    return cell;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.valid;\r\n  }\r\n\r\n  public setActive(active: boolean): Cell {\r\n    const cell = new Cell(this);\r\n    cell.active = active;\r\n    return cell;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    if (mode === MODE.Note) {\r\n      cell.notes = this.notes.map((x, i) => i === (digit - 1) ? !x : x)\r\n      cell.value = null\r\n    } else {\r\n      if (cell.guess) {\r\n        cell.value = digit;\r\n      } else {\r\n        cell.value = this.value === digit ? null : digit;\r\n      }\r\n    }\r\n    cell.guess = mode === MODE.Guess;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public removeDigit(): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    cell.notes = [...NO_NOTES];\r\n    cell.value = null;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.value === this.solution;\r\n  }\r\n\r\n  public getNotes(): boolean[] {\r\n    return this.notes;\r\n  }\r\n\r\n  public isGuess(): boolean {\r\n    return this.guess;\r\n  }\r\n}\r\n","import Cell from \"./Cell\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\n\r\nexport default class Row {\r\n  private cells: Cell[];\r\n  private index: number;\r\n  private active: boolean;\r\n\r\n  private constructor(previous?: Row) {\r\n    this.index = previous ? previous.index : -1;\r\n    this.active = previous ? previous.active : false;\r\n    this.cells = previous ? previous.cells : [];\r\n  }\r\n\r\n  static create(data: [number, boolean][], index: number): Row {\r\n    const row = new Row();\r\n    row.cells = [...data.map(([value, given], i) => Cell.create(value, index, i + 1, given))];\r\n    row.index = index;\r\n    return row;\r\n  }\r\n\r\n  public getCells(): Cell[] {\r\n    return this.cells;\r\n  }\r\n\r\n  public validate(): Row {\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.validate());\r\n    return row;\r\n  }\r\n\r\n  public getIndex(): number {\r\n    return this.index;\r\n  }\r\n\r\n  public toggleCell(index: number, column: number): Row {\r\n    if (this.index !== index && !this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n\r\n    if (this.active) {\r\n      if (this.index === index) {\r\n        row.cells = this.cells.map(c => {\r\n          return c.setActive(c.isActive() ? false : c.getColumn() === column);\r\n        });\r\n      } else {\r\n        row.active = false;\r\n        row.cells = this.cells.map(c => c.isActive() ? c.setActive(false) : c);\r\n      }\r\n    } else if (this.index === index) {\r\n      row.active = true;\r\n      row.cells = this.cells.map(c => c.getColumn() === column ? c.setActive(true) : c);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.setDigit(digit, mode));\r\n    return row;\r\n  }\r\n\r\n  public removeDigit(): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.removeDigit());\r\n    return row;\r\n  }\r\n\r\n}\r\n","import { DIFFICULTY } from \"./Difficulty\";\r\n\r\nconst ROw_INDECES = [\r\n  [0, 1, 2, 3, 4, 5, 6, 7, 8],\r\n  [9, 10, 11, 12, 13, 14, 15, 16, 17],\r\n  [18, 19, 20, 21, 22, 23, 24, 25, 26],\r\n  [27, 28, 29, 30, 31, 32, 33, 34, 35],\r\n  [36, 37, 38, 39, 40, 41, 42, 43, 44],\r\n  [45, 46, 47, 48, 49, 50, 51, 52, 53],\r\n  [54, 55, 56, 57, 58, 59, 60, 61, 62],\r\n  [63, 64, 65, 66, 67, 68, 69, 70, 71],\r\n  [72, 73, 74, 75, 76, 77, 78, 79, 80]\r\n]\r\nconst BLOCK_INDECES = [\r\n  [0, 1, 2, 9, 10, 11, 18, 19, 20],\r\n  [3, 4, 5, 12, 13, 14, 21, 22, 23],\r\n  [6, 7, 8, 15, 16, 17, 24, 25, 26],\r\n  [27, 28, 29, 36, 37, 38, 45, 46, 47],\r\n  [30, 31, 32, 39, 40, 41, 48, 49, 50],\r\n  [33, 34, 35, 42, 43, 44, 51, 52, 53],\r\n  [54, 55, 56, 63, 64, 65, 72, 73, 74],\r\n  [57, 58, 59, 66, 67, 68, 75, 76, 77],\r\n  [60, 61, 62, 69, 70, 71, 78, 79, 80]\r\n]\r\nconst COLUMN_INDECES = [\r\n  [0, 9, 18, 27, 36, 45, 54, 63, 72],\r\n  [1, 10, 19, 28, 37, 46, 55, 64, 73],\r\n  [2, 11, 20, 29, 38, 47, 56, 65, 74],\r\n  [3, 12, 21, 30, 39, 48, 57, 66, 75],\r\n  [4, 13, 22, 31, 40, 49, 58, 67, 76],\r\n  [5, 14, 23, 32, 41, 50, 59, 68, 77],\r\n  [6, 15, 24, 33, 42, 51, 60, 69, 78],\r\n  [7, 16, 25, 34, 43, 52, 61, 70, 79],\r\n  [8, 17, 26, 35, 44, 53, 62, 71, 80]\r\n]\r\n\r\n\r\nconst repeat = (times: number) => [...Array(times).keys()]\r\nconst range = (start: number, end: number) => repeat(end + 1).slice(start)\r\n\r\nexport default class Solver {\r\n  constructor(private data: nullber[][]) {\r\n\r\n  }\r\n\r\n  public hasUniqueSolution(): boolean {\r\n    const flatData = this.data.reduce((s, x) => s.concat(x), []);\r\n    const candidates = this.findCandidates(flatData);\r\n    const hasUniqueSolution = this.recurseOverCandidates(candidates)\r\n    return hasUniqueSolution\r\n  }\r\n\r\n  private recurseOverCandidates(candidates: number[][]): boolean {\r\n    if (this.isSolved(candidates)) return true;\r\n    if (this.isUnsolvable(candidates)) return false;\r\n    let startIndex = this.getStartIndex(candidates);\r\n\r\n    const values = candidates[startIndex]\r\n\r\n    const iMax = values.length\r\n    let solutions = 0\r\n    for (let i = 0; i < iMax; i++) {\r\n      const value = values[i]\r\n      const localCandidates = this.removeValueFromCandidates(candidates, startIndex, value)\r\n      const couldSolve = this.recurseOverCandidates(localCandidates)\r\n      if (couldSolve) {\r\n        solutions += 1\r\n      }\r\n    }\r\n    return solutions === 1\r\n  }\r\n\r\n  private removeValueFromCandidates(candidates: number[][], startIndex: number, value: number): number[][] {\r\n    let localCandidates = [...candidates.map(x => [...x])]\r\n    const { row, column, block } = this.findParents(startIndex)\r\n    const removeFrom = [...ROw_INDECES[row], ...COLUMN_INDECES[column], ...BLOCK_INDECES[block]]\r\n    for (let i = 0; i < 27; i++) {\r\n      const removeFromIndex = removeFrom[i];\r\n      localCandidates[removeFromIndex] = localCandidates[removeFromIndex].filter(c => c !== value)\r\n    }\r\n    localCandidates[startIndex] = [value]\r\n    return localCandidates\r\n  }\r\n\r\n  private isSolved(candidates: number[][]): boolean {\r\n    for (let i = 0; i < 81; i++) {\r\n      if (candidates[i].length !== 1) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  private isUnsolvable(candidates: number[][]): boolean {\r\n    for (let i = 0; i < 81; i++) {\r\n      if (candidates[i].length === 0) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  private getStartIndex(candidates: number[][]): number {\r\n    let startIndex = -1;\r\n    let lowestNumberOfCandidates = 9;\r\n    for (let i = 0; i < 81; i++) {\r\n      const numberOfCandidates = candidates[i].length\r\n      if (numberOfCandidates === 2) {\r\n        return i;\r\n      }\r\n\r\n      if (numberOfCandidates > 2 && numberOfCandidates < lowestNumberOfCandidates) {\r\n        startIndex = i;\r\n        lowestNumberOfCandidates = numberOfCandidates\r\n      }\r\n    }\r\n    if (startIndex === -1) {\r\n      throw new Error(\"Couldn't find a good start index for further solving.\")\r\n    }\r\n    return startIndex;\r\n  }\r\n\r\n  private segment<T>(data: T[]): segments<T> {\r\n    const rows: T[][] = [[], [], [], [], [], [], [], [], []]\r\n    const blocks: T[][] = [[], [], [], [], [], [], [], [], []]\r\n    const columns: T[][] = [[], [], [], [], [], [], [], [], []]\r\n\r\n    for (let i = 0; i < 81; i++) {\r\n      const v = data[i]\r\n      const { row, column, block } = this.findParents(i);\r\n      rows[row].push(v)\r\n      blocks[block].push(v)\r\n      columns[column].push(v)\r\n    }\r\n\r\n    return {\r\n      rows,\r\n      blocks,\r\n      columns\r\n    }\r\n  }\r\n\r\n  private findParents(index: number): { row: number, column: number, block: number } {\r\n    const row = ~~(index / 9);\r\n    const column = index % 9\r\n    const block = ~~(row / 3) * 3 + ~~(column / 3)\r\n\r\n    return {\r\n      block,\r\n      row,\r\n      column\r\n    }\r\n  }\r\n\r\n  private findCandidates(data: nullber[]) {\r\n    const { rows, blocks, columns } = this.segment(data)\r\n    const candidates: number[][] = []\r\n    for (let i = 0; i < 81; i++) {\r\n      const value = data[i];\r\n      candidates[i] = [];\r\n      if (value !== null) {\r\n        candidates[i].push(value);\r\n      } else {\r\n        const { row, column, block } = this.findParents(i)\r\n        for (let candidate = 1; candidate <= 9; candidate++) {\r\n          if (this.isAvailable(blocks[block], rows[row], columns[column], candidate)) {\r\n            candidates[i].push(candidate);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return candidates;\r\n  }\r\n\r\n  private isAvailable(block: nullber[], row: nullber[], column: nullber[], value: number): boolean {\r\n    for (let i = 0; i < 9; i++) {\r\n      if (block[i] === value || row[i] === value || column[i] === value) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  public getCandidates(): number[][][] {\r\n    const flatData = this.data.reduce((s, x) => s.concat(x), []);\r\n    const candidates = this.findCandidates(flatData);\r\n    return range(0, 8).map(r => range(0, 8).map(c => candidates[r * 9 + c]))\r\n  }\r\n}\r\n\r\ntype nullber = number | null\r\n\r\ntype segments<T> = {\r\n  rows: T[][]\r\n  blocks: T[][]\r\n  columns: T[][]\r\n}\r\n","import Row from \"./Row\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport Cell from \"./Cell\";\r\nimport Solver from \"./Solver\";\r\n\r\nexport default class Sudoku {\r\n  private rows: Row[];\r\n  private activeCell: { row: number, column: number };\r\n  private createdAt: number;\r\n\r\n  private constructor(previous?: Sudoku) {\r\n    this.rows = previous ? previous.rows : [];\r\n    this.activeCell = previous ? previous.activeCell : { row: -1, column: -1 }\r\n    this.createdAt = previous ? previous.createdAt : 0;\r\n  }\r\n\r\n  static create(data: ([number, boolean])[][]): Sudoku {\r\n    const sudoku = new Sudoku();\r\n    sudoku.createdAt = Date.now();\r\n    sudoku.rows = data.map((d, i) => Row.create(d, i + 1));\r\n    return sudoku\r\n  }\r\n\r\n  public getRows(): Row[] {\r\n    return this.rows;\r\n  }\r\n\r\n  public validate(): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.rows = this.rows.map(r => r.validate());\r\n    return sudoku;\r\n  }\r\n\r\n  public activateCell(row: number, column: number): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    if (sudoku.activeCell.row === row && sudoku.activeCell.column === column) {\r\n      sudoku.activeCell = { row: -1, column: -1 }\r\n    } else {\r\n      sudoku.activeCell = { row, column };\r\n    }\r\n    sudoku.rows = this.rows.map(r => r.toggleCell(row, column));\r\n    return sudoku;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.setDigit(digit, mode));\r\n    return sudoku;\r\n  }\r\n\r\n  public removeDigit(): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.removeDigit());\r\n    return sudoku;\r\n  }\r\n\r\n  public getSolvedNumbers(): number[] {\r\n    const allNumbers = this.rows.reduce((acc: number[], next: Row) =>\r\n      acc.concat(next.getCells().map(c => c.getValue() || 0), []),\r\n      []\r\n    );\r\n    const solved = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      if (allNumbers.filter(n => n === i).length === 9) {\r\n        solved.push(i);\r\n      }\r\n    }\r\n    return solved;\r\n  }\r\n\r\n  public navigate(dirrection: DIRECTION): Sudoku {\r\n    const increment = (val: number) => val === 9 ? 1 : val + 1;\r\n    const decrement = (val: number) => val === 1 ? 9 : val - 1;\r\n    const activeCell = { ...this.activeCell }\r\n\r\n    switch (dirrection) {\r\n      case DIRECTION.Up:\r\n        activeCell.row = decrement(activeCell.row);\r\n        break;\r\n      case DIRECTION.Down:\r\n        activeCell.row = increment(activeCell.row);\r\n        break;\r\n      case DIRECTION.Right:\r\n        activeCell.column = increment(activeCell.column);\r\n        break;\r\n      case DIRECTION.Left:\r\n        activeCell.column = decrement(activeCell.column);\r\n        break;\r\n    }\r\n    return this.activateCell(activeCell.row, activeCell.column);\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.rows.every(r => r.getCells().every(c => c.isSolved()))\r\n  }\r\n\r\n  public getCreationTimestamp(): number {\r\n    return this.createdAt;\r\n  }\r\n\r\n  public isDigitSolved(digit: number): boolean {\r\n    return this.rows.every(r => r.getCells().some(c => c.getValue() === digit && c.isSolved()));\r\n  }\r\n\r\n  public countEmptyCells(): number {\r\n    const cells = this.rows.reduce((acc, row) => acc.concat(row.getCells()), [] as Cell[])\r\n    return cells.reduce((sum, cell) => {\r\n      if (cell.getValue() === null) {\r\n        return sum + 1;\r\n      }\r\n      return sum;\r\n    }, 0)\r\n  }\r\n\r\n  public fillCandidates(): Sudoku {\r\n    const data = this.rows.map(r => r.getCells().map(c => c.getValue()))\r\n    const solver = new Solver(data)\r\n    const candidates = solver.getCandidates()\r\n    let sudoku = new Sudoku(this);\r\n    if (sudoku.activeCell.row !== -1 && sudoku.activeCell.column !== -1) {\r\n      sudoku = sudoku.activateCell(sudoku.activeCell.row, sudoku.activeCell.column)\r\n    }\r\n    candidates.forEach((rowCandidates, row) => {\r\n      rowCandidates.forEach((cellCandidates, cell) => {\r\n        sudoku = sudoku.activateCell(row + 1, cell + 1)\r\n        cellCandidates.forEach(candidate => {\r\n          if (data[row][cell] === null) {\r\n            sudoku = sudoku.setDigit(candidate, MODE.Note)\r\n          }\r\n        })\r\n      })\r\n    })\r\n    return sudoku;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.rows.some(r => r.getCells().some(c => c.isValid()))\r\n  }\r\n}\r\n","\r\nimport Puzzles from \"./puzzles.json\"\r\nimport { DIFFICULTY } from \"./models/Difficulty\";\r\nimport Sudoku from \"./models/Sudoku\";\r\nimport GeneratePuzzleWorker from \"./workers/GeneratePuzzle.worker\"\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\nconst EMPTY_DATA: [number, boolean][][] = [\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]]\r\n]\r\n\r\nconst PUZZLE_MAP_KEY = \"PUZZLE-MAP\"\r\nconst BUFFER_SIZE = 20\r\n\r\ntype idMap = { [key: number]: string[] }\r\ntype serializedPuzzle = (number | boolean)[][][]\r\n\r\nclass PuzzleStorage {\r\n  private worker: Worker;\r\n\r\n  constructor() {\r\n    this.inititializeStorage()\r\n    this.worker = new GeneratePuzzleWorker() as Worker;\r\n    this.worker.addEventListener('message', e => this.addPuzzle(e))\r\n  }\r\n\r\n  private inititializeStorage() {\r\n    if (!this.hasLocalStorageKeys()) {\r\n      const puzzles: idMap = {\r\n        [DIFFICULTY.VeryEasy]: this.saveJSONPuzzles(Puzzles.VeryEasy),\r\n        [DIFFICULTY.Easy]: this.saveJSONPuzzles(Puzzles.Easy),\r\n        [DIFFICULTY.Normal]: this.saveJSONPuzzles(Puzzles.Normal),\r\n        [DIFFICULTY.Hard]: this.saveJSONPuzzles(Puzzles.Hard),\r\n        [DIFFICULTY.VeryHard]: this.saveJSONPuzzles(Puzzles.VeryHard)\r\n      }\r\n      this.save(PUZZLE_MAP_KEY, puzzles)\r\n    }\r\n  }\r\n\r\n  private hasLocalStorageKeys(): boolean {\r\n    return !!window.localStorage[PUZZLE_MAP_KEY]\r\n  }\r\n\r\n  private saveJSONPuzzles(puzzles: serializedPuzzle[]): string[] {\r\n    return puzzles.map(p => {\r\n      const id = uuid();\r\n      this.save(id, p)\r\n      return id;\r\n    })\r\n  }\r\n\r\n  private decodeStoredPuzzle(puzzle: serializedPuzzle): Sudoku {\r\n    const decodedPuzle = [[], [], [], [], [], [], [], [], []] as [number, boolean][][];\r\n    puzzle.forEach((row, i) => {\r\n      decodedPuzle[i] = row.map(([value, given]) => [value, given] as [number, boolean])\r\n    })\r\n    return Sudoku.create(decodedPuzle)\r\n  }\r\n\r\n  public getPuzzle(difficulty: DIFFICULTY): Sudoku {\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    const id = puzzleMap[difficulty].shift()\r\n    if (!id) {\r\n      return Sudoku.create(EMPTY_DATA)\r\n    }\r\n    const puzzle = this.load<serializedPuzzle>(id)\r\n    const sudoku = this.decodeStoredPuzzle(puzzle)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap);\r\n    this.worker.postMessage(difficulty)\r\n\r\n    if (!!sudoku) {\r\n      return sudoku\r\n    }\r\n    return Sudoku.create(EMPTY_DATA)\r\n  }\r\n\r\n  private addPuzzle(message: MessageEvent): void {\r\n    const difficulty = message.data.difficulty as DIFFICULTY;\r\n    const data = message.data.puzzleData as [number, boolean][][];\r\n    const id = uuid();\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    puzzleMap[difficulty].push(id);\r\n    this.save(id, data)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap)\r\n    if (puzzleMap[difficulty].length < BUFFER_SIZE) {\r\n      this.worker.postMessage(difficulty)\r\n    }\r\n  }\r\n\r\n  private save(key: string, data: any): void {\r\n    window.localStorage.setItem(key, JSON.stringify(data))\r\n  }\r\n\r\n  private load<T>(key: string): T {\r\n    return JSON.parse(window.localStorage[key]) as T\r\n  }\r\n}\r\n\r\nexport default new PuzzleStorage();","import {\r\n  IGameState,\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  REMOVE_DIGIT,\r\n  TOGGLE_NOTE_MODE as SET_MODE,\r\n  UNDO,\r\n  REDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU,\r\n  FILL_CANDIDATES\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport PuzzleStorage from \"../PuzzleStorage\"\r\n\r\n\r\nconst initialDifficulty = readDifficulty(DIFFICULTY.Easy)\r\nconst initialNightMode = readNightMode(false);\r\nconst initialState: IGameState = {\r\n  difficulty: initialDifficulty,\r\n  sudoku: {\r\n    past: [],\r\n    current: PuzzleStorage.getPuzzle(initialDifficulty).activateCell(1, 1),\r\n    future: []\r\n  },\r\n  mode: MODE.Input,\r\n  nightMode: initialNightMode\r\n};\r\n\r\nexport function gameReducer(state = initialState, action: OptionActions): IGameState {\r\n  switch (action.type) {\r\n    case CHANGE_DIFFICULTY:\r\n      writeDifficulty(action.payload);\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(action.payload).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case NEW_GAME:\r\n\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(state.difficulty).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case VALIDATE_SOLUTION:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.validate()\r\n        }\r\n      };\r\n    case TOGGLE_CELL:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.activateCell(action.payload.row, action.payload.column)\r\n        }\r\n      };\r\n    case SET_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.setDigit(action.payload.digit, state.mode),\r\n          future: []\r\n        }\r\n      };\r\n    case REMOVE_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.removeDigit(),\r\n          future: []\r\n        }\r\n      };\r\n    case NAVIGATE_CELLS:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.navigate(action.payload.direction)\r\n        }\r\n      };\r\n    case SET_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload.mode\r\n      };\r\n    case UNDO:\r\n      if (!state.sudoku.past.length) {\r\n        return state;\r\n      }\r\n      const previous = state.sudoku.past.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: state.sudoku.past.slice(0, -1),\r\n          current: previous,\r\n          future: [...state.sudoku.future, state.sudoku.current]\r\n        }\r\n      }\r\n    case REDO:\r\n      if (!state.sudoku.future.length) {\r\n        return state;\r\n      }\r\n      const next = state.sudoku.future.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: next,\r\n          future: state.sudoku.future.slice(0, -1)\r\n        }\r\n      }\r\n    case TOGGLE_NIGHT_MODE:\r\n      const nightMode = !state.nightMode;\r\n      writeNightMode(nightMode);\r\n      return {\r\n        ...state,\r\n        nightMode\r\n      }\r\n    case RESET_SUDOKU:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: state.sudoku.past.shift() || state.sudoku.current,\r\n          future: []\r\n        }\r\n      }\r\n    case FILL_CANDIDATES:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.fillCandidates(),\r\n          future: []\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction readDifficulty(fallBack: DIFFICULTY): DIFFICULTY {\r\n  const data = window.localStorage.getItem('DIFFICULTY');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return +data as DIFFICULTY;\r\n}\r\nfunction writeDifficulty(difficulty: DIFFICULTY) {\r\n  window.localStorage.setItem('DIFFICULTY', difficulty.toString());\r\n}\r\n\r\nfunction readNightMode(fallBack: boolean): boolean {\r\n  const data = window.localStorage.getItem('NIGHT_MODE');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return data === 'true';\r\n}\r\nfunction writeNightMode(nightMode: boolean) {\r\n  window.localStorage.setItem('NIGHT_MODE', nightMode.toString());\r\n}","import \"typeface-roboto\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nimport { gameReducer } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport Cell from \"../models/Cell\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => {\r\n  const borderThin = `solid 1px ${theme.palette.common.black}`;\r\n  const borderThick = `solid 2px ${theme.palette.common.black}`;\r\n\r\n  return createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      width: '11.111111%',\r\n      paddingBottom: '11.111111%',\r\n      textAlign: 'center',\r\n      userSelect: \"none\",\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      borderRight: borderThin,\r\n      borderBottom: borderThin,\r\n      color: theme.palette.type === \"dark\" ? theme.palette.grey[400] : theme.palette.common.black\r\n    },\r\n    thickBorderTop: {\r\n      borderTop: borderThick\r\n    },\r\n    thickBorderBottom: {\r\n      borderBottom: borderThick\r\n    },\r\n    thickBorderLeft: {\r\n      borderLeft: borderThick\r\n    },\r\n    thickBorderRight: {\r\n      borderRight: borderThick\r\n    },\r\n    dark: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.light : theme.palette.grey[200],\r\n    },\r\n    given: {\r\n      fontWeight: 'bold'\r\n    },\r\n    note: {\r\n      position: 'absolute'\r\n    },\r\n    inactiveNote: {\r\n      opacity: 0.15\r\n    },\r\n    activeNote: {\r\n      opacity: 1,\r\n      fontWeight: 'bold'\r\n    },\r\n    note1: {\r\n      top: 0,\r\n      left: 0,\r\n      bottom: '66.666667%',\r\n      right: '66.666667%'\r\n    },\r\n    note2: {\r\n      top: \"0\",\r\n      left: \"33.333333%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note3: {\r\n      top: \"0\",\r\n      left: \"66.666667%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"0\",\r\n    },\r\n    note4: {\r\n      top: \"33.333333%\",\r\n      left: \"0\",\r\n      bottom: \"33.333333%\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note5: {\r\n      top: \"33.333333%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note6: {\r\n      top: \"33.333333%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"0\",\r\n    },\r\n    note7: {\r\n      top: \"66.666667%\",\r\n      left: \"0\",\r\n      bottom: \"0\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note8: {\r\n      top: \"66.666667%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"0\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note9: {\r\n      top: \"66.666667%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n    },\r\n    invalid: {\r\n      backgroundColor: theme.palette.error.light,\r\n      color: theme.palette.error.contrastText\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.dark : theme.palette.primary.light,\r\n      color: theme.palette.primary.contrastText,\r\n    }\r\n  });\r\n}\r\n\r\nexport interface ISudokuCellComponentProps extends WithStyles<typeof styles> {\r\n  cell: Cell;\r\n  size: number;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nclass SudokuCellComponent extends Component<ISudokuCellComponentProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} onClick={() => this.handleClick()}>\r\n        <div className={this.calculateClasses()}>\r\n          {this.renderContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent(): JSX.Element {\r\n    const { classes } = this.props;\r\n    const value = this.props.cell.getValue();\r\n    if (!!value) {\r\n      return (\r\n        <span style={{ fontSize: `${this.props.size}px` }}>{value}</span>\r\n      );\r\n    }\r\n    const notes = this.props.cell.getNotes();\r\n    const fontSize = `${Math.ceil((this.props.size / 3))}px`;\r\n    const cellClasses = [\r\n      classes.note1,\r\n      classes.note2,\r\n      classes.note3,\r\n      classes.note4,\r\n      classes.note5,\r\n      classes.note6,\r\n      classes.note7,\r\n      classes.note8,\r\n      classes.note9\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          notes.map((x, i) => (\r\n            <span className={`${classes.note} ${cellClasses[i]} ${x ? classes.activeNote : classes.inactiveNote}`}\r\n              key={i}\r\n              style={{ fontSize: fontSize }}>\r\n              {this.props.mode === MODE.Note ? i + 1 : ''}\r\n            </span>\r\n          ))\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n\r\n  private handleClick(): void {\r\n    this.props.toggleCell(this.props.cell.getRow(), this.props.cell.getColumn())\r\n  }\r\n\r\n  private calculateClasses(): string {\r\n    const { classes } = this.props;\r\n    const cell = this.props.cell;\r\n    const row = cell.getRow();\r\n    const column = cell.getColumn();\r\n    const block = cell.getBlock();\r\n\r\n    const result = {\r\n      [classes.content]: true,\r\n      [classes.thickBorderTop]: row === 1,\r\n      [classes.thickBorderBottom]: row % 3 === 0,\r\n      [classes.thickBorderLeft]: column === 1,\r\n      [classes.thickBorderRight]: column % 3 === 0,\r\n      [classes.dark]: block % 2 === 0,\r\n      [classes.given]: cell.isGiven(),\r\n      [classes.invalid]: !cell.isValid(),\r\n      [classes.active]: cell.isActive(),\r\n    }\r\n    return Object.keys(result).filter(key => result[key]).join(' ');\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuCellComponent);","import React, { Component } from \"react\";\r\nimport Row from \"../models/Row\";\r\nimport SudokuCell from \"./SudokuCell\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  sudokuRow: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport interface ISudokuRowProps extends WithStyles<typeof styles> {\r\n  row: Row;\r\n  rowSize: number;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nclass SudokuRowComponent extends Component<ISudokuRowProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.sudokuRow}>\r\n        {this.renderRow()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRow(): JSX.Element[] | null {\r\n    return this.props.row\r\n      .getCells()\r\n      .map((c, i) => <SudokuCell mode={this.props.mode} toggleCell={this.props.toggleCell} cell={c} size={this.getCellSize()} key={i} />);\r\n  }\r\n\r\n  private getCellSize(): number {\r\n    return this.props.rowSize / 9;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuRowComponent);","import React, { Component, CSSProperties } from \"react\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport SudokuRow from \"./SudokuRow\";\r\nimport { createNewGame, toggleCell } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, WithStyles, createStyles, Theme } from \"@material-ui/core\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    position: 'relative',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n      paddingBottom: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      height: 'calc(100vh - 2*64px - 100px)',\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  sudokuPaper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    padding: theme.spacing.unit\r\n  }\r\n});\r\n\r\nexport interface ISudokuProps extends WithStyles<typeof styles> {\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n  createNewGame: typeof createNewGame;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nexport interface ISudokuState {\r\n  rowSize: number;\r\n}\r\n\r\nclass SudokuComponent extends Component<ISudokuProps, ISudokuState> {\r\n  private containerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: ISudokuProps) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.state = {\r\n      rowSize: 0\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} ref={this.containerRef}>\r\n        <Paper className={classes.sudokuPaper} >\r\n          {this.renderRows()}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setCellSize();\r\n  }\r\n\r\n  private setCellSize = () => {\r\n    const rowDOM = this.containerRef.current;\r\n    if (rowDOM) {\r\n      const boundingRectangle = rowDOM.getBoundingClientRect();\r\n      const height = boundingRectangle.height - 100;\r\n      const width = boundingRectangle.width\r\n      const smallestDimmesion = height < width ? height : width;\r\n      const fittedDimmension = 9 * Math.floor(smallestDimmesion / 9);\r\n      this.setState({\r\n        rowSize: fittedDimmension\r\n      });\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        this.setCellSize();\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderRows(): JSX.Element[] | null {\r\n    if (!this.state.rowSize) {\r\n      return null;\r\n    }\r\n    return this.props.sudoku.getRows().map((r, i) => (\r\n      <SudokuRow mode={this.props.mode} row={r} key={i} rowSize={this.state.rowSize} toggleCell={this.props.toggleCell} />\r\n    ));\r\n  }\r\n\r\n  private formatMillisecons(milliSeconds: number): string {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SudokuComponent);","import React from 'react';\r\n\r\nimport { setDigit, removeDigit, setMode, redo, undo } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport { Paper, createStyles, Theme, WithStyles, withStyles, LinearProgress } from '@material-ui/core';\r\nimport Chip, { ChipProps } from '@material-ui/core/Chip'\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    paddingTop: theme.spacing.unit,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  progress: {\r\n    borderBottomRightRadius: theme.spacing.unit / 2,\r\n    borderBottomLeftRadius: theme.spacing.unit / 2\r\n  },\r\n  errorBar: {\r\n    backgroundColor: theme.palette.error.light\r\n  },\r\n  successBar: {\r\n    backgroundColor: '#66bb6a'\r\n  },\r\n  chip: {\r\n    margin: '4px 2px 4px 2px'\r\n  }\r\n});\r\n\r\ninterface INumbersProps extends WithStyles<typeof styles> {\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst INumbers: React.FunctionComponent<INumbersProps> = props => {\r\n  const { classes } = props;\r\n  const isNoteMode = props.mode === MODE.Note;\r\n  const sudoku = props.sudoku;\r\n  const isSolved = sudoku.isSolved();\r\n  const showRedProgressBar = sudoku.countEmptyCells() === 0 && !isSolved;\r\n  const progress = ((props.difficulty - props.sudoku.countEmptyCells()) / props.difficulty) * 100\r\n\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper>\r\n        {[...Array(10).keys()].slice(1).map(x => {\r\n          let color: ChipProps['color'] = 'primary';\r\n          if (props.sudoku.isDigitSolved(x)) {\r\n            color = 'default';\r\n          } else if (isNoteMode) {\r\n            color = 'secondary';\r\n          }\r\n          return (\r\n            <Chip onClick={() => props.setDigit(x)} color={color} className={classes.chip} label={x} key={x} />\r\n          );\r\n        })}\r\n        <LinearProgress className={classes.progress}\r\n          classes={{\r\n            bar: showRedProgressBar ? classes.errorBar : \"\"\r\n          }}\r\n          variant=\"determinate\"\r\n          value={progress}\r\n        />\r\n      </Paper>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(INumbers);","import React, { Component } from 'react';\r\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\nimport { changeDifficulty, validateSolution, createNewGame, toggleNightMode, resetSudoku, fillCandidates } from '../store/actions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport VeryEasyIcon from '@material-ui/icons/LooksOne';\r\nimport EasyIcon from '@material-ui/icons/LooksTwo';\r\nimport NormalIcon from '@material-ui/icons/Looks3';\r\nimport HardIcon from '@material-ui/icons/Looks4';\r\nimport VeryHardIcon from '@material-ui/icons/Looks5';\r\nimport NewIcon from '@material-ui/icons/FiberNew';\r\nimport ResetIcon from '@material-ui/icons/Restore';\r\nimport ValidateIcon from '@material-ui/icons/Check';\r\nimport ChildFriendlyIcon from '@material-ui/icons/ChildFriendly';\r\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\r\nimport Sudoku from '../models/Sudoku';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerPaper: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      minWidth: '70%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: '40%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      minWidth: '30%'\r\n    }\r\n  },\r\n  notesToggle: {\r\n    color: theme.palette.common.white\r\n  },\r\n  snackbar: {\r\n    color: theme.palette.type === \"dark\" ? theme.palette.common.black : theme.palette.primary.contrastText\r\n  }\r\n});\r\n\r\nexport interface ITopBarProps extends WithStyles<typeof styles> {\r\n  difficulty: DIFFICULTY;\r\n  sudoku: Sudoku;\r\n  changeDifficulty: typeof changeDifficulty;\r\n  validateSolution: typeof validateSolution;\r\n  createNewGame: typeof createNewGame;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  nightMode: boolean;\r\n  resetSudoku: typeof resetSudoku;\r\n  fillCandidates: typeof fillCandidates;\r\n}\r\nexport interface ITopBarState {\r\n  drawerOpen: boolean;\r\n  showSnackbar: boolean;\r\n}\r\n\r\nconst DIFFICUTIES = [{\r\n  difficulty: DIFFICULTY.VeryEasy,\r\n  label: \"Very Easy\",\r\n  icon: <VeryEasyIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.Easy,\r\n  label: \"Easy\",\r\n  icon: <EasyIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.Normal,\r\n  label: \"Normal\",\r\n  icon: <NormalIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.Hard,\r\n  label: \"Hard\",\r\n  icon: <HardIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.VeryHard,\r\n  label: \"Very Hard\",\r\n  icon: <VeryHardIcon />\r\n}]\r\n\r\nclass TopBar extends Component<ITopBarProps, ITopBarState> {\r\n  constructor(props: ITopBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n      showSnackbar: false\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" onClick={() => this.openDrawer()}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {this.getBarText()}\r\n            </Typography>\r\n            <FormControlLabel\r\n              classes={{ label: classes.notesToggle }}\r\n              label=\"Night mode\"\r\n              labelPlacement=\"start\"\r\n              onClick={() => this.props.toggleNightMode()}\r\n              control={<Switch checked={this.props.nightMode} />}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"temporary\" classes={{ paper: classes.drawerPaper }} open={this.state.drawerOpen} onClose={() => this.closeDrawer()}>\r\n          <List>\r\n            <ListSubheader>Puzzle</ListSubheader>\r\n            <Divider />\r\n            <ListItem button onClick={() => this.createNewGame()}>\r\n              <ListItemIcon>\r\n                <NewIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"New game\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.reset()} >\r\n              <ListItemIcon>\r\n                <ResetIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Reset\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.validate()} >\r\n              <ListItemIcon>\r\n                <ValidateIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Show invalid cells\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.fillCandidates()} >\r\n              <ListItemIcon>\r\n                <ChildFriendlyIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Fill candidates\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListSubheader>Difficulty</ListSubheader>\r\n            <Divider />\r\n            {this.renderDifficulties()}\r\n          </List>\r\n        </Drawer>\r\n        <Snackbar anchorOrigin={{\r\n          horizontal: 'center',\r\n          vertical: 'bottom'\r\n        }}\r\n          message={<span className={classes.snackbar}>No invalid cells!</span>}\r\n          open={this.state.showSnackbar}\r\n          action={\r\n            <IconButton\r\n              color=\"inherit\"\r\n              onClick={() => this.setState({ showSnackbar: false })}>\r\n              <CloseIcon />\r\n            </IconButton>}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private openDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: true\r\n    });\r\n  }\r\n\r\n  private closeDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: false\r\n    });\r\n  }\r\n\r\n  private renderDifficulties(): JSX.Element[] {\r\n    return DIFFICUTIES.map(option => (\r\n      <ListItem\r\n        button\r\n        key={option.difficulty}\r\n        selected={this.props.difficulty === option.difficulty}\r\n        onClick={() => this.setDifficulty(option.difficulty)}>\r\n        <ListItemIcon>\r\n          {option.icon}\r\n        </ListItemIcon>\r\n        <ListItemText primary={option.label} />\r\n      </ListItem>\r\n    ));\r\n  }\r\n\r\n  private setDifficulty(difficulty: DIFFICULTY): void {\r\n    this.closeDrawer();\r\n    this.props.changeDifficulty(difficulty);\r\n  }\r\n\r\n  private validate(): void {\r\n    this.closeDrawer();\r\n    this.props.validateSolution();\r\n    if (this.props.sudoku.isValid()) {\r\n      this.setState({\r\n        showSnackbar: true\r\n      })\r\n      setTimeout(() => {\r\n        this.setState({\r\n          showSnackbar: false\r\n        })\r\n      }, 2 * 1000)\r\n    }\r\n  }\r\n\r\n  private getBarText(): string {\r\n    const difficulty = DIFFICUTIES.find(option => option.difficulty === this.props.difficulty);\r\n    if (difficulty) {\r\n      return `${difficulty.label}`;\r\n    }\r\n    return \"\";\r\n  }\r\n  private createNewGame(): void {\r\n    this.closeDrawer();\r\n    this.props.createNewGame();\r\n  }\r\n\r\n  private reset(): void {\r\n    this.closeDrawer();\r\n    this.props.resetSudoku();\r\n  }\r\n\r\n  private fillCandidates(): void {\r\n    this.closeDrawer();\r\n    this.props.fillCandidates();\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopBar);","import React, { Fragment } from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { undo, redo, removeDigit, setMode } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PenIcon from \"@material-ui/icons/Edit\";\r\nimport PenIconOutline from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  modeFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 25% 0 auto'\r\n  },\r\n  clearFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto 0 25%'\r\n  },\r\n});\r\n\r\nexport interface IBottomBarProps extends WithStyles<typeof styles> {\r\n  undo: typeof undo;\r\n  redo: typeof redo;\r\n  removeDigit: typeof removeDigit;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n}\r\n\r\nconst BottomBar: React.FunctionComponent<IBottomBarProps> = (props: IBottomBarProps) => {\r\n  const isNoteMode = props.mode === MODE.Note\r\n  const toggleMode = () => {\r\n    if (isNoteMode) {\r\n      props.setMode(MODE.Input);\r\n    } else {\r\n      props.setMode(MODE.Note);\r\n    }\r\n  }\r\n\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Fab color=\"primary\" className={classes.clearFab} onClick={() => props.removeDigit()}>\r\n          <ClearIcon />\r\n        </Fab>\r\n        <IconButton color=\"inherit\" disabled={!props.past.length} onClick={() => props.undo()}>\r\n          <UndoIcon />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" disabled={!props.future.length} onClick={() => props.redo()}>\r\n          <RedoIcon />\r\n        </IconButton>\r\n        <Fab color={isNoteMode ? 'secondary' : 'default'} className={classes.modeFab} onClick={() => toggleMode()}>\r\n          {isNoteMode ? <PenIconOutline /> : <PenIcon />}\r\n        </Fab>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(BottomBar);\r\n","import React from 'react';\r\nimport { withStyles, Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button, createStyles, Theme, WithTheme, WithStyles, Typography } from \"@material-ui/core\";\r\nimport { createNewGame } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n})\r\n\r\nexport interface ICompletedDialogProps extends WithStyles<typeof styles> {\r\n  createNewGame: typeof createNewGame;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst CompletedDialog: React.FunctionComponent<ICompletedDialogProps> = (props: ICompletedDialogProps) => {\r\n  const formatMillisecons = (milliSeconds: number) => {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const difficultyText = () => {\r\n    switch (props.difficulty) {\r\n      case DIFFICULTY.VeryEasy:\r\n        return 'a very easy';\r\n      case DIFFICULTY.Easy:\r\n        return 'an easy';\r\n      case DIFFICULTY.Normal:\r\n        return 'a normal';\r\n      case DIFFICULTY.Hard:\r\n        return 'a hard';\r\n      case DIFFICULTY.VeryHard:\r\n        return 'a very hard';\r\n      case DIFFICULTY.Insane:\r\n        return 'an insane';\r\n      default:\r\n        return 'an unknown';\r\n    }\r\n  }\r\n\r\n  const ellapsedTime = formatMillisecons(Date.now() - props.sudoku.getCreationTimestamp())\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xl\"\r\n      open={props.sudoku.isSolved()}\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Done!</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          You completed a {difficultyText()} puzzle.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Ellapsed time: {ellapsedTime}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => { props.createNewGame() }}>\r\n          New Game\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CompletedDialog);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../layout/App.scss\";\r\nimport SudokuComponent from \"./Sudoku\";\r\nimport Numbers from \"./Numbers\";\r\nimport { AppState } from \"../store\";\r\nimport { changeDifficulty, createNewGame, validateSolution, toggleCell, setDigit, removeDigit, navigateCells, setMode, redo, undo, toggleNightMode, resetSudoku, fillCandidates } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport TopBar from \"./TopBar\";\r\nimport BottomBar from \"./BottomBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport CompletedDialog from \"./CompletedDialog\";\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport theme from \"../theme\";\r\n\r\ninterface IAppProps {\r\n  changeDifficulty: typeof changeDifficulty;\r\n  createNewGame: typeof createNewGame;\r\n  validateSolution: typeof validateSolution;\r\n  toggleCell: typeof toggleCell;\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  navigateCells: typeof navigateCells;\r\n  setMode: typeof setMode;\r\n  undo: typeof undo,\r\n  redo: typeof redo,\r\n  mode: MODE;\r\n  sudoku: Sudoku;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  difficulty: DIFFICULTY;\r\n  nightMode: boolean;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  resetSudoku: typeof resetSudoku;\r\n  fillCandidates: typeof fillCandidates;\r\n}\r\n\r\nclass App extends Component<IAppProps> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const t = theme(this.props.nightMode)\r\n    return (\r\n      <div className=\"App\">\r\n        <MuiThemeProvider theme={t}>\r\n          <CssBaseline />\r\n          <TopBar {...this.props} />\r\n          <div className=\"App-content\">\r\n            <SudokuComponent {...this.props} />\r\n            <Numbers {...this.props} />\r\n          </div>\r\n          <CompletedDialog {...this.props}></CompletedDialog>\r\n          <BottomBar {...this.props} />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  public componentDidMount(): void {\r\n    document.addEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  private handleKeyboard = (e: KeyboardEvent) => {\r\n    const key = e.which;\r\n    if (key >= 49 && key <= 57) { // [1...9]\r\n      this.props.setDigit(key - 48);\r\n    } else if (key === 8 || key === 2) { // backspace || delete\r\n      this.props.removeDigit()\r\n    } else if (key === 37) { //left \r\n      this.props.navigateCells(DIRECTION.Left);\r\n    } else if (key === 38) { //up\r\n      this.props.navigateCells(DIRECTION.Up);\r\n    } else if (key === 39) { // right\r\n      this.props.navigateCells(DIRECTION.Right);\r\n    } else if (key === 40) { // down\r\n      this.props.navigateCells(DIRECTION.Down);\r\n    } else if (key === 32) { // space\r\n      this.props.setMode(this.props.mode !== MODE.Note ? MODE.Note : MODE.Input)\r\n    } else if (key === 27) { // esc\r\n      this.props.setMode(MODE.Input)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  sudoku: state.game.sudoku.current,\r\n  past: state.game.sudoku.past,\r\n  future: state.game.sudoku.future,\r\n  difficulty: state.game.difficulty,\r\n  mode: state.game.mode,\r\n  nightMode: state.game.nightMode\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeDifficulty,\r\n    createNewGame,\r\n    validateSolution,\r\n    toggleCell,\r\n    setDigit,\r\n    removeDigit,\r\n    navigateCells,\r\n    setMode,\r\n    undo,\r\n    redo,\r\n    toggleNightMode,\r\n    resetSudoku,\r\n    fillCandidates\r\n  }\r\n)(App);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default (nightMode: boolean) => {\r\n  return createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    palette: {\r\n      type: nightMode ? 'dark' : 'light',\r\n      primary: {\r\n        main: '#424242'\r\n      },\r\n      secondary: {\r\n        main: '#616161'\r\n      }\r\n    },\r\n  });\r\n};","import {\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  REMOVE_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  DIRECTION,\r\n  TOGGLE_NOTE_MODE,\r\n  REDO,\r\n  UNDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU,\r\n  FILL_CANDIDATES\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport function changeDifficulty(difficulty: DIFFICULTY): OptionActions {\r\n  return {\r\n    type: CHANGE_DIFFICULTY,\r\n    payload: difficulty\r\n  };\r\n}\r\n\r\nexport function createNewGame(): OptionActions {\r\n  return {\r\n    type: NEW_GAME\r\n  };\r\n}\r\n\r\nexport function validateSolution(): OptionActions {\r\n  return {\r\n    type: VALIDATE_SOLUTION\r\n  };\r\n}\r\n\r\nexport function toggleCell(row: number, column: number): OptionActions {\r\n  return {\r\n    type: TOGGLE_CELL,\r\n    payload: {\r\n      row,\r\n      column\r\n    }\r\n  };\r\n}\r\n\r\nexport function setDigit(digit: number): OptionActions {\r\n  return {\r\n    type: SET_DIGIT,\r\n    payload: {\r\n      digit\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeDigit(): OptionActions {\r\n  return {\r\n    type: REMOVE_DIGIT\r\n  };\r\n}\r\n\r\nexport function navigateCells(direction: DIRECTION): OptionActions {\r\n  return {\r\n    type: NAVIGATE_CELLS,\r\n    payload: {\r\n      direction\r\n    }\r\n  };\r\n}\r\n\r\nexport function setMode(mode: MODE): OptionActions {\r\n  return {\r\n    type: TOGGLE_NOTE_MODE,\r\n    payload: {\r\n      mode\r\n    }\r\n  }\r\n}\r\n\r\nexport function undo(): OptionActions {\r\n  return {\r\n    type: UNDO,\r\n  };\r\n}\r\n\r\nexport function redo(): OptionActions {\r\n  return {\r\n    type: REDO\r\n  };\r\n}\r\n\r\nexport function toggleNightMode(): OptionActions {\r\n  return {\r\n    type: TOGGLE_NIGHT_MODE\r\n  };\r\n}\r\n\r\nexport function resetSudoku(): OptionActions {\r\n  return {\r\n    type: RESET_SUDOKU\r\n  };\r\n}\r\n\r\nexport function fillCandidates(): OptionActions {\r\n  return {\r\n    type: FILL_CANDIDATES\r\n  };\r\n}\r\n","import \"./layout/index.scss\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport configureStore from \"./store\";\r\nimport App from \"./presentation/App\";\r\nimport pregenerate from \"./utils/pregenerate\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).pregenerate = pregenerate;\r\n}\r\n"],"sourceRoot":""}