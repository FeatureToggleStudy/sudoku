{"version":3,"sources":["workers/GeneratePuzzle.worker.ts","serviceWorker.ts","store/types.ts","models/Difficulty.ts","models/Cell.ts","models/Row.ts","models/Sudoku.ts","PuzzleStorage.ts","store/reducers.ts","store/index.ts","presentation/SudokuCell.tsx","presentation/SudokuRow.tsx","presentation/Sudoku.tsx","presentation/Numbers.tsx","presentation/TopBar.tsx","presentation/BottomBar.tsx","presentation/CompletedDialog.tsx","presentation/App.tsx","theme.ts","store/actions.ts","index.tsx"],"names":["module","exports","Worker","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DIRECTION","MODE","DIFFICULTY","CHANGE_DIFFICULTY","NEW_GAME","VALIDATE_SOLUTION","TOGGLE_CELL","SET_DIGIT","REMOVE_DIGIT","NAVIGATE_CELLS","TOGGLE_NOTE_MODE","UNDO","REDO","TOGGLE_NIGHT_MODE","RESET_SUDOKU","NO_NOTES","Cell","previous","Object","classCallCheck","this","value","valid","solution","row","column","given","active","notes","guess","concat","calculateBlock","modifier","cell","digit","mode","Note","map","x","i","Guess","Row","cells","index","c","validate","setActive","isActive","getColumn","setDigit","removeDigit","data","toConsumableArray","_ref","_ref2","slicedToArray","create","Sudoku","rows","activeCell","createdAt","sudoku","r","toggleCell","allNumbers","reduce","acc","next","getCells","getValue","solved","_loop","filter","n","length","push","dirrection","increment","val","decrement","Up","Down","Right","Left","activateCell","every","isSolved","some","sum","isGiven","Date","now","d","EMPTY_DATA","src_PuzzleStorage","PuzzleStorage","_this","worker","inititializeStorage","GeneratePuzzleWorker","addEventListener","e","addPuzzle","hasLocalStorageKeys","_puzzles","puzzles","defineProperty","VeryEasy","saveJSONPuzzles","Puzzles","Easy","Normal","Hard","VeryHard","save","localStorage","_this2","id","uuid","puzzle","decodedPuzle","forEach","difficulty","puzzleMap","load","shift","decodeStoredPuzzle","postMessage","message","puzzleData","key","setItem","JSON","stringify","parse","initialDifficulty","fallBack","getItem","readDifficulty","initialNightMode","readNightMode","initialState","past","current","getPuzzle","future","Input","nightMode","rootReducer","combineReducers","game","arguments","undefined","action","type","payload","toString","objectSpread","navigate","direction","SET_MODE","slice","writeNightMode","SudokuCellComponent","classes","props","react_default","a","createElement","className","container","onClick","handleClick","calculateClasses","renderContent","style","fontSize","size","getNotes","Math","ceil","cellClasses","note1","note2","note3","note4","note5","note6","note7","note8","note9","Fragment","getRow","_result","block","getBlock","result","content","thickBorderTop","thickBorderBottom","thickBorderLeft","thickBorderRight","dark","invalid","isValid","keys","join","Component","withStyles","theme","borderThin","palette","common","black","borderThick","createStyles","display","position","width","paddingBottom","textAlign","userSelect","justifyContent","alignItems","top","right","bottom","left","borderRight","borderBottom","color","grey","borderTop","borderLeft","backgroundColor","primary","light","fontWeight","contrastText","SudokuRowComponent","sudokuRow","renderRow","SudokuCell","getCellSize","rowSize","SudokuComponent","possibleConstructorReturn","getPrototypeOf","call","containerRef","setCellSize","rowDOM","boundingRectangle","getBoundingClientRect","height","smallestDimmesion","fittedDimmension","floor","setState","requestAnimationFrame","React","createRef","ref","Paper_default","sudokuPaper","renderRows","getRows","SudokuRow","milliSeconds","pad","num","round","padStart","seconds","minutes","hours","marginLeft","marginRight","@media (orientation: portrait)","@media (orientation: landscape)","padding","spacing","unit","paddingTop","progress","borderBottomRightRadius","borderBottomLeftRadius","chip","margin","index_es","Array","isDigitSolved","Chip_default","label","variant","countSolvedCells","DIFFICUTIES","icon","LooksOne_default","LooksTwo_default","Looks3_default","Looks4_default","Looks5_default","TopBar","drawerOpen","AppBar_default","Toolbar_default","IconButton_default","menuButton","openDrawer","Menu_default","Typography_default","grow","getBarText","FormControlLabel_default","notesToggle","labelPlacement","toggleNightMode","control","Switch_default","checked","Drawer_default","paper","drawerPaper","open","onClose","closeDrawer","List_default","ListSubheader_default","Divider_default","ListItem_default","button","createNewGame","ListItemIcon_default","FiberNew_default","ListItemText_default","reset","Restore_default","Check_default","renderDifficulties","_this3","option","selected","setDifficulty","changeDifficulty","validateSolution","_this4","find","resetSudoku","_drawerPaper","flexGrow","breakpoints","down","minWidth","up","white","appBar","toolbar","modeFab","zIndex","clearFab","Fab_default","Clear_default","disabled","undo","Undo_default","redo","Redo_default","setMode","Edit_default","ellapsedTime","formatMillisecons","getCreationTimestamp","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","gutterBottom","Insane","difficultyText","App","handleKeyboard","which","navigateCells","t","createMuiTheme","typography","useNextVariants","main","secondary","MuiThemeProvider_default","CssBaseline_default","presentation_TopBar","presentation_Sudoku","Numbers","presentation_CompletedDialog","presentation_BottomBar","document","removeEventListener","connect","store","createStore","ReactDOM","render","es","presentation_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3bd6daea.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ce6051675018ac10eb74.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport interface IGameState {\r\n  difficulty: DIFFICULTY;\r\n  sudoku: {\r\n    past: Sudoku[];\r\n    current: Sudoku;\r\n    future: Sudoku[];\r\n  };\r\n  mode: MODE;\r\n  nightMode: boolean;\r\n}\r\n\r\nexport enum DIRECTION {\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right\r\n}\r\n\r\nexport enum MODE {\r\n  Input,\r\n  Note,\r\n  Guess\r\n}\r\n\r\nexport const CHANGE_DIFFICULTY = \"CHANGE_DIFFICULTY\";\r\nexport const NEW_GAME = \"NEW_GAME\";\r\nexport const VALIDATE_SOLUTION = \"VALIDATE_SOLUTION\";\r\nexport const TOGGLE_CELL = \"TOGGLE_CELLs\";\r\nexport const SET_DIGIT = \"SET_DIGIT\";\r\nexport const REMOVE_DIGIT = \"REMOVE_DIGIT\";\r\nexport const NAVIGATE_CELLS = \"NAVIGATE_CELLS\";\r\nexport const TOGGLE_NOTE_MODE = \"TOGGLE_NOTE_MODE\";\r\nexport const UNDO = \"UNDO\";\r\nexport const REDO = \"REDO\";\r\nexport const TOGGLE_NIGHT_MODE = \"TOGGLE_NIGHT_MODE\";\r\nexport const RESET_SUDOKU = \"RESET_SUDOKU\";\r\n\r\ninterface IChangeDifficultyAction {\r\n  type: typeof CHANGE_DIFFICULTY;\r\n  payload: DIFFICULTY;\r\n}\r\n\r\ninterface INewGameAction {\r\n  type: typeof NEW_GAME;\r\n}\r\n\r\ninterface IValidateSolutionAction {\r\n  type: typeof VALIDATE_SOLUTION;\r\n}\r\n\r\ninterface IToggleCellAction {\r\n  type: typeof TOGGLE_CELL;\r\n  payload: {\r\n    row: number;\r\n    column: number;\r\n  }\r\n}\r\n\r\ninterface ISetDigitAction {\r\n  type: typeof SET_DIGIT;\r\n  payload: {\r\n    digit: number;\r\n  }\r\n}\r\n\r\ninterface IRemoveDigitAction {\r\n  type: typeof REMOVE_DIGIT;\r\n}\r\n\r\ninterface INavigateCellsAction {\r\n  type: typeof NAVIGATE_CELLS;\r\n  payload: {\r\n    direction: DIRECTION;\r\n  }\r\n}\r\n\r\ninterface ISetModeAction {\r\n  type: typeof TOGGLE_NOTE_MODE;\r\n  payload: {\r\n    mode: MODE\r\n  }\r\n}\r\ninterface IUndoAction {\r\n  type: typeof UNDO;\r\n}\r\ninterface IRedoAction {\r\n  type: typeof REDO;\r\n}\r\ninterface IToggleNightModeAction {\r\n  type: typeof TOGGLE_NIGHT_MODE;\r\n}\r\n\r\ninterface IResetSudokuAction {\r\n  type: typeof RESET_SUDOKU;\r\n}\r\n\r\nexport type OptionActions = IChangeDifficultyAction\r\n  | INewGameAction\r\n  | IValidateSolutionAction\r\n  | IToggleCellAction\r\n  | ISetDigitAction\r\n  | IRemoveDigitAction\r\n  | INavigateCellsAction\r\n  | ISetModeAction\r\n  | IUndoAction\r\n  | IRedoAction\r\n  | IToggleNightModeAction\r\n  | IResetSudokuAction;","\r\nexport enum DIFFICULTY {\r\n  VeryEasy = 30,\r\n  Easy = 36,\r\n  Normal = 42,\r\n  Hard = 48,\r\n  VeryHard = 54,\r\n  Insane = 60\r\n\r\n}","import { MODE } from \"../store/types\";\r\n\r\nconst NO_NOTES = [false, false, false, false, false, false, false, false, false];\r\n\r\nexport default class Cell {\r\n  private value: number | null;\r\n  private valid: boolean;\r\n  private solution: number;\r\n  private row: number;\r\n  private column: number;\r\n  private given: boolean;\r\n  private active: boolean;\r\n  private notes: boolean[];\r\n  private guess: boolean;\r\n\r\n  private constructor(previous?: Cell) {\r\n    this.value = previous ? previous.value : null;\r\n    this.solution = previous ? previous.solution : -1;\r\n    this.row = previous ? previous.row : -1;\r\n    this.column = previous ? previous.column : -1;\r\n    this.given = previous ? previous.given : false;\r\n    this.active = previous ? previous.active : false;\r\n    this.valid = previous ? previous.valid : true;\r\n    this.notes = previous ? previous.notes : [...NO_NOTES];\r\n    this.guess = previous ? previous.guess : false;\r\n  }\r\n\r\n  static create(solution: number, row: number, column: number, given: boolean): Cell {\r\n    const cell = new Cell();\r\n    cell.solution = solution;\r\n    cell.row = row;\r\n    cell.column = column;\r\n    cell.given = given;\r\n    cell.value = given ? solution : null;\r\n    return cell;\r\n  }\r\n\r\n  public getSolution(): number {\r\n    return this.solution;\r\n  }\r\n\r\n  public getValue(): number | null {\r\n    return this.value;\r\n  }\r\n\r\n  public getRow(): number {\r\n    return this.row;\r\n  }\r\n\r\n  public getColumn(): number {\r\n    return this.column;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public getBlock(): number {\r\n    if (this.row <= 3) {\r\n      return this.calculateBlock(0);\r\n    } else if (this.row >= 4 && this.row <= 6) {\r\n      return this.calculateBlock(1);\r\n    } else {\r\n      return this.calculateBlock(2);\r\n    }\r\n  }\r\n\r\n  private calculateBlock(modifier: number): number {\r\n    if (this.column <= 3) {\r\n      return modifier + 1;\r\n    } else if (this.column >= 4 && this.column <= 6) {\r\n      return modifier + 2;\r\n    } else {\r\n      return modifier + 3;\r\n    }\r\n  }\r\n\r\n  public isGiven(): boolean {\r\n    return this.given;\r\n  }\r\n\r\n  public validate(): Cell {\r\n    const cell = new Cell(this)\r\n    cell.valid = this.value === null || this.value === this.solution;\r\n    if (cell.valid) {\r\n      cell.active = false;\r\n    }\r\n    return cell;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.valid;\r\n  }\r\n\r\n  public setActive(active: boolean): Cell {\r\n    const cell = new Cell(this);\r\n    cell.active = active;\r\n    return cell;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    if (mode === MODE.Note) {\r\n      cell.notes = this.notes.map((x, i) => i === (digit - 1) ? !x : x)\r\n    } else {\r\n      if (cell.guess) {\r\n        cell.value = digit;\r\n      } else {\r\n        cell.value = this.value === digit ? null : digit;\r\n      }\r\n    }\r\n    cell.guess = mode === MODE.Guess;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public removeDigit(): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    cell.notes = [...NO_NOTES];\r\n    cell.value = null;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.value === this.solution;\r\n  }\r\n\r\n  public getNotes(): boolean[] {\r\n    return this.notes;\r\n  }\r\n\r\n  public isGuess(): boolean {\r\n    return this.guess;\r\n  }\r\n}\r\n","import Cell from \"./Cell\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\n\r\nexport default class Row {\r\n  private cells: Cell[];\r\n  private index: number;\r\n  private active: boolean;\r\n\r\n  private constructor(previous?: Row) {\r\n    this.index = previous ? previous.index : -1;\r\n    this.active = previous ? previous.active : false;\r\n    this.cells = previous ? previous.cells : [];\r\n  }\r\n\r\n  static create(data: [number, boolean][], index: number): Row {\r\n    const row = new Row();\r\n    row.cells = [...data.map(([value, given], i) => Cell.create(value, index, i + 1, given))];\r\n    row.index = index;\r\n    return row;\r\n  }\r\n\r\n  public getCells(): Cell[] {\r\n    return this.cells;\r\n  }\r\n\r\n  public validate(): Row {\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.validate());\r\n    return row;\r\n  }\r\n\r\n  public getIndex(): number {\r\n    return this.index;\r\n  }\r\n\r\n  public toggleCell(index: number, column: number): Row {\r\n    if (this.index !== index && !this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n\r\n    if (this.active) {\r\n      if (this.index === index) {\r\n        row.cells = this.cells.map(c => {\r\n          return c.setActive(c.isActive() ? false : c.getColumn() === column);\r\n        });\r\n      } else {\r\n        row.active = false;\r\n        row.cells = this.cells.map(c => c.isActive() ? c.setActive(false) : c);\r\n      }\r\n    } else if (this.index === index) {\r\n      row.active = true;\r\n      row.cells = this.cells.map(c => c.getColumn() === column ? c.setActive(true) : c);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.setDigit(digit, mode));\r\n    return row;\r\n  }\r\n\r\n  public removeDigit(): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.removeDigit());\r\n    return row;\r\n  }\r\n\r\n}\r\n","import Row from \"./Row\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport Cell from \"./Cell\";\r\n\r\nexport default class Sudoku {\r\n  private rows: Row[];\r\n  private activeCell: { row: number, column: number };\r\n  private createdAt: number;\r\n\r\n  private constructor(previous?: Sudoku) {\r\n    this.rows = previous ? previous.rows : [];\r\n    this.activeCell = previous ? previous.activeCell : { row: -1, column: -1 }\r\n    this.createdAt = previous ? previous.createdAt : 0;\r\n  }\r\n\r\n  static create(data: ([number, boolean])[][]): Sudoku {\r\n    const sudoku = new Sudoku();\r\n    sudoku.createdAt = Date.now();\r\n    sudoku.rows = data.map((d, i) => Row.create(d, i + 1));\r\n    return sudoku\r\n  }\r\n\r\n  public getRows(): Row[] {\r\n    return this.rows;\r\n  }\r\n\r\n  public validate(): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.rows = this.rows.map(r => r.validate());\r\n    return sudoku;\r\n  }\r\n\r\n  public activateCell(row: number, column: number): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.activeCell = { row, column };\r\n    sudoku.rows = this.rows.map(r => r.toggleCell(row, column));\r\n    return sudoku;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.setDigit(digit, mode));\r\n    return sudoku;\r\n  }\r\n\r\n  public removeDigit(): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.removeDigit());\r\n    return sudoku;\r\n  }\r\n\r\n  public getSolvedNumbers(): number[] {\r\n    const allNumbers = this.rows.reduce((acc: number[], next: Row) =>\r\n      acc.concat(next.getCells().map(c => c.getValue() || 0), []),\r\n      []\r\n    );\r\n    const solved = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      if (allNumbers.filter(n => n === i).length === 9) {\r\n        solved.push(i);\r\n      }\r\n    }\r\n    return solved;\r\n  }\r\n\r\n  public navigate(dirrection: DIRECTION): Sudoku {\r\n    const increment = (val: number) => val === 9 ? 1 : val + 1;\r\n    const decrement = (val: number) => val === 1 ? 9 : val - 1;\r\n\r\n    switch (dirrection) {\r\n      case DIRECTION.Up:\r\n        this.activeCell.row = decrement(this.activeCell.row);\r\n        break;\r\n      case DIRECTION.Down:\r\n        this.activeCell.row = increment(this.activeCell.row);\r\n        break;\r\n      case DIRECTION.Right:\r\n        this.activeCell.column = increment(this.activeCell.column);\r\n        break;\r\n      case DIRECTION.Left:\r\n        this.activeCell.column = decrement(this.activeCell.column);\r\n        break;\r\n    }\r\n    return this.activateCell(this.activeCell.row, this.activeCell.column);\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.rows.every(r => r.getCells().every(c => c.isSolved()))\r\n  }\r\n\r\n  public getCreationTimestamp(): number {\r\n    return this.createdAt;\r\n  }\r\n\r\n  public isDigitSolved(digit: number): boolean {\r\n    return this.rows.every(r => r.getCells().some(c => c.getValue() === digit && c.isSolved()));\r\n  }\r\n\r\n  public countSolvedCells(): number {\r\n    const cells = this.rows.reduce((acc, row) => acc.concat(row.getCells()), [] as Cell[])\r\n    return cells.reduce((sum, cell) => {\r\n      if (cell.isSolved() && !cell.isGiven()) {\r\n        return sum + 1;\r\n      }\r\n      return sum;\r\n    }, 0)\r\n  }\r\n}\r\n","\r\nimport Puzzles from \"./puzzles.json\"\r\nimport { DIFFICULTY } from \"./models/Difficulty\";\r\nimport Sudoku from \"./models/Sudoku\";\r\nimport GeneratePuzzleWorker from \"./workers/GeneratePuzzle.worker\"\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\nconst EMPTY_DATA: [number, boolean][][] = [\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]]\r\n]\r\n\r\nconst PUZZLE_MAP_KEY = \"PUZZLE-MAP\"\r\nconst BUFFER_SIZE = 20\r\n\r\ntype idMap = { [key: number]: string[] }\r\ntype serializedPuzzle = (number | boolean)[][][]\r\n\r\nclass PuzzleStorage {\r\n  private worker: Worker;\r\n\r\n  constructor() {\r\n    this.inititializeStorage()\r\n    this.worker = new GeneratePuzzleWorker() as Worker;\r\n    this.worker.addEventListener('message', e => this.addPuzzle(e))\r\n  }\r\n\r\n  private inititializeStorage() {\r\n    if (!this.hasLocalStorageKeys()) {\r\n      const puzzles: idMap = {\r\n        [DIFFICULTY.VeryEasy]: this.saveJSONPuzzles(Puzzles.VeryEasy),\r\n        [DIFFICULTY.Easy]: this.saveJSONPuzzles(Puzzles.Easy),\r\n        [DIFFICULTY.Normal]: this.saveJSONPuzzles(Puzzles.Normal),\r\n        [DIFFICULTY.Hard]: this.saveJSONPuzzles(Puzzles.Hard),\r\n        [DIFFICULTY.VeryHard]: this.saveJSONPuzzles(Puzzles.VeryHard)\r\n      }\r\n      this.save(PUZZLE_MAP_KEY, puzzles)\r\n    }\r\n  }\r\n\r\n  private hasLocalStorageKeys(): boolean {\r\n    return !!window.localStorage[PUZZLE_MAP_KEY]\r\n  }\r\n\r\n  private saveJSONPuzzles(puzzles: serializedPuzzle[]): string[] {\r\n    return puzzles.map(p => {\r\n      const id = uuid();\r\n      this.save(id, p)\r\n      return id;\r\n    })\r\n  }\r\n\r\n  private decodeStoredPuzzle(puzzle: serializedPuzzle): Sudoku {\r\n    const decodedPuzle = [[], [], [], [], [], [], [], [], []] as [number, boolean][][];\r\n    puzzle.forEach((row, i) => {\r\n      decodedPuzle[i] = row.map(([value, given]) => [value, given] as [number, boolean])\r\n    })\r\n    return Sudoku.create(decodedPuzle)\r\n  }\r\n\r\n  public getPuzzle(difficulty: DIFFICULTY): Sudoku {\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    const id = puzzleMap[difficulty].shift()\r\n    if (!id) {\r\n      return Sudoku.create(EMPTY_DATA)\r\n    }\r\n    const puzzle = this.load<serializedPuzzle>(id)\r\n    const sudoku = this.decodeStoredPuzzle(puzzle)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap);\r\n    this.worker.postMessage(difficulty)\r\n\r\n    if (!!sudoku) {\r\n      return sudoku\r\n    }\r\n    return Sudoku.create(EMPTY_DATA)\r\n  }\r\n\r\n  private addPuzzle(message: MessageEvent): void {\r\n    const difficulty = message.data.difficulty as DIFFICULTY;\r\n    const data = message.data.puzzleData as [number, boolean][][];\r\n    const id = uuid();\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    puzzleMap[difficulty].push(id);\r\n    this.save(id, data)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap)\r\n    if (puzzleMap[difficulty].length < BUFFER_SIZE) {\r\n      this.worker.postMessage(difficulty)\r\n    }\r\n  }\r\n\r\n  private save(key: string, data: any): void {\r\n    window.localStorage.setItem(key, JSON.stringify(data))\r\n  }\r\n\r\n  private load<T>(key: string): T {\r\n    return JSON.parse(window.localStorage[key]) as T\r\n  }\r\n}\r\n\r\nexport default new PuzzleStorage();","import {\r\n  IGameState,\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  REMOVE_DIGIT,\r\n  TOGGLE_NOTE_MODE as SET_MODE,\r\n  UNDO,\r\n  REDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU\r\n} from \"./types\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport PuzzleStorage from \"../PuzzleStorage\"\r\n\r\n\r\nconst initialDifficulty = readDifficulty(DIFFICULTY.Easy)\r\nconst initialNightMode = readNightMode(false);\r\nconst initialState: IGameState = {\r\n  difficulty: initialDifficulty,\r\n  sudoku: {\r\n    past: [],\r\n    current: PuzzleStorage.getPuzzle(initialDifficulty).activateCell(1, 1),\r\n    future: []\r\n  },\r\n  mode: MODE.Input,\r\n  nightMode: initialNightMode\r\n};\r\n\r\nexport function gameReducer(state = initialState, action: OptionActions): IGameState {\r\n  switch (action.type) {\r\n    case CHANGE_DIFFICULTY:\r\n      writeDifficulty(action.payload);\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(action.payload).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case NEW_GAME:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(state.difficulty).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case VALIDATE_SOLUTION:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.validate()\r\n        }\r\n      };\r\n    case TOGGLE_CELL:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.activateCell(action.payload.row, action.payload.column)\r\n        }\r\n      };\r\n    case SET_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.setDigit(action.payload.digit, state.mode),\r\n          future: []\r\n        }\r\n      };\r\n    case REMOVE_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.removeDigit(),\r\n          future: []\r\n        }\r\n      };\r\n    case NAVIGATE_CELLS:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.navigate(action.payload.direction)\r\n        }\r\n      };\r\n    case SET_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload.mode\r\n      };\r\n    case UNDO:\r\n      if (!state.sudoku.past.length) {\r\n        return state;\r\n      }\r\n      const previous = state.sudoku.past.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: state.sudoku.past.slice(0, -1),\r\n          current: previous,\r\n          future: [...state.sudoku.future, state.sudoku.current]\r\n        }\r\n      }\r\n    case REDO:\r\n      if (!state.sudoku.future.length) {\r\n        return state;\r\n      }\r\n      const next = state.sudoku.future.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: next,\r\n          future: state.sudoku.future.slice(0, -1)\r\n        }\r\n      }\r\n    case TOGGLE_NIGHT_MODE:\r\n      const nightMode = !state.nightMode;\r\n      writeNightMode(nightMode);\r\n      return {\r\n        ...state,\r\n        nightMode\r\n      }\r\n    case RESET_SUDOKU:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: state.sudoku.past.shift() || state.sudoku.current,\r\n          future: []\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction readDifficulty(fallBack: DIFFICULTY): DIFFICULTY {\r\n  const data = window.localStorage.getItem('DIFFICULTY');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return +data as DIFFICULTY;\r\n}\r\nfunction writeDifficulty(difficulty: DIFFICULTY) {\r\n  window.localStorage.setItem('DIFFICULTY', difficulty.toString());\r\n}\r\n\r\nfunction readNightMode(fallBack: boolean): boolean {\r\n  const data = window.localStorage.getItem('NIGHT_MODE');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return data === 'true';\r\n}\r\nfunction writeNightMode(nightMode: boolean) {\r\n  window.localStorage.setItem('NIGHT_MODE', nightMode.toString());\r\n}","import \"typeface-roboto\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nimport { gameReducer } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport Cell from \"../models/Cell\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: Theme) => {\r\n  const borderThin = `solid 1px ${theme.palette.common.black}`;\r\n  const borderThick = `solid 2px ${theme.palette.common.black}`;\r\n\r\n  return createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      width: '11.111111%',\r\n      paddingBottom: '11.111111%',\r\n      textAlign: 'center',\r\n      userSelect: \"none\",\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      borderRight: borderThin,\r\n      borderBottom: borderThin,\r\n      color: theme.palette.type === \"dark\" ? theme.palette.grey[400] : theme.palette.common.black\r\n    },\r\n    thickBorderTop: {\r\n      borderTop: borderThick\r\n    },\r\n    thickBorderBottom: {\r\n      borderBottom: borderThick\r\n    },\r\n    thickBorderLeft: {\r\n      borderLeft: borderThick\r\n    },\r\n    thickBorderRight: {\r\n      borderRight: borderThick\r\n    },\r\n    dark: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.light : theme.palette.grey[200],\r\n    },\r\n    given: {\r\n      fontWeight: 'bold'\r\n    },\r\n    invalid: {\r\n      backgroundColor: theme.palette.error.light,\r\n      color: theme.palette.error.contrastText\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.dark : theme.palette.primary.light,\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    note1: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      bottom: '66.666667%',\r\n      right: '66.666667%'\r\n    },\r\n    note2: {\r\n      position: 'absolute',\r\n      top: \"0\",\r\n      left: \"33.333333%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note3: {\r\n      position: 'absolute',\r\n      top: \"0\",\r\n      left: \"66.666667%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"0\",\r\n    },\r\n    note4: {\r\n      position: 'absolute',\r\n      top: \"33.333333%\",\r\n      left: \"0\",\r\n      bottom: \"33.333333%\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note5: {\r\n      position: 'absolute',\r\n      top: \"33.333333%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note6: {\r\n      position: 'absolute',\r\n      top: \"33.333333%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"0\",\r\n    },\r\n    note7: {\r\n      position: 'absolute',\r\n      top: \"66.666667%\",\r\n      left: \"0\",\r\n      bottom: \"0\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note8: {\r\n      position: 'absolute',\r\n      top: \"66.666667%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"0\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note9: {\r\n      position: 'absolute',\r\n      top: \"66.666667%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n    }\r\n  });\r\n}\r\n\r\nexport interface ISudokuCellComponentProps extends WithStyles<typeof styles> {\r\n  cell: Cell;\r\n  size: number;\r\n  toggleCell: typeof toggleCell\r\n}\r\n\r\nclass SudokuCellComponent extends Component<ISudokuCellComponentProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} onClick={() => this.handleClick()}>\r\n        <div className={this.calculateClasses()}>\r\n          {this.renderContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent(): JSX.Element {\r\n    const { classes } = this.props;\r\n    const value = this.props.cell.getValue();\r\n    if (!!value) {\r\n      return (\r\n        <span style={{ fontSize: `${this.props.size}px` }}>{value}</span>\r\n      );\r\n    }\r\n    const notes = this.props.cell.getNotes();\r\n    const fontSize = `${Math.ceil((this.props.size / 3))}px`;\r\n    const cellClasses = [\r\n      classes.note1,\r\n      classes.note2,\r\n      classes.note3,\r\n      classes.note4,\r\n      classes.note5,\r\n      classes.note6,\r\n      classes.note7,\r\n      classes.note8,\r\n      classes.note9\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          notes.map((x, i) => (\r\n            <span className={cellClasses[i]} key={i} style={{ fontSize: fontSize }}>\r\n              {x ? i + 1 : ''}\r\n            </span>\r\n          ))\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n\r\n  private handleClick(): void {\r\n    this.props.toggleCell(this.props.cell.getRow(), this.props.cell.getColumn())\r\n  }\r\n\r\n  private calculateClasses(): string {\r\n    const { classes } = this.props;\r\n    const cell = this.props.cell;\r\n    const row = cell.getRow();\r\n    const column = cell.getColumn();\r\n    const block = cell.getBlock();\r\n\r\n    const result = {\r\n      [classes.content]: true,\r\n      [classes.thickBorderTop]: row === 1,\r\n      [classes.thickBorderBottom]: row % 3 === 0,\r\n      [classes.thickBorderLeft]: column === 1,\r\n      [classes.thickBorderRight]: column % 3 === 0,\r\n      [classes.dark]: block % 2 === 0,\r\n      [classes.given]: cell.isGiven(),\r\n      [classes.invalid]: !cell.isValid(),\r\n      [classes.active]: cell.isActive(),\r\n    }\r\n    return Object.keys(result).filter(key => result[key]).join(' ');\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuCellComponent);","import React, { Component } from \"react\";\r\nimport Row from \"../models/Row\";\r\nimport SudokuCell from \"./SudokuCell\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { toggleCell } from \"../store/actions\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  sudokuRow: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport interface ISudokuRowProps extends WithStyles<typeof styles> {\r\n  row: Row;\r\n  rowSize: number;\r\n  toggleCell: typeof toggleCell;\r\n}\r\n\r\nclass SudokuRowComponent extends Component<ISudokuRowProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.sudokuRow}>\r\n        {this.renderRow()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRow(): JSX.Element[] | null {\r\n    return this.props.row\r\n      .getCells()\r\n      .map((c, i) => <SudokuCell toggleCell={this.props.toggleCell} cell={c} size={this.getCellSize()} key={i} />);\r\n  }\r\n\r\n  private getCellSize(): number {\r\n    return this.props.rowSize / 9;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuRowComponent);","import React, { Component, CSSProperties } from \"react\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport SudokuRow from \"./SudokuRow\";\r\nimport { createNewGame, toggleCell } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, WithStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    position: 'relative',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n      paddingBottom: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      height: 'calc(100vh - 2*64px - 100px)',\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  sudokuPaper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    padding: theme.spacing.unit\r\n  }\r\n});\r\n\r\nexport interface ISudokuProps extends WithStyles<typeof styles> {\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n  createNewGame: typeof createNewGame;\r\n  toggleCell: typeof toggleCell\r\n\r\n}\r\n\r\nexport interface ISudokuState {\r\n  rowSize: number;\r\n}\r\n\r\nclass SudokuComponent extends Component<ISudokuProps, ISudokuState> {\r\n  private containerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: ISudokuProps) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.state = {\r\n      rowSize: 0\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} ref={this.containerRef}>\r\n        <Paper className={classes.sudokuPaper} >\r\n          {this.renderRows()}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setCellSize();\r\n  }\r\n\r\n  private setCellSize = () => {\r\n    const rowDOM = this.containerRef.current;\r\n    if (rowDOM) {\r\n      const boundingRectangle = rowDOM.getBoundingClientRect();\r\n      const height = boundingRectangle.height - 100;\r\n      const width = boundingRectangle.width\r\n      const smallestDimmesion = height < width ? height : width;\r\n      const fittedDimmension = 9 * Math.floor(smallestDimmesion / 9);\r\n      this.setState({\r\n        rowSize: fittedDimmension\r\n      });\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        this.setCellSize();\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderRows(): JSX.Element[] | null {\r\n    if (!this.state.rowSize) {\r\n      return null;\r\n    }\r\n    return this.props.sudoku.getRows().map((r, i) => (\r\n      <SudokuRow row={r} key={i} rowSize={this.state.rowSize} toggleCell={this.props.toggleCell} />\r\n    ));\r\n  }\r\n\r\n  private formatMillisecons(milliSeconds: number): string {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SudokuComponent);","import React from 'react';\r\n\r\nimport { setDigit, removeDigit, setMode, redo, undo } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport { Paper, createStyles, Theme, WithStyles, withStyles, LinearProgress } from '@material-ui/core';\r\nimport Chip, { ChipProps } from '@material-ui/core/Chip'\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    paddingTop: theme.spacing.unit,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  progress: {\r\n    borderBottomRightRadius: theme.spacing.unit / 2,\r\n    borderBottomLeftRadius: theme.spacing.unit / 2\r\n  },\r\n  chip: {\r\n    margin: '4px 2px 4px 2px'\r\n  }\r\n});\r\n\r\ninterface INumbersProps extends WithStyles<typeof styles> {\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst INumbers: React.FunctionComponent<INumbersProps> = props => {\r\n  if (props.sudoku.isSolved()) {\r\n    return null;\r\n  }\r\n\r\n  const { classes } = props\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper>\r\n        {[...Array(10).keys()].slice(1).map(x => {\r\n          let color: ChipProps['color'] = 'primary';\r\n          if (props.sudoku.isDigitSolved(x)) {\r\n            color = 'default';\r\n          } else if (props.mode === MODE.Note) {\r\n            color = 'secondary';\r\n          }\r\n          return (\r\n            <Chip onClick={() => props.setDigit(x)} color={color} className={classes.chip} label={x} key={x} />\r\n          );\r\n        })}\r\n        <LinearProgress className={classes.progress}\r\n          variant=\"determinate\"\r\n          color={props.mode === MODE.Note ? \"secondary\" : \"primary\"}\r\n          value={(props.sudoku.countSolvedCells() / props.difficulty) * 100}\r\n        />\r\n      </Paper>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(INumbers);","import React, { Component } from 'react';\r\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\nimport { changeDifficulty, validateSolution, createNewGame, toggleNightMode, resetSudoku } from '../store/actions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport VeryEasyIcon from '@material-ui/icons/LooksOne';\r\nimport EasyIcon from '@material-ui/icons/LooksTwo';\r\nimport NormalIcon from '@material-ui/icons/Looks3';\r\nimport HardIcon from '@material-ui/icons/Looks4';\r\nimport VeryHardIcon from '@material-ui/icons/Looks5';\r\nimport NewIcon from '@material-ui/icons/FiberNew';\r\nimport ResetIcon from '@material-ui/icons/Restore';\r\nimport ValidateIcon from '@material-ui/icons/Check';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerPaper: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      minWidth: '70%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: '40%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      minWidth: '30%'\r\n    }\r\n  },\r\n  notesToggle: {\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nexport interface ITopBarProps extends WithStyles<typeof styles> {\r\n  difficulty: DIFFICULTY;\r\n  changeDifficulty: typeof changeDifficulty;\r\n  validateSolution: typeof validateSolution;\r\n  createNewGame: typeof createNewGame;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  nightMode: boolean;\r\n  resetSudoku: typeof resetSudoku;\r\n}\r\nexport interface ITopBarState {\r\n  drawerOpen: boolean;\r\n}\r\n\r\nconst DIFFICUTIES = [{\r\n  difficulty: DIFFICULTY.VeryEasy,\r\n  label: \"Very Easy\",\r\n  icon: <VeryEasyIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.Easy,\r\n  label: \"Easy\",\r\n  icon: <EasyIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.Normal,\r\n  label: \"Normal\",\r\n  icon: <NormalIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.Hard,\r\n  label: \"Hard\",\r\n  icon: <HardIcon />\r\n}, {\r\n  difficulty: DIFFICULTY.VeryHard,\r\n  label: \"Very Hard\",\r\n  icon: <VeryHardIcon />\r\n}]\r\n\r\nclass TopBar extends Component<ITopBarProps, ITopBarState> {\r\n  constructor(props: ITopBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" onClick={() => this.openDrawer()}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {this.getBarText()}\r\n            </Typography>\r\n            <FormControlLabel\r\n              classes={{ label: classes.notesToggle }}\r\n              label=\"Night mode\"\r\n              labelPlacement=\"start\"\r\n              onClick={() => this.props.toggleNightMode()}\r\n              control={<Switch checked={this.props.nightMode} />}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"temporary\" classes={{ paper: classes.drawerPaper }} open={this.state.drawerOpen} onClose={() => this.closeDrawer()}>\r\n          <List>\r\n            <ListSubheader>Puzzle</ListSubheader>\r\n            <Divider />\r\n            <ListItem button onClick={() => this.createNewGame()}>\r\n              <ListItemIcon>\r\n                <NewIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"New game\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.reset()} >\r\n              <ListItemIcon>\r\n                <ResetIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Reset\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.validate()} >\r\n              <ListItemIcon>\r\n                <ValidateIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Validate\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListSubheader>Difficulty</ListSubheader>\r\n            <Divider />\r\n            {this.renderDifficulties()}\r\n          </List>\r\n        </Drawer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private openDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: true\r\n    });\r\n  }\r\n\r\n  private closeDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: false\r\n    });\r\n  }\r\n\r\n  private renderDifficulties(): JSX.Element[] {\r\n    return DIFFICUTIES.map(option => (\r\n      <ListItem\r\n        button\r\n        key={option.difficulty}\r\n        selected={this.props.difficulty === option.difficulty}\r\n        onClick={() => this.setDifficulty(option.difficulty)}>\r\n        <ListItemIcon>\r\n          {option.icon}\r\n        </ListItemIcon>\r\n        <ListItemText primary={option.label} />\r\n      </ListItem>\r\n    ));\r\n  }\r\n\r\n  private setDifficulty(difficulty: DIFFICULTY): void {\r\n    this.closeDrawer();\r\n    this.props.changeDifficulty(difficulty);\r\n  }\r\n\r\n  private validate(): void {\r\n    this.closeDrawer();\r\n    this.props.validateSolution()\r\n  }\r\n\r\n  private getBarText(): string {\r\n    const difficulty = DIFFICUTIES.find(option => option.difficulty === this.props.difficulty);\r\n    if (difficulty) {\r\n      return `${difficulty.label}`;\r\n    }\r\n    return \"\";\r\n  }\r\n  private createNewGame(): void {\r\n    this.closeDrawer();\r\n    this.props.createNewGame();\r\n  }\r\n\r\n  private reset(): void {\r\n    this.closeDrawer();\r\n    this.props.resetSudoku();\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopBar);","import React, { Fragment } from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { undo, redo, removeDigit, setMode } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PenIcon from \"@material-ui/icons/Edit\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  modeFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 25% 0 auto'\r\n  },\r\n  clearFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto 0 25%'\r\n  },\r\n});\r\n\r\nexport interface IBottomBarProps extends WithStyles<typeof styles> {\r\n  undo: typeof undo;\r\n  redo: typeof redo;\r\n  removeDigit: typeof removeDigit;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n}\r\n\r\nconst BottomBar: React.FunctionComponent<IBottomBarProps> = (props: IBottomBarProps) => {\r\n  const toggleMode = () => {\r\n    if (props.mode === MODE.Note) {\r\n      props.setMode(MODE.Input);\r\n    } else {\r\n      props.setMode(MODE.Note);\r\n    }\r\n  }\r\n\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Fab color=\"primary\" className={classes.clearFab} onClick={() => props.removeDigit()}>\r\n          <ClearIcon />\r\n        </Fab>\r\n        <IconButton color=\"inherit\" disabled={!props.past.length} onClick={() => props.undo()}>\r\n          <UndoIcon />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" disabled={!props.future.length} onClick={() => props.redo()}>\r\n          <RedoIcon />\r\n        </IconButton>\r\n        <Fab color={props.mode === MODE.Note ? 'secondary' : 'default'} className={classes.modeFab} onClick={() => toggleMode()}>\r\n          <PenIcon />\r\n        </Fab>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(BottomBar);\r\n","import React from 'react';\r\nimport { withStyles, Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button, createStyles, Theme, WithTheme, WithStyles, Typography } from \"@material-ui/core\";\r\nimport { createNewGame } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n})\r\n\r\nexport interface ICompletedDialogProps extends WithStyles<typeof styles> {\r\n  createNewGame: typeof createNewGame;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst CompletedDialog: React.FunctionComponent<ICompletedDialogProps> = (props: ICompletedDialogProps) => {\r\n  const formatMillisecons = (milliSeconds: number) => {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const difficultyText = () => {\r\n    switch (props.difficulty) {\r\n      case DIFFICULTY.VeryEasy:\r\n        return 'a very easy';\r\n      case DIFFICULTY.Easy:\r\n        return 'an easy';\r\n      case DIFFICULTY.Normal:\r\n        return 'a normal';\r\n      case DIFFICULTY.Hard:\r\n        return 'a hard';\r\n      case DIFFICULTY.VeryHard:\r\n        return 'a very hard';\r\n      case DIFFICULTY.Insane:\r\n        return 'an insane';\r\n      default:\r\n        return 'an unknown';\r\n    }\r\n  }\r\n\r\n  const ellapsedTime = formatMillisecons(Date.now() - props.sudoku.getCreationTimestamp())\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xl\"\r\n      open={props.sudoku.isSolved()}\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Done!</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          You completed a {difficultyText()} puzzle.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Ellapsed time: {ellapsedTime}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => { props.createNewGame() }}>\r\n          New Game\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CompletedDialog);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../layout/App.scss\";\r\nimport SudokuComponent from \"./Sudoku\";\r\nimport Numbers from \"./Numbers\";\r\nimport { AppState } from \"../store\";\r\nimport { changeDifficulty, createNewGame, validateSolution, toggleCell, setDigit, removeDigit, navigateCells, setMode, redo, undo, toggleNightMode, resetSudoku } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport TopBar from \"./TopBar\";\r\nimport BottomBar from \"./BottomBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport CompletedDialog from \"./CompletedDialog\";\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport theme from \"../theme\";\r\n\r\ninterface IAppProps {\r\n  changeDifficulty: typeof changeDifficulty;\r\n  createNewGame: typeof createNewGame;\r\n  validateSolution: typeof validateSolution;\r\n  toggleCell: typeof toggleCell;\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  navigateCells: typeof navigateCells;\r\n  setMode: typeof setMode;\r\n  undo: typeof undo,\r\n  redo: typeof redo,\r\n  mode: MODE;\r\n  sudoku: Sudoku;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  difficulty: DIFFICULTY;\r\n  nightMode: boolean;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  resetSudoku: typeof resetSudoku;\r\n}\r\n\r\nclass App extends Component<IAppProps> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const t = theme(this.props.nightMode)\r\n    return (\r\n      <div className=\"App\">\r\n        <MuiThemeProvider theme={t}>\r\n          <CssBaseline />\r\n          <TopBar {...this.props} />\r\n          <div className=\"App-content\">\r\n            <SudokuComponent {...this.props} />\r\n            <Numbers {...this.props} />\r\n          </div>\r\n          <CompletedDialog {...this.props}></CompletedDialog>\r\n          <BottomBar {...this.props} />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  public componentDidMount(): void {\r\n    document.addEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  private handleKeyboard = (e: KeyboardEvent) => {\r\n    const key = e.which;\r\n    if (key >= 49 && key <= 57) { // [1...9]\r\n      this.props.setDigit(key - 48);\r\n    } else if (key === 8 || key === 2) { // backspace || delete\r\n      this.props.removeDigit()\r\n    } else if (key === 37) { //left \r\n      this.props.navigateCells(DIRECTION.Left);\r\n    } else if (key === 38) { //up\r\n      this.props.navigateCells(DIRECTION.Up);\r\n    } else if (key === 39) { // right\r\n      this.props.navigateCells(DIRECTION.Right);\r\n    } else if (key === 40) { // down\r\n      this.props.navigateCells(DIRECTION.Down);\r\n    } else if (key === 32) { // space\r\n      this.props.setMode(this.props.mode !== MODE.Note ? MODE.Note : MODE.Input)\r\n    } else if (key === 27) { // esc\r\n      this.props.setMode(MODE.Input)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  sudoku: state.game.sudoku.current,\r\n  past: state.game.sudoku.past,\r\n  future: state.game.sudoku.future,\r\n  difficulty: state.game.difficulty,\r\n  mode: state.game.mode,\r\n  nightMode: state.game.nightMode\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeDifficulty,\r\n    createNewGame,\r\n    validateSolution,\r\n    toggleCell,\r\n    setDigit,\r\n    removeDigit,\r\n    navigateCells,\r\n    setMode,\r\n    undo,\r\n    redo,\r\n    toggleNightMode,\r\n    resetSudoku\r\n  }\r\n)(App);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default (nightMode: boolean) => {\r\n  return createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    palette: {\r\n      type: nightMode ? 'dark' : 'light',\r\n      primary: {\r\n        main: '#424242'\r\n      },\r\n      secondary: {\r\n        main: '#616161'\r\n      }\r\n    },\r\n  });\r\n};","import {\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  REMOVE_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  DIRECTION,\r\n  TOGGLE_NOTE_MODE,\r\n  REDO,\r\n  UNDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport function changeDifficulty(difficulty: DIFFICULTY): OptionActions {\r\n  return {\r\n    type: CHANGE_DIFFICULTY,\r\n    payload: difficulty\r\n  };\r\n}\r\n\r\nexport function createNewGame(): OptionActions {\r\n  return {\r\n    type: NEW_GAME\r\n  };\r\n}\r\n\r\nexport function validateSolution(): OptionActions {\r\n  return {\r\n    type: VALIDATE_SOLUTION\r\n  };\r\n}\r\n\r\nexport function toggleCell(row: number, column: number): OptionActions {\r\n  return {\r\n    type: TOGGLE_CELL,\r\n    payload: {\r\n      row,\r\n      column\r\n    }\r\n  };\r\n}\r\n\r\nexport function setDigit(digit: number): OptionActions {\r\n  return {\r\n    type: SET_DIGIT,\r\n    payload: {\r\n      digit\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeDigit(): OptionActions {\r\n  return {\r\n    type: REMOVE_DIGIT\r\n  };\r\n}\r\n\r\nexport function navigateCells(direction: DIRECTION): OptionActions {\r\n  return {\r\n    type: NAVIGATE_CELLS,\r\n    payload: {\r\n      direction\r\n    }\r\n  };\r\n}\r\n\r\nexport function setMode(mode: MODE): OptionActions {\r\n  return {\r\n    type: TOGGLE_NOTE_MODE,\r\n    payload: {\r\n      mode\r\n    }\r\n  }\r\n}\r\n\r\nexport function undo(): OptionActions {\r\n  return {\r\n    type: UNDO,\r\n  };\r\n}\r\n\r\nexport function redo(): OptionActions {\r\n  return {\r\n    type: REDO\r\n  };\r\n}\r\n\r\nexport function toggleNightMode(): OptionActions {\r\n  return {\r\n    type: TOGGLE_NIGHT_MODE\r\n  };\r\n}\r\n\r\nexport function resetSudoku(): OptionActions {\r\n  return {\r\n    type: RESET_SUDOKU\r\n  };\r\n}\r\n","import \"./layout/index.scss\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport configureStore from \"./store\";\r\nimport App from \"./presentation/App\";\r\nimport pregenerate from \"./utils/pregenerate\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).pregenerate = pregenerate;\r\n}\r\n"],"sourceRoot":""}