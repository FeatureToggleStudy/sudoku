{"version":3,"sources":["workers/GeneratePuzzle.worker.ts","serviceWorker.ts","store/types.ts","models/Difficulty.ts","models/Cell.ts","models/Row.ts","models/Solver.ts","models/Sudoku.ts","PuzzleStorage.ts","store/reducers.ts","store/index.ts","presentation/SudokuCell.tsx","presentation/SudokuRow.tsx","presentation/Sudoku.tsx","presentation/Numbers.tsx","presentation/TopBar.tsx","presentation/BottomBar.tsx","presentation/CompletedDialog.tsx","presentation/App.tsx","theme.ts","store/actions.ts","index.tsx"],"names":["module","exports","Worker","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DIRECTION","MODE","DIFFICULTY","CHANGE_DIFFICULTY","NEW_GAME","VALIDATE_SOLUTION","TOGGLE_CELL","SET_DIGIT","REMOVE_DIGIT","NAVIGATE_CELLS","TOGGLE_NOTE_MODE","UNDO","REDO","TOGGLE_NIGHT_MODE","RESET_SUDOKU","FILL_CANDIDATES","NO_NOTES","Cell","previous","Object","classCallCheck","this","value","valid","solution","row","column","given","active","notes","guess","concat","calculateBlock","modifier","cell","digit","mode","Note","map","x","i","Guess","Row","cells","index","c","validate","setActive","isActive","getColumn","setDigit","removeDigit","data","toConsumableArray","_ref","_ref2","slicedToArray","create","range","start","end","times","Array","keys","slice","Solver","reduce","s","solve","reverseCandidates","candidates","findCandidates","forEach","reverse","isSolved","join","isUnsolvable","startIndex","getStartIndex","values","iMax","length","localData","lowestNumberOfCandidates","numberOfCandidates","Error","rows","blocks","columns","v","_this$findParents","findParents","block","push","_this$segment","segment","_this$findParents2","candidate","isAvailable","flatData","r","Sudoku","activeCell","createdAt","sudoku","toggleCell","allNumbers","acc","next","getCells","getValue","solved","_loop","filter","n","dirrection","increment","val","decrement","objectSpread","Up","Down","Right","Left","activateCell","every","some","sum","getNotes","getCandidates","rowCandidates","cellCandidates","Date","now","d","EMPTY_DATA","src_PuzzleStorage","PuzzleStorage","_this","worker","inititializeStorage","GeneratePuzzleWorker","addEventListener","e","addPuzzle","hasLocalStorageKeys","_puzzles","puzzles","defineProperty","VeryEasy","saveJSONPuzzles","Puzzles","Easy","Normal","Hard","VeryHard","save","localStorage","_this2","id","uuid","puzzle","decodedPuzle","difficulty","puzzleMap","load","shift","decodeStoredPuzzle","postMessage","message","puzzleData","key","setItem","JSON","stringify","parse","initialDifficulty","fallBack","getItem","readDifficulty","initialNightMode","readNightMode","initialState","past","current","getPuzzle","future","Input","nightMode","rootReducer","combineReducers","game","arguments","undefined","action","type","payload","toString","navigate","direction","SET_MODE","writeNightMode","fillCandidates","SudokuCellComponent","classes","props","react_default","a","createElement","className","container","onClick","handleClick","calculateClasses","renderContent","style","fontSize","size","Math","ceil","cellClasses","note1","note2","note3","note4","note5","note6","note7","note8","note9","Fragment","note","activeNote","inactiveNote","getRow","_result","getBlock","result","content","thickBorderTop","thickBorderBottom","thickBorderLeft","thickBorderRight","dark","isGiven","invalid","isValid","Component","withStyles","theme","borderThin","palette","common","black","borderThick","createStyles","display","position","width","paddingBottom","textAlign","userSelect","justifyContent","alignItems","top","right","bottom","left","borderRight","borderBottom","color","grey","borderTop","borderLeft","backgroundColor","primary","light","fontWeight","opacity","contrastText","SudokuRowComponent","sudokuRow","renderRow","SudokuCell","getCellSize","rowSize","SudokuComponent","possibleConstructorReturn","getPrototypeOf","call","containerRef","setCellSize","rowDOM","boundingRectangle","getBoundingClientRect","height","smallestDimmesion","fittedDimmension","floor","setState","requestAnimationFrame","React","createRef","ref","Paper_default","sudokuPaper","renderRows","getRows","SudokuRow","milliSeconds","pad","num","round","padStart","seconds","minutes","hours","marginLeft","marginRight","@media (orientation: portrait)","@media (orientation: landscape)","padding","spacing","unit","paddingTop","progress","borderBottomRightRadius","borderBottomLeftRadius","errorBar","successBar","chip","margin","isNoteMode","showRedProgressBar","countEmptyCells","index_es","isDigitSolved","Chip_default","label","bar","variant","DIFFICUTIES","TopBar","drawerOpen","showSnackbar","AppBar_default","Toolbar_default","IconButton_default","menuButton","openDrawer","Menu_default","Typography_default","grow","getBarText","FormControlLabel_default","notesToggle","labelPlacement","toggleNightMode","control","Switch_default","checked","Drawer_default","paper","drawerPaper","open","onClose","closeDrawer","List_default","ListSubheader_default","Divider_default","ListItem_default","button","createNewGame","ListItemText_default","reset","renderDifficulties","_this3","option","selected","setDifficulty","changeDifficulty","validateSolution","_this4","find","resetSudoku","_drawerPaper","flexGrow","breakpoints","down","minWidth","up","white","snackbar","appBar","toolbar","modeFab","zIndex","clearFab","Fab_default","Clear_default","disabled","undo","Undo_default","redo","Redo_default","setMode","EditOutlined_default","Edit_default","ellapsedTime","formatMillisecons","getCreationTimestamp","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","gutterBottom","Insane","difficultyText","App","handleKeyboard","which","navigateCells","t","createMuiTheme","typography","useNextVariants","main","secondary","MuiThemeProvider_default","CssBaseline_default","presentation_TopBar","presentation_Sudoku","Numbers","presentation_CompletedDialog","presentation_BottomBar","document","removeEventListener","connect","store","createStore","ReactDOM","render","es","presentation_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,IACrG,CAAC,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GAAG,GAAQ,CAAC,GA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","file":"static/js/main.1362a71e.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"744dd664fd26e7bfa706.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport interface IGameState {\r\n  difficulty: DIFFICULTY;\r\n  sudoku: {\r\n    past: Sudoku[];\r\n    current: Sudoku;\r\n    future: Sudoku[];\r\n  };\r\n  mode: MODE;\r\n  nightMode: boolean;\r\n}\r\n\r\nexport enum DIRECTION {\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right\r\n}\r\n\r\nexport enum MODE {\r\n  Input,\r\n  Note,\r\n  Guess\r\n}\r\n\r\nexport const CHANGE_DIFFICULTY = \"CHANGE_DIFFICULTY\";\r\nexport const NEW_GAME = \"NEW_GAME\";\r\nexport const VALIDATE_SOLUTION = \"VALIDATE_SOLUTION\";\r\nexport const TOGGLE_CELL = \"TOGGLE_CELLs\";\r\nexport const SET_DIGIT = \"SET_DIGIT\";\r\nexport const REMOVE_DIGIT = \"REMOVE_DIGIT\";\r\nexport const NAVIGATE_CELLS = \"NAVIGATE_CELLS\";\r\nexport const TOGGLE_NOTE_MODE = \"TOGGLE_NOTE_MODE\";\r\nexport const UNDO = \"UNDO\";\r\nexport const REDO = \"REDO\";\r\nexport const TOGGLE_NIGHT_MODE = \"TOGGLE_NIGHT_MODE\";\r\nexport const RESET_SUDOKU = \"RESET_SUDOKU\";\r\nexport const FILL_CANDIDATES = \"FILL_CANDIDATES\";\r\n\r\ninterface IChangeDifficultyAction {\r\n  type: typeof CHANGE_DIFFICULTY;\r\n  payload: DIFFICULTY;\r\n}\r\n\r\ninterface INewGameAction {\r\n  type: typeof NEW_GAME;\r\n}\r\n\r\ninterface IValidateSolutionAction {\r\n  type: typeof VALIDATE_SOLUTION;\r\n}\r\n\r\ninterface IToggleCellAction {\r\n  type: typeof TOGGLE_CELL;\r\n  payload: {\r\n    row: number;\r\n    column: number;\r\n  }\r\n}\r\n\r\ninterface ISetDigitAction {\r\n  type: typeof SET_DIGIT;\r\n  payload: {\r\n    digit: number;\r\n  }\r\n}\r\n\r\ninterface IRemoveDigitAction {\r\n  type: typeof REMOVE_DIGIT;\r\n}\r\n\r\ninterface INavigateCellsAction {\r\n  type: typeof NAVIGATE_CELLS;\r\n  payload: {\r\n    direction: DIRECTION;\r\n  }\r\n}\r\n\r\ninterface ISetModeAction {\r\n  type: typeof TOGGLE_NOTE_MODE;\r\n  payload: {\r\n    mode: MODE\r\n  }\r\n}\r\ninterface IUndoAction {\r\n  type: typeof UNDO;\r\n}\r\ninterface IRedoAction {\r\n  type: typeof REDO;\r\n}\r\ninterface IToggleNightModeAction {\r\n  type: typeof TOGGLE_NIGHT_MODE;\r\n}\r\n\r\ninterface IResetSudokuAction {\r\n  type: typeof RESET_SUDOKU;\r\n}\r\n\r\ninterface IFillCandidatesAction {\r\n  type: typeof FILL_CANDIDATES;\r\n}\r\n\r\n\r\nexport type OptionActions = IChangeDifficultyAction\r\n  | INewGameAction\r\n  | IValidateSolutionAction\r\n  | IToggleCellAction\r\n  | ISetDigitAction\r\n  | IRemoveDigitAction\r\n  | INavigateCellsAction\r\n  | ISetModeAction\r\n  | IUndoAction\r\n  | IRedoAction\r\n  | IToggleNightModeAction\r\n  | IResetSudokuAction\r\n  | IFillCandidatesAction;","\r\nexport enum DIFFICULTY {\r\n  VeryEasy = 30,\r\n  Easy = 36,\r\n  Normal = 42,\r\n  Hard = 48,\r\n  VeryHard = 54,\r\n  Insane = 60\r\n\r\n}","import { MODE } from \"../store/types\";\r\n\r\nconst NO_NOTES = [false, false, false, false, false, false, false, false, false];\r\n\r\nexport default class Cell {\r\n  private value: number | null;\r\n  private valid: boolean;\r\n  private solution: number;\r\n  private row: number;\r\n  private column: number;\r\n  private given: boolean;\r\n  private active: boolean;\r\n  private notes: boolean[];\r\n  private guess: boolean;\r\n\r\n  private constructor(previous?: Cell) {\r\n    this.value = previous ? previous.value : null;\r\n    this.solution = previous ? previous.solution : -1;\r\n    this.row = previous ? previous.row : -1;\r\n    this.column = previous ? previous.column : -1;\r\n    this.given = previous ? previous.given : false;\r\n    this.active = previous ? previous.active : false;\r\n    this.valid = previous ? previous.valid : true;\r\n    this.notes = previous ? previous.notes : [...NO_NOTES];\r\n    this.guess = previous ? previous.guess : false;\r\n  }\r\n\r\n  static create(solution: number, row: number, column: number, given: boolean): Cell {\r\n    const cell = new Cell();\r\n    cell.solution = solution;\r\n    cell.row = row;\r\n    cell.column = column;\r\n    cell.given = given;\r\n    cell.value = given ? solution : null;\r\n    return cell;\r\n  }\r\n\r\n  public getSolution(): number {\r\n    return this.solution;\r\n  }\r\n\r\n  public getValue(): number | null {\r\n    return this.value;\r\n  }\r\n\r\n  public getRow(): number {\r\n    return this.row;\r\n  }\r\n\r\n  public getColumn(): number {\r\n    return this.column;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public getBlock(): number {\r\n    if (this.row <= 3) {\r\n      return this.calculateBlock(0);\r\n    } else if (this.row >= 4 && this.row <= 6) {\r\n      return this.calculateBlock(1);\r\n    } else {\r\n      return this.calculateBlock(2);\r\n    }\r\n  }\r\n\r\n  private calculateBlock(modifier: number): number {\r\n    if (this.column <= 3) {\r\n      return modifier + 1;\r\n    } else if (this.column >= 4 && this.column <= 6) {\r\n      return modifier + 2;\r\n    } else {\r\n      return modifier + 3;\r\n    }\r\n  }\r\n\r\n  public isGiven(): boolean {\r\n    return this.given;\r\n  }\r\n\r\n  public validate(): Cell {\r\n    const cell = new Cell(this)\r\n    cell.valid = this.value === null || this.value === this.solution;\r\n    if (cell.valid) {\r\n      cell.active = false;\r\n    }\r\n    return cell;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.valid;\r\n  }\r\n\r\n  public setActive(active: boolean): Cell {\r\n    const cell = new Cell(this);\r\n    cell.active = active;\r\n    return cell;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    if (mode === MODE.Note) {\r\n      cell.notes = this.notes.map((x, i) => i === (digit - 1) ? !x : x)\r\n      cell.value = null\r\n    } else {\r\n      if (cell.guess) {\r\n        cell.value = digit;\r\n      } else {\r\n        cell.value = this.value === digit ? null : digit;\r\n      }\r\n    }\r\n    cell.guess = mode === MODE.Guess;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public removeDigit(): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    cell.notes = [...NO_NOTES];\r\n    cell.value = null;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.value === this.solution;\r\n  }\r\n\r\n  public getNotes(): boolean[] {\r\n    return this.notes;\r\n  }\r\n\r\n  public isGuess(): boolean {\r\n    return this.guess;\r\n  }\r\n}\r\n","import Cell from \"./Cell\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\n\r\nexport default class Row {\r\n  private cells: Cell[];\r\n  private index: number;\r\n  private active: boolean;\r\n\r\n  private constructor(previous?: Row) {\r\n    this.index = previous ? previous.index : -1;\r\n    this.active = previous ? previous.active : false;\r\n    this.cells = previous ? previous.cells : [];\r\n  }\r\n\r\n  static create(data: [number, boolean][], index: number): Row {\r\n    const row = new Row();\r\n    row.cells = [...data.map(([value, given], i) => Cell.create(value, index, i + 1, given))];\r\n    row.index = index;\r\n    return row;\r\n  }\r\n\r\n  public getCells(): Cell[] {\r\n    return this.cells;\r\n  }\r\n\r\n  public validate(): Row {\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.validate());\r\n    return row;\r\n  }\r\n\r\n  public getIndex(): number {\r\n    return this.index;\r\n  }\r\n\r\n  public toggleCell(index: number, column: number): Row {\r\n    if (this.index !== index && !this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n\r\n    if (this.active) {\r\n      if (this.index === index) {\r\n        row.cells = this.cells.map(c => {\r\n          return c.setActive(c.isActive() ? false : c.getColumn() === column);\r\n        });\r\n      } else {\r\n        row.active = false;\r\n        row.cells = this.cells.map(c => c.isActive() ? c.setActive(false) : c);\r\n      }\r\n    } else if (this.index === index) {\r\n      row.active = true;\r\n      row.cells = this.cells.map(c => c.getColumn() === column ? c.setActive(true) : c);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.setDigit(digit, mode));\r\n    return row;\r\n  }\r\n\r\n  public removeDigit(): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.removeDigit());\r\n    return row;\r\n  }\r\n\r\n}\r\n","\r\nconst repeat = (times: number) => [...Array(times).keys()]\r\nconst range = (start: number, end: number) => repeat(end + 1).slice(start)\r\n\r\nexport default class Solver {\r\n  constructor(private data: nullber[][]) {\r\n\r\n  }\r\n\r\n  public hasUniqueSolution(): boolean {\r\n    const data = this.data.reduce((s, x) => s.concat(x), []);\r\n    const solution1 = this.solve(data, true)\r\n    const solution2 = this.solve(data, false)\r\n    return solution1 === solution2\r\n  }\r\n\r\n  private solve(data: nullber[], reverseCandidates: boolean): string {\r\n    const candidates = this.findCandidates(data)\r\n    if (reverseCandidates) {\r\n      candidates.forEach(c => c.reverse())\r\n    }\r\n\r\n    if (this.isSolved(candidates)) {\r\n      return candidates.map(c => c[0]).join('');\r\n    }\r\n    if (this.isUnsolvable(candidates)) {\r\n      return '';\r\n    }\r\n    let startIndex = this.getStartIndex(candidates);\r\n\r\n    const values = candidates[startIndex]\r\n\r\n    const iMax = values.length\r\n    for (let i = 0; i < iMax; i++) {\r\n      const value = values[i]\r\n      const localData = [...data]\r\n      localData[startIndex] = value\r\n      const solution = this.solve(localData, reverseCandidates)\r\n      if (solution) {\r\n        return solution\r\n      }\r\n    }\r\n    return ''\r\n  }\r\n\r\n  private isSolved(candidates: number[][]): boolean {\r\n    for (let i = 0; i < 81; i++) {\r\n      if (candidates[i].length !== 1) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  private isUnsolvable(candidates: number[][]): boolean {\r\n    for (let i = 0; i < 81; i++) {\r\n      if (candidates[i].length === 0) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  private getStartIndex(candidates: number[][]): number {\r\n    let startIndex = -1;\r\n    let lowestNumberOfCandidates = 9;\r\n    for (let i = 0; i < 81; i++) {\r\n      const numberOfCandidates = candidates[i].length\r\n      if (numberOfCandidates === 2) {\r\n        return i;\r\n      }\r\n\r\n      if (numberOfCandidates > 2 && numberOfCandidates < lowestNumberOfCandidates) {\r\n        startIndex = i;\r\n        lowestNumberOfCandidates = numberOfCandidates\r\n      }\r\n    }\r\n    if (startIndex === -1) {\r\n      throw new Error(\"Couldn't find a good start index for further solving.\")\r\n    }\r\n    return startIndex;\r\n  }\r\n\r\n  private segment<T>(data: T[]): segments<T> {\r\n    const rows: T[][] = [[], [], [], [], [], [], [], [], []]\r\n    const blocks: T[][] = [[], [], [], [], [], [], [], [], []]\r\n    const columns: T[][] = [[], [], [], [], [], [], [], [], []]\r\n\r\n    for (let i = 0; i < 81; i++) {\r\n      const v = data[i]\r\n      const { row, column, block } = this.findParents(i);\r\n      rows[row].push(v)\r\n      blocks[block].push(v)\r\n      columns[column].push(v)\r\n    }\r\n\r\n    return {\r\n      rows,\r\n      blocks,\r\n      columns\r\n    }\r\n  }\r\n\r\n  private findParents(index: number): { row: number, column: number, block: number } {\r\n    const row = ~~(index / 9);\r\n    const column = index % 9\r\n    const block = ~~(row / 3) * 3 + ~~(column / 3)\r\n\r\n    return {\r\n      block,\r\n      row,\r\n      column\r\n    }\r\n  }\r\n\r\n  private findCandidates(data: nullber[]) {\r\n    const { rows, blocks, columns } = this.segment(data)\r\n    const candidates: number[][] = []\r\n    for (let i = 0; i < 81; i++) {\r\n      const value = data[i];\r\n      candidates[i] = [];\r\n      if (value !== null) {\r\n        candidates[i].push(value);\r\n      } else {\r\n        const { row, column, block } = this.findParents(i)\r\n        for (let candidate = 1; candidate <= 9; candidate++) {\r\n          if (this.isAvailable(blocks[block], rows[row], columns[column], candidate)) {\r\n            candidates[i].push(candidate);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return candidates;\r\n  }\r\n\r\n  private isAvailable(block: nullber[], row: nullber[], column: nullber[], value: number): boolean {\r\n    for (let i = 0; i < 9; i++) {\r\n      if (block[i] === value || row[i] === value || column[i] === value) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  public getCandidates(): number[][][] {\r\n    const flatData = this.data.reduce((s, x) => s.concat(x), []);\r\n    const candidates = this.findCandidates(flatData);\r\n    return range(0, 8).map(r => range(0, 8).map(c => candidates[r * 9 + c]))\r\n  }\r\n}\r\n\r\ntype nullber = number | null\r\n\r\ntype segments<T> = {\r\n  rows: T[][]\r\n  blocks: T[][]\r\n  columns: T[][]\r\n}\r\n","import Row from \"./Row\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport Cell from \"./Cell\";\r\nimport Solver from \"./Solver\";\r\n\r\nexport default class Sudoku {\r\n  private rows: Row[];\r\n  private activeCell: { row: number, column: number };\r\n  private createdAt: number;\r\n\r\n  private constructor(previous?: Sudoku) {\r\n    this.rows = previous ? previous.rows : [];\r\n    this.activeCell = previous ? previous.activeCell : { row: -1, column: -1 }\r\n    this.createdAt = previous ? previous.createdAt : 0;\r\n  }\r\n\r\n  static create(data: ([number, boolean])[][]): Sudoku {\r\n    const sudoku = new Sudoku();\r\n    sudoku.createdAt = Date.now();\r\n    sudoku.rows = data.map((d, i) => Row.create(d, i + 1));\r\n    return sudoku\r\n  }\r\n\r\n  public getRows(): Row[] {\r\n    return this.rows;\r\n  }\r\n\r\n  public validate(): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.rows = this.rows.map(r => r.validate());\r\n    return sudoku;\r\n  }\r\n\r\n  public activateCell(row: number, column: number): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    if (sudoku.activeCell.row === row && sudoku.activeCell.column === column) {\r\n      sudoku.activeCell = { row: -1, column: -1 }\r\n    } else {\r\n      sudoku.activeCell = { row, column };\r\n    }\r\n    sudoku.rows = this.rows.map(r => r.toggleCell(row, column));\r\n    return sudoku;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.setDigit(digit, mode));\r\n    return sudoku;\r\n  }\r\n\r\n  public removeDigit(): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.removeDigit());\r\n    return sudoku;\r\n  }\r\n\r\n  public getSolvedNumbers(): number[] {\r\n    const allNumbers = this.rows.reduce((acc: number[], next: Row) =>\r\n      acc.concat(next.getCells().map(c => c.getValue() || 0), []),\r\n      []\r\n    );\r\n    const solved = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      if (allNumbers.filter(n => n === i).length === 9) {\r\n        solved.push(i);\r\n      }\r\n    }\r\n    return solved;\r\n  }\r\n\r\n  public navigate(dirrection: DIRECTION): Sudoku {\r\n    const increment = (val: number) => val === 9 ? 1 : val + 1;\r\n    const decrement = (val: number) => val === 1 ? 9 : val - 1;\r\n    const activeCell = { ...this.activeCell }\r\n\r\n    switch (dirrection) {\r\n      case DIRECTION.Up:\r\n        activeCell.row = decrement(activeCell.row);\r\n        break;\r\n      case DIRECTION.Down:\r\n        activeCell.row = increment(activeCell.row);\r\n        break;\r\n      case DIRECTION.Right:\r\n        activeCell.column = increment(activeCell.column);\r\n        break;\r\n      case DIRECTION.Left:\r\n        activeCell.column = decrement(activeCell.column);\r\n        break;\r\n    }\r\n    return this.activateCell(activeCell.row, activeCell.column);\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.rows.every(r => r.getCells().every(c => c.isSolved()))\r\n  }\r\n\r\n  public getCreationTimestamp(): number {\r\n    return this.createdAt;\r\n  }\r\n\r\n  public isDigitSolved(digit: number): boolean {\r\n    return this.rows.every(r => r.getCells().some(c => c.getValue() === digit && c.isSolved()));\r\n  }\r\n\r\n  public countEmptyCells(): number {\r\n    const cells = this.rows.reduce((acc, row) => acc.concat(row.getCells()), [] as Cell[])\r\n    return cells.reduce((sum, cell) => {\r\n      if (cell.getValue() === null) {\r\n        return sum + 1;\r\n      }\r\n      return sum;\r\n    }, 0)\r\n  }\r\n\r\n  public fillCandidates(): Sudoku {\r\n    const notes = this.rows.map(r => r.getCells().map(c => c.getNotes()))\r\n    const data = this.rows.map(r => r.getCells().map(c => c.getValue()))\r\n    const solver = new Solver(data)\r\n    const candidates = solver.getCandidates()\r\n    let sudoku = new Sudoku(this);\r\n    if (sudoku.activeCell.row !== -1 && sudoku.activeCell.column !== -1) {\r\n      sudoku = sudoku.activateCell(sudoku.activeCell.row, sudoku.activeCell.column)\r\n    }\r\n    candidates.forEach((rowCandidates, row) => {\r\n      rowCandidates.forEach((cellCandidates, cell) => {\r\n        sudoku = sudoku.activateCell(row + 1, cell + 1)\r\n        cellCandidates.forEach(candidate => {\r\n          if (data[row][cell] === null && !notes[row][cell][candidate - 1]) {\r\n            sudoku = sudoku.setDigit(candidate, MODE.Note)\r\n          }\r\n        })\r\n      })\r\n    })\r\n    return sudoku;\r\n  }\r\n}\r\n","\r\nimport Puzzles from \"./puzzles.json\"\r\nimport { DIFFICULTY } from \"./models/Difficulty\";\r\nimport Sudoku from \"./models/Sudoku\";\r\nimport GeneratePuzzleWorker from \"./workers/GeneratePuzzle.worker\"\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\nconst EMPTY_DATA: [number, boolean][][] = [\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]]\r\n]\r\n\r\nconst PUZZLE_MAP_KEY = \"PUZZLE-MAP\"\r\nconst BUFFER_SIZE = 20\r\n\r\ntype idMap = { [key: number]: string[] }\r\ntype serializedPuzzle = (number | boolean)[][][]\r\n\r\nclass PuzzleStorage {\r\n  private worker: Worker;\r\n\r\n  constructor() {\r\n    this.inititializeStorage()\r\n    this.worker = new GeneratePuzzleWorker() as Worker;\r\n    this.worker.addEventListener('message', e => this.addPuzzle(e))\r\n  }\r\n\r\n  private inititializeStorage() {\r\n    if (!this.hasLocalStorageKeys()) {\r\n      const puzzles: idMap = {\r\n        [DIFFICULTY.VeryEasy]: this.saveJSONPuzzles(Puzzles.VeryEasy),\r\n        [DIFFICULTY.Easy]: this.saveJSONPuzzles(Puzzles.Easy),\r\n        [DIFFICULTY.Normal]: this.saveJSONPuzzles(Puzzles.Normal),\r\n        [DIFFICULTY.Hard]: this.saveJSONPuzzles(Puzzles.Hard),\r\n        [DIFFICULTY.VeryHard]: this.saveJSONPuzzles(Puzzles.VeryHard)\r\n      }\r\n      this.save(PUZZLE_MAP_KEY, puzzles)\r\n    }\r\n  }\r\n\r\n  private hasLocalStorageKeys(): boolean {\r\n    return !!window.localStorage[PUZZLE_MAP_KEY]\r\n  }\r\n\r\n  private saveJSONPuzzles(puzzles: serializedPuzzle[]): string[] {\r\n    return puzzles.map(p => {\r\n      const id = uuid();\r\n      this.save(id, p)\r\n      return id;\r\n    })\r\n  }\r\n\r\n  private decodeStoredPuzzle(puzzle: serializedPuzzle): Sudoku {\r\n    const decodedPuzle = [[], [], [], [], [], [], [], [], []] as [number, boolean][][];\r\n    puzzle.forEach((row, i) => {\r\n      decodedPuzle[i] = row.map(([value, given]) => [value, given] as [number, boolean])\r\n    })\r\n    return Sudoku.create(decodedPuzle)\r\n  }\r\n\r\n  public getPuzzle(difficulty: DIFFICULTY): Sudoku {\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    const id = puzzleMap[difficulty].shift()\r\n    if (!id) {\r\n      return Sudoku.create(EMPTY_DATA)\r\n    }\r\n    const puzzle = this.load<serializedPuzzle>(id)\r\n    const sudoku = this.decodeStoredPuzzle(puzzle)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap);\r\n    this.worker.postMessage(difficulty)\r\n\r\n    if (!!sudoku) {\r\n      return sudoku\r\n    }\r\n    return Sudoku.create(EMPTY_DATA)\r\n  }\r\n\r\n  private addPuzzle(message: MessageEvent): void {\r\n    const difficulty = message.data.difficulty as DIFFICULTY;\r\n    const data = message.data.puzzleData as [number, boolean][][];\r\n    const id = uuid();\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    puzzleMap[difficulty].push(id);\r\n    this.save(id, data)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap)\r\n    if (puzzleMap[difficulty].length < BUFFER_SIZE) {\r\n      this.worker.postMessage(difficulty)\r\n    }\r\n  }\r\n\r\n  private save(key: string, data: any): void {\r\n    window.localStorage.setItem(key, JSON.stringify(data))\r\n  }\r\n\r\n  private load<T>(key: string): T {\r\n    return JSON.parse(window.localStorage[key]) as T\r\n  }\r\n}\r\n\r\nexport default new PuzzleStorage();","import {\r\n  IGameState,\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  REMOVE_DIGIT,\r\n  TOGGLE_NOTE_MODE as SET_MODE,\r\n  UNDO,\r\n  REDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU,\r\n  FILL_CANDIDATES\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport PuzzleStorage from \"../PuzzleStorage\"\r\n\r\n\r\nconst initialDifficulty = readDifficulty(DIFFICULTY.Easy)\r\nconst initialNightMode = readNightMode(false);\r\nconst initialState: IGameState = {\r\n  difficulty: initialDifficulty,\r\n  sudoku: {\r\n    past: [],\r\n    current: PuzzleStorage.getPuzzle(initialDifficulty).activateCell(1, 1),\r\n    future: []\r\n  },\r\n  mode: MODE.Input,\r\n  nightMode: initialNightMode\r\n};\r\n\r\nexport function gameReducer(state = initialState, action: OptionActions): IGameState {\r\n  switch (action.type) {\r\n    case CHANGE_DIFFICULTY:\r\n      writeDifficulty(action.payload);\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(action.payload).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case NEW_GAME:\r\n\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(state.difficulty).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case VALIDATE_SOLUTION:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.validate()\r\n        }\r\n      };\r\n    case TOGGLE_CELL:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.activateCell(action.payload.row, action.payload.column)\r\n        }\r\n      };\r\n    case SET_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.setDigit(action.payload.digit, state.mode),\r\n          future: []\r\n        }\r\n      };\r\n    case REMOVE_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.removeDigit(),\r\n          future: []\r\n        }\r\n      };\r\n    case NAVIGATE_CELLS:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.navigate(action.payload.direction)\r\n        }\r\n      };\r\n    case SET_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload.mode\r\n      };\r\n    case UNDO:\r\n      if (!state.sudoku.past.length) {\r\n        return state;\r\n      }\r\n      const previous = state.sudoku.past.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: state.sudoku.past.slice(0, -1),\r\n          current: previous,\r\n          future: [...state.sudoku.future, state.sudoku.current]\r\n        }\r\n      }\r\n    case REDO:\r\n      if (!state.sudoku.future.length) {\r\n        return state;\r\n      }\r\n      const next = state.sudoku.future.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: next,\r\n          future: state.sudoku.future.slice(0, -1)\r\n        }\r\n      }\r\n    case TOGGLE_NIGHT_MODE:\r\n      const nightMode = !state.nightMode;\r\n      writeNightMode(nightMode);\r\n      return {\r\n        ...state,\r\n        nightMode\r\n      }\r\n    case RESET_SUDOKU:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: state.sudoku.past.shift() || state.sudoku.current,\r\n          future: []\r\n        }\r\n      }\r\n    case FILL_CANDIDATES:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.fillCandidates(),\r\n          future: []\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction readDifficulty(fallBack: DIFFICULTY): DIFFICULTY {\r\n  const data = window.localStorage.getItem('DIFFICULTY');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return +data as DIFFICULTY;\r\n}\r\nfunction writeDifficulty(difficulty: DIFFICULTY) {\r\n  window.localStorage.setItem('DIFFICULTY', difficulty.toString());\r\n}\r\n\r\nfunction readNightMode(fallBack: boolean): boolean {\r\n  const data = window.localStorage.getItem('NIGHT_MODE');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return data === 'true';\r\n}\r\nfunction writeNightMode(nightMode: boolean) {\r\n  window.localStorage.setItem('NIGHT_MODE', nightMode.toString());\r\n}","import \"typeface-roboto\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nimport { gameReducer } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport Cell from \"../models/Cell\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => {\r\n  const borderThin = `solid 1px ${theme.palette.common.black}`;\r\n  const borderThick = `solid 2px ${theme.palette.common.black}`;\r\n\r\n  return createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      width: '11.111111%',\r\n      paddingBottom: '11.111111%',\r\n      textAlign: 'center',\r\n      userSelect: \"none\",\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      borderRight: borderThin,\r\n      borderBottom: borderThin,\r\n      color: theme.palette.type === \"dark\" ? theme.palette.grey[400] : theme.palette.common.black\r\n    },\r\n    thickBorderTop: {\r\n      borderTop: borderThick\r\n    },\r\n    thickBorderBottom: {\r\n      borderBottom: borderThick\r\n    },\r\n    thickBorderLeft: {\r\n      borderLeft: borderThick\r\n    },\r\n    thickBorderRight: {\r\n      borderRight: borderThick\r\n    },\r\n    dark: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.light : theme.palette.grey[200],\r\n    },\r\n    given: {\r\n      fontWeight: 'bold'\r\n    },\r\n    note: {\r\n      position: 'absolute'\r\n    },\r\n    inactiveNote: {\r\n      opacity: 0.1\r\n    },\r\n    activeNote: {\r\n      opacity: 1,\r\n    },\r\n    note1: {\r\n      top: 0,\r\n      left: 0,\r\n      bottom: '66.666667%',\r\n      right: '66.666667%'\r\n    },\r\n    note2: {\r\n      top: \"0\",\r\n      left: \"33.333333%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note3: {\r\n      top: \"0\",\r\n      left: \"66.666667%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"0\",\r\n    },\r\n    note4: {\r\n      top: \"33.333333%\",\r\n      left: \"0\",\r\n      bottom: \"33.333333%\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note5: {\r\n      top: \"33.333333%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note6: {\r\n      top: \"33.333333%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"0\",\r\n    },\r\n    note7: {\r\n      top: \"66.666667%\",\r\n      left: \"0\",\r\n      bottom: \"0\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note8: {\r\n      top: \"66.666667%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"0\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note9: {\r\n      top: \"66.666667%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.dark : theme.palette.primary.light,\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    invalid: {\r\n      backgroundColor: theme.palette.error.light,\r\n      color: theme.palette.error.contrastText\r\n    }\r\n  });\r\n}\r\n\r\nexport interface ISudokuCellComponentProps extends WithStyles<typeof styles> {\r\n  cell: Cell;\r\n  size: number;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nclass SudokuCellComponent extends Component<ISudokuCellComponentProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} onClick={() => this.handleClick()}>\r\n        <div className={this.calculateClasses()}>\r\n          {this.renderContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent(): JSX.Element {\r\n    const { classes } = this.props;\r\n    const value = this.props.cell.getValue();\r\n    if (!!value) {\r\n      return (\r\n        <span style={{ fontSize: `${this.props.size}px` }}>{value}</span>\r\n      );\r\n    }\r\n    const notes = this.props.cell.getNotes();\r\n    const fontSize = `${Math.ceil((this.props.size / 3))}px`;\r\n    const cellClasses = [\r\n      classes.note1,\r\n      classes.note2,\r\n      classes.note3,\r\n      classes.note4,\r\n      classes.note5,\r\n      classes.note6,\r\n      classes.note7,\r\n      classes.note8,\r\n      classes.note9\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          notes.map((x, i) => (\r\n            <span className={`${classes.note} ${cellClasses[i]} ${x ? classes.activeNote : classes.inactiveNote}`}\r\n              key={i}\r\n              style={{ fontSize: fontSize }}>\r\n              {(x || this.props.mode === MODE.Note) ? i + 1 : ''}\r\n            </span>\r\n          ))\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n\r\n  private handleClick(): void {\r\n    this.props.toggleCell(this.props.cell.getRow(), this.props.cell.getColumn())\r\n  }\r\n\r\n  private calculateClasses(): string {\r\n    const { classes } = this.props;\r\n    const cell = this.props.cell;\r\n    const row = cell.getRow();\r\n    const column = cell.getColumn();\r\n    const block = cell.getBlock();\r\n\r\n    const result = {\r\n      [classes.content]: true,\r\n      [classes.thickBorderTop]: row === 1,\r\n      [classes.thickBorderBottom]: row % 3 === 0,\r\n      [classes.thickBorderLeft]: column === 1,\r\n      [classes.thickBorderRight]: column % 3 === 0,\r\n      [classes.dark]: block % 2 === 0,\r\n      [classes.given]: cell.isGiven(),\r\n      [classes.invalid]: !cell.isValid(),\r\n      [classes.active]: cell.isActive(),\r\n    }\r\n    return Object.keys(result).filter(key => result[key]).join(' ');\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuCellComponent);","import React, { Component } from \"react\";\r\nimport Row from \"../models/Row\";\r\nimport SudokuCell from \"./SudokuCell\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  sudokuRow: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport interface ISudokuRowProps extends WithStyles<typeof styles> {\r\n  row: Row;\r\n  rowSize: number;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nclass SudokuRowComponent extends Component<ISudokuRowProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.sudokuRow}>\r\n        {this.renderRow()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRow(): JSX.Element[] | null {\r\n    return this.props.row\r\n      .getCells()\r\n      .map((c, i) => <SudokuCell mode={this.props.mode} toggleCell={this.props.toggleCell} cell={c} size={this.getCellSize()} key={i} />);\r\n  }\r\n\r\n  private getCellSize(): number {\r\n    return this.props.rowSize / 9;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuRowComponent);","import React, { Component, CSSProperties } from \"react\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport SudokuRow from \"./SudokuRow\";\r\nimport { createNewGame, toggleCell } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, WithStyles, createStyles, Theme } from \"@material-ui/core\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    position: 'relative',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n      paddingBottom: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      height: 'calc(100vh - 2*64px - 100px)',\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  sudokuPaper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    padding: theme.spacing.unit\r\n  }\r\n});\r\n\r\nexport interface ISudokuProps extends WithStyles<typeof styles> {\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n  createNewGame: typeof createNewGame;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nexport interface ISudokuState {\r\n  rowSize: number;\r\n}\r\n\r\nclass SudokuComponent extends Component<ISudokuProps, ISudokuState> {\r\n  private containerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: ISudokuProps) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.state = {\r\n      rowSize: 0\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} ref={this.containerRef}>\r\n        <Paper className={classes.sudokuPaper} >\r\n          {this.renderRows()}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setCellSize();\r\n  }\r\n\r\n  private setCellSize = () => {\r\n    const rowDOM = this.containerRef.current;\r\n    if (rowDOM) {\r\n      const boundingRectangle = rowDOM.getBoundingClientRect();\r\n      const height = boundingRectangle.height - 100;\r\n      const width = boundingRectangle.width\r\n      const smallestDimmesion = height < width ? height : width;\r\n      const fittedDimmension = 9 * Math.floor(smallestDimmesion / 9);\r\n      this.setState({\r\n        rowSize: fittedDimmension\r\n      });\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        this.setCellSize();\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderRows(): JSX.Element[] | null {\r\n    if (!this.state.rowSize) {\r\n      return null;\r\n    }\r\n    return this.props.sudoku.getRows().map((r, i) => (\r\n      <SudokuRow mode={this.props.mode} row={r} key={i} rowSize={this.state.rowSize} toggleCell={this.props.toggleCell} />\r\n    ));\r\n  }\r\n\r\n  private formatMillisecons(milliSeconds: number): string {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SudokuComponent);","import React from 'react';\r\n\r\nimport { setDigit, removeDigit, setMode, redo, undo } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport { Paper, createStyles, Theme, WithStyles, withStyles, LinearProgress } from '@material-ui/core';\r\nimport Chip, { ChipProps } from '@material-ui/core/Chip'\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    paddingTop: theme.spacing.unit,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  progress: {\r\n    borderBottomRightRadius: theme.spacing.unit / 2,\r\n    borderBottomLeftRadius: theme.spacing.unit / 2\r\n  },\r\n  errorBar: {\r\n    backgroundColor: theme.palette.error.light\r\n  },\r\n  successBar: {\r\n    backgroundColor: '#66bb6a'\r\n  },\r\n  chip: {\r\n    margin: '4px 2px 4px 2px'\r\n  }\r\n});\r\n\r\ninterface INumbersProps extends WithStyles<typeof styles> {\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst INumbers: React.FunctionComponent<INumbersProps> = props => {\r\n  const { classes } = props;\r\n  const isNoteMode = props.mode === MODE.Note;\r\n  const sudoku = props.sudoku;\r\n  const isSolved = sudoku.isSolved();\r\n  const showRedProgressBar = sudoku.countEmptyCells() === 0 && !isSolved;\r\n  const progress = ((props.difficulty - props.sudoku.countEmptyCells()) / props.difficulty) * 100\r\n\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper>\r\n        {[...Array(10).keys()].slice(1).map(x => {\r\n          let color: ChipProps['color'] = 'primary';\r\n          if (props.sudoku.isDigitSolved(x)) {\r\n            color = 'default';\r\n          } else if (isNoteMode) {\r\n            color = 'secondary';\r\n          }\r\n          return (\r\n            <Chip onClick={() => props.setDigit(x)} color={color} className={classes.chip} label={x} key={x} />\r\n          );\r\n        })}\r\n        <LinearProgress className={classes.progress}\r\n          classes={{\r\n            bar: showRedProgressBar ? classes.errorBar : \"\"\r\n          }}\r\n          variant=\"determinate\"\r\n          value={progress}\r\n        />\r\n      </Paper>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(INumbers);","import React, { Component } from 'react';\r\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\nimport { changeDifficulty, validateSolution, createNewGame, toggleNightMode, resetSudoku, fillCandidates } from '../store/actions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerPaper: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      minWidth: '70%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: '40%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      minWidth: '30%'\r\n    }\r\n  },\r\n  notesToggle: {\r\n    color: theme.palette.common.white\r\n  },\r\n  snackbar: {\r\n    color: theme.palette.type === \"dark\" ? theme.palette.common.black : theme.palette.primary.contrastText\r\n  }\r\n});\r\n\r\nexport interface ITopBarProps extends WithStyles<typeof styles> {\r\n  difficulty: DIFFICULTY;\r\n  changeDifficulty: typeof changeDifficulty;\r\n  validateSolution: typeof validateSolution;\r\n  createNewGame: typeof createNewGame;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  nightMode: boolean;\r\n  resetSudoku: typeof resetSudoku;\r\n  fillCandidates: typeof fillCandidates;\r\n}\r\nexport interface ITopBarState {\r\n  drawerOpen: boolean;\r\n  showSnackbar: boolean;\r\n}\r\n\r\nconst DIFFICUTIES = [{\r\n  difficulty: DIFFICULTY.VeryEasy,\r\n  label: \"Very Easy\"\r\n}, {\r\n  difficulty: DIFFICULTY.Easy,\r\n  label: \"Easy\"\r\n}, {\r\n  difficulty: DIFFICULTY.Normal,\r\n  label: \"Normal\"\r\n}, {\r\n  difficulty: DIFFICULTY.Hard,\r\n  label: \"Hard\"\r\n}, {\r\n  difficulty: DIFFICULTY.VeryHard,\r\n  label: \"Very Hard\"\r\n}]\r\n\r\nclass TopBar extends Component<ITopBarProps, ITopBarState> {\r\n  constructor(props: ITopBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n      showSnackbar: false\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" onClick={() => this.openDrawer()}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {this.getBarText()}\r\n            </Typography>\r\n            <FormControlLabel\r\n              classes={{ label: classes.notesToggle }}\r\n              label=\"Night mode\"\r\n              labelPlacement=\"start\"\r\n              onClick={() => this.props.toggleNightMode()}\r\n              control={<Switch checked={this.props.nightMode} />}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"temporary\" classes={{ paper: classes.drawerPaper }} open={this.state.drawerOpen} onClose={() => this.closeDrawer()}>\r\n          <List>\r\n            <ListSubheader>Puzzle</ListSubheader>\r\n            <Divider />\r\n            <ListItem button onClick={() => this.createNewGame()}>\r\n              <ListItemText primary=\"New game\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.reset()} >\r\n              <ListItemText primary=\"Reset\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.validate()} >\r\n              <ListItemText primary=\"Show invalid cells\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.fillCandidates()} >\r\n              <ListItemText primary=\"Add notes\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListSubheader>Difficulty</ListSubheader>\r\n            <Divider />\r\n            {this.renderDifficulties()}\r\n          </List>\r\n        </Drawer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private openDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: true\r\n    });\r\n  }\r\n\r\n  private closeDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: false\r\n    });\r\n  }\r\n\r\n  private renderDifficulties(): JSX.Element[] {\r\n    return DIFFICUTIES.map(option => (\r\n      <ListItem\r\n        button\r\n        key={option.difficulty}\r\n        selected={this.props.difficulty === option.difficulty}\r\n        onClick={() => this.setDifficulty(option.difficulty)}>\r\n        <ListItemText primary={option.label} />\r\n      </ListItem>\r\n    ));\r\n  }\r\n\r\n  private setDifficulty(difficulty: DIFFICULTY): void {\r\n    this.closeDrawer();\r\n    this.props.changeDifficulty(difficulty);\r\n  }\r\n\r\n  private validate(): void {\r\n    this.closeDrawer();\r\n    this.props.validateSolution();\r\n  }\r\n\r\n  private getBarText(): string {\r\n    const difficulty = DIFFICUTIES.find(option => option.difficulty === this.props.difficulty);\r\n    if (difficulty) {\r\n      return `${difficulty.label}`;\r\n    }\r\n    return \"\";\r\n  }\r\n  private createNewGame(): void {\r\n    this.closeDrawer();\r\n    this.props.createNewGame();\r\n  }\r\n\r\n  private reset(): void {\r\n    this.closeDrawer();\r\n    this.props.resetSudoku();\r\n  }\r\n\r\n  private fillCandidates(): void {\r\n    this.closeDrawer();\r\n    this.props.fillCandidates();\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopBar);","import React, { Fragment } from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { undo, redo, removeDigit, setMode } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PenIcon from \"@material-ui/icons/Edit\";\r\nimport PenIconOutline from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  modeFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 25% 0 auto'\r\n  },\r\n  clearFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto 0 25%'\r\n  },\r\n});\r\n\r\nexport interface IBottomBarProps extends WithStyles<typeof styles> {\r\n  undo: typeof undo;\r\n  redo: typeof redo;\r\n  removeDigit: typeof removeDigit;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n}\r\n\r\nconst BottomBar: React.FunctionComponent<IBottomBarProps> = (props: IBottomBarProps) => {\r\n  const isNoteMode = props.mode === MODE.Note\r\n  const toggleMode = () => {\r\n    if (isNoteMode) {\r\n      props.setMode(MODE.Input);\r\n    } else {\r\n      props.setMode(MODE.Note);\r\n    }\r\n  }\r\n\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Fab color=\"primary\" className={classes.clearFab} onClick={() => props.removeDigit()}>\r\n          <ClearIcon />\r\n        </Fab>\r\n        <IconButton color=\"inherit\" disabled={!props.past.length} onClick={() => props.undo()}>\r\n          <UndoIcon />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" disabled={!props.future.length} onClick={() => props.redo()}>\r\n          <RedoIcon />\r\n        </IconButton>\r\n        <Fab color={isNoteMode ? 'secondary' : 'default'} className={classes.modeFab} onClick={() => toggleMode()}>\r\n          {isNoteMode ? <PenIconOutline /> : <PenIcon />}\r\n        </Fab>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(BottomBar);\r\n","import React from 'react';\r\nimport { withStyles, Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button, createStyles, Theme, WithTheme, WithStyles, Typography } from \"@material-ui/core\";\r\nimport { createNewGame } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n})\r\n\r\nexport interface ICompletedDialogProps extends WithStyles<typeof styles> {\r\n  createNewGame: typeof createNewGame;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst CompletedDialog: React.FunctionComponent<ICompletedDialogProps> = (props: ICompletedDialogProps) => {\r\n  const formatMillisecons = (milliSeconds: number) => {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const difficultyText = () => {\r\n    switch (props.difficulty) {\r\n      case DIFFICULTY.VeryEasy:\r\n        return 'a very easy';\r\n      case DIFFICULTY.Easy:\r\n        return 'an easy';\r\n      case DIFFICULTY.Normal:\r\n        return 'a normal';\r\n      case DIFFICULTY.Hard:\r\n        return 'a hard';\r\n      case DIFFICULTY.VeryHard:\r\n        return 'a very hard';\r\n      case DIFFICULTY.Insane:\r\n        return 'an insane';\r\n      default:\r\n        return 'an unknown';\r\n    }\r\n  }\r\n\r\n  const ellapsedTime = formatMillisecons(Date.now() - props.sudoku.getCreationTimestamp())\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xl\"\r\n      open={props.sudoku.isSolved()}\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Done!</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          You completed a {difficultyText()} puzzle.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Ellapsed time: {ellapsedTime}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => { props.createNewGame() }}>\r\n          New Game\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CompletedDialog);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../layout/App.scss\";\r\nimport SudokuComponent from \"./Sudoku\";\r\nimport Numbers from \"./Numbers\";\r\nimport { AppState } from \"../store\";\r\nimport { changeDifficulty, createNewGame, validateSolution, toggleCell, setDigit, removeDigit, navigateCells, setMode, redo, undo, toggleNightMode, resetSudoku, fillCandidates } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport TopBar from \"./TopBar\";\r\nimport BottomBar from \"./BottomBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport CompletedDialog from \"./CompletedDialog\";\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport theme from \"../theme\";\r\n\r\ninterface IAppProps {\r\n  changeDifficulty: typeof changeDifficulty;\r\n  createNewGame: typeof createNewGame;\r\n  validateSolution: typeof validateSolution;\r\n  toggleCell: typeof toggleCell;\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  navigateCells: typeof navigateCells;\r\n  setMode: typeof setMode;\r\n  undo: typeof undo,\r\n  redo: typeof redo,\r\n  mode: MODE;\r\n  sudoku: Sudoku;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  difficulty: DIFFICULTY;\r\n  nightMode: boolean;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  resetSudoku: typeof resetSudoku;\r\n  fillCandidates: typeof fillCandidates;\r\n}\r\n\r\nclass App extends Component<IAppProps> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const t = theme(this.props.nightMode)\r\n    return (\r\n      <div className=\"App\">\r\n        <MuiThemeProvider theme={t}>\r\n          <CssBaseline />\r\n          <TopBar {...this.props} />\r\n          <div className=\"App-content\">\r\n            <SudokuComponent {...this.props} />\r\n            <Numbers {...this.props} />\r\n          </div>\r\n          <CompletedDialog {...this.props}></CompletedDialog>\r\n          <BottomBar {...this.props} />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  public componentDidMount(): void {\r\n    document.addEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  private handleKeyboard = (e: KeyboardEvent) => {\r\n    const key = e.which;\r\n    if (key >= 49 && key <= 57) { // [1...9]\r\n      this.props.setDigit(key - 48);\r\n    } else if (key === 8 || key === 2) { // backspace || delete\r\n      this.props.removeDigit()\r\n    } else if (key === 37) { //left \r\n      this.props.navigateCells(DIRECTION.Left);\r\n    } else if (key === 38) { //up\r\n      this.props.navigateCells(DIRECTION.Up);\r\n    } else if (key === 39) { // right\r\n      this.props.navigateCells(DIRECTION.Right);\r\n    } else if (key === 40) { // down\r\n      this.props.navigateCells(DIRECTION.Down);\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  sudoku: state.game.sudoku.current,\r\n  past: state.game.sudoku.past,\r\n  future: state.game.sudoku.future,\r\n  difficulty: state.game.difficulty,\r\n  mode: state.game.mode,\r\n  nightMode: state.game.nightMode\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeDifficulty,\r\n    createNewGame,\r\n    validateSolution,\r\n    toggleCell,\r\n    setDigit,\r\n    removeDigit,\r\n    navigateCells,\r\n    setMode,\r\n    undo,\r\n    redo,\r\n    toggleNightMode,\r\n    resetSudoku,\r\n    fillCandidates\r\n  }\r\n)(App);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default (nightMode: boolean) => {\r\n  return createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    palette: {\r\n      type: nightMode ? 'dark' : 'light',\r\n      primary: {\r\n        main: '#424242'\r\n      },\r\n      secondary: {\r\n        main: '#616161'\r\n      }\r\n    },\r\n  });\r\n};","import {\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  REMOVE_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  DIRECTION,\r\n  TOGGLE_NOTE_MODE,\r\n  REDO,\r\n  UNDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU,\r\n  FILL_CANDIDATES\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport function changeDifficulty(difficulty: DIFFICULTY): OptionActions {\r\n  return {\r\n    type: CHANGE_DIFFICULTY,\r\n    payload: difficulty\r\n  };\r\n}\r\n\r\nexport function createNewGame(): OptionActions {\r\n  return {\r\n    type: NEW_GAME\r\n  };\r\n}\r\n\r\nexport function validateSolution(): OptionActions {\r\n  return {\r\n    type: VALIDATE_SOLUTION\r\n  };\r\n}\r\n\r\nexport function toggleCell(row: number, column: number): OptionActions {\r\n  return {\r\n    type: TOGGLE_CELL,\r\n    payload: {\r\n      row,\r\n      column\r\n    }\r\n  };\r\n}\r\n\r\nexport function setDigit(digit: number): OptionActions {\r\n  return {\r\n    type: SET_DIGIT,\r\n    payload: {\r\n      digit\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeDigit(): OptionActions {\r\n  return {\r\n    type: REMOVE_DIGIT\r\n  };\r\n}\r\n\r\nexport function navigateCells(direction: DIRECTION): OptionActions {\r\n  return {\r\n    type: NAVIGATE_CELLS,\r\n    payload: {\r\n      direction\r\n    }\r\n  };\r\n}\r\n\r\nexport function setMode(mode: MODE): OptionActions {\r\n  return {\r\n    type: TOGGLE_NOTE_MODE,\r\n    payload: {\r\n      mode\r\n    }\r\n  }\r\n}\r\n\r\nexport function undo(): OptionActions {\r\n  return {\r\n    type: UNDO,\r\n  };\r\n}\r\n\r\nexport function redo(): OptionActions {\r\n  return {\r\n    type: REDO\r\n  };\r\n}\r\n\r\nexport function toggleNightMode(): OptionActions {\r\n  return {\r\n    type: TOGGLE_NIGHT_MODE\r\n  };\r\n}\r\n\r\nexport function resetSudoku(): OptionActions {\r\n  return {\r\n    type: RESET_SUDOKU\r\n  };\r\n}\r\n\r\nexport function fillCandidates(): OptionActions {\r\n  return {\r\n    type: FILL_CANDIDATES\r\n  };\r\n}\r\n","import \"./layout/index.scss\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport configureStore from \"./store\";\r\nimport App from \"./presentation/App\";\r\nimport pregenerate from \"./utils/pregenerate\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).pregenerate = pregenerate;\r\n}\r\n"],"sourceRoot":""}