{"version":3,"sources":["serviceWorker.ts","store/types.ts","models/Difficulty.ts","models/Cell.ts","models/Row.ts","models/Sudoku.ts","store/reducers.ts","store/index.ts","presentation/SudokuCell.tsx","presentation/SudokuRow.tsx","presentation/Sudoku.tsx","presentation/Numbers.tsx","presentation/TopBar.tsx","presentation/BottomBar.tsx","presentation/CompletedDialog.tsx","presentation/App.tsx","theme.ts","store/actions.ts","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DIRECTION","MODE","DIFFICULTY","CHANGE_DIFFICULTY","NEW_GAME","VALIDATE_SOLUTION","TOGGLE_CELL","SET_DIGIT","REMOVE_DIGIT","NAVIGATE_CELLS","TOGGLE_NOTE_MODE","UNDO","REDO","TOGGLE_NIGHT_MODE","NO_NOTES","Cell","previous","Object","classCallCheck","this","value","valid","solution","row","column","given","active","notes","guess","concat","calculateBlock","modifier","cell","digit","mode","Note","map","x","i","Guess","Row","cells","index","c","validate","setActive","isActive","getColumn","setDigit","removeDigit","data","toConsumableArray","_ref","_ref2","slicedToArray","create","BASE","Sudoku","difficulty","rows","activeCell","createdAt","Easy","moveRowOrColumn","removeValues","d","cellsToRemove","Math","floor","random","y","_this$data$x$y","_this$getFromAndTo","getFromAndTo","_this$getFromAndTo2","from","to","round","moveColumn","moveRow","arguments","length","undefined","block","temp","forEach","sudoku","r","toggleCell","allNumbers","reduce","acc","next","getCells","getValue","solved","_loop","filter","n","push","dirrection","increment","val","decrement","Up","Down","Right","Left","activateCell","every","isSolved","some","Date","now","generateSudoku","initialDifficulty","fallBack","localStorage","getItem","readDifficulty","initialState","past","current","future","Input","nightMode","rootReducer","combineReducers","game","action","type","payload","setItem","toString","objectSpread","navigate","direction","SET_MODE","slice","SudokuCellComponent","_this","classes","props","react_default","a","createElement","className","container","onClick","handleClick","calculateClasses","renderContent","style","fontSize","size","getNotes","ceil","cellClasses","note1","note2","note3","note4","note5","note6","note7","note8","note9","Fragment","key","getRow","_result","getBlock","result","defineProperty","content","thickBorderTop","thickBorderBottom","thickBorderLeft","thickBorderRight","dark","isGiven","invalid","isValid","keys","join","Component","withStyles","theme","borderThin","palette","common","black","borderThick","createStyles","display","position","width","paddingBottom","textAlign","userSelect","top","right","bottom","left","borderRight","borderBottom","borderTop","borderLeft","backgroundColor","primary","light","grey","fontWeight","color","contrastText","SudokuRowComponent","sudokuRow","renderRow","SudokuCell","getCellSize","rowSize","SudokuComponent","possibleConstructorReturn","getPrototypeOf","call","containerRef","setCellSize","rowDOM","boundingRectangle","getBoundingClientRect","height","smallestDimmesion","fittedDimmension","setState","requestAnimationFrame","React","createRef","ref","Paper_default","sudokuPaper","renderRows","_this2","getRows","SudokuRow","milliSeconds","pad","num","padStart","seconds","minutes","hours","marginLeft","marginRight","@media (orientation: portrait)","@media (orientation: landscape)","padding","spacing","unit","paddingTop","chip","margin","index_es","Array","isDigitSolved","Chip_default","label","DIFFICUTIES","VeryEasy","Normal","Hard","VeryHard","Insane","TopBar","drawerOpen","AppBar_default","Toolbar_default","IconButton_default","menuButton","openDrawer","Menu_default","Typography_default","variant","grow","getBarText","FormControlLabel_default","notesToggle","labelPlacement","toggleMode","control","Switch_default","checked","Drawer_default","paper","drawerPaper","open","onClose","closeDrawer","List_default","ListSubheader_default","Divider_default","ListItem_default","button","createNewGame","ListItemText_default","renderDifficulties","selected","toggleNightMode","_this3","option","setDifficulty","changeDifficulty","validateSolution","_this4","find","setMode","_drawerPaper","flexGrow","breakpoints","down","minWidth","up","white","appBar","toolbar","alignItems","justifyContent","disabled","undo","Undo_default","Clear_default","redo","Redo_default","ellapsedTime","formatMillisecons","getCreationTimestamp","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","id","gutterBottom","difficultyText","App","handleKeyboard","e","which","navigateCells","t","createMuiTheme","typography","useNextVariants","main","secondary","MuiThemeProvider_default","CssBaseline_default","presentation_TopBar","presentation_Sudoku","Numbers","presentation_CompletedDialog","presentation_BottomBar","document","addEventListener","removeEventListener","connect","store","createStore","ReactDOM","render","es","presentation_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d0093952.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport interface IGameState {\r\n  difficulty: DIFFICULTY;\r\n  sudoku: {\r\n    past: Sudoku[];\r\n    current: Sudoku;\r\n    future: Sudoku[];\r\n  };\r\n  mode: MODE;\r\n  nightMode: boolean;\r\n}\r\n\r\nexport enum DIRECTION {\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right\r\n}\r\n\r\nexport enum MODE {\r\n  Input,\r\n  Note,\r\n  Guess\r\n}\r\n\r\nexport const CHANGE_DIFFICULTY = \"CHANGE_DIFFICULTY\";\r\nexport const NEW_GAME = \"NEW_GAME\";\r\nexport const VALIDATE_SOLUTION = \"VALIDATE_SOLUTION\";\r\nexport const TOGGLE_CELL = \"TOGGLE_CELLs\";\r\nexport const SET_DIGIT = \"SET_DIGIT\";\r\nexport const REMOVE_DIGIT = \"REMOVE_DIGIT\";\r\nexport const NAVIGATE_CELLS = \"NAVIGATE_CELLS\";\r\nexport const TOGGLE_NOTE_MODE = \"TOGGLE_NOTE_MODE\";\r\nexport const UNDO = \"UNDO\";\r\nexport const REDO = \"REDO\";\r\nexport const TOGGLE_NIGHT_MODE = \"TOGGLE_NIGHT_MODE\";\r\n\r\ninterface IChangeDifficultyAction {\r\n  type: typeof CHANGE_DIFFICULTY;\r\n  payload: DIFFICULTY;\r\n}\r\n\r\ninterface INewGameAction {\r\n  type: typeof NEW_GAME;\r\n}\r\n\r\ninterface IValidateSolutionAction {\r\n  type: typeof VALIDATE_SOLUTION;\r\n}\r\n\r\ninterface IToggleCellAction {\r\n  type: typeof TOGGLE_CELL;\r\n  payload: {\r\n    row: number;\r\n    column: number;\r\n  }\r\n}\r\n\r\ninterface ISetDigitAction {\r\n  type: typeof SET_DIGIT;\r\n  payload: {\r\n    digit: number;\r\n  }\r\n}\r\n\r\ninterface IRemoveDigitAction {\r\n  type: typeof REMOVE_DIGIT;\r\n}\r\n\r\ninterface INavigateCellsAction {\r\n  type: typeof NAVIGATE_CELLS;\r\n  payload: {\r\n    direction: DIRECTION;\r\n  }\r\n}\r\n\r\ninterface ISetModeAction {\r\n  type: typeof TOGGLE_NOTE_MODE;\r\n  payload: {\r\n    mode: MODE\r\n  }\r\n}\r\ninterface IUndoAction {\r\n  type: typeof UNDO;\r\n}\r\ninterface IRedoAction {\r\n  type: typeof REDO;\r\n}\r\ninterface IToggleNightModeAction {\r\n  type: typeof TOGGLE_NIGHT_MODE;\r\n}\r\n\r\nexport type OptionActions = IChangeDifficultyAction\r\n  | INewGameAction\r\n  | IValidateSolutionAction\r\n  | IToggleCellAction\r\n  | ISetDigitAction\r\n  | IRemoveDigitAction\r\n  | INavigateCellsAction\r\n  | ISetModeAction\r\n  | IUndoAction\r\n  | IRedoAction\r\n  | IToggleNightModeAction;","\r\nexport enum DIFFICULTY {\r\n  VeryEasy = 30,\r\n  Easy = 36,\r\n  Normal = 42,\r\n  Hard = 48,\r\n  VeryHard = 54,\r\n  Insane = 60\r\n\r\n}","import { MODE } from \"../store/types\";\r\n\r\nconst NO_NOTES = [false, false, false, false, false, false, false, false, false];\r\n\r\nexport default class Cell {\r\n  private value: number | null;\r\n  private valid: boolean;\r\n  private solution: number;\r\n  private row: number;\r\n  private column: number;\r\n  private given: boolean;\r\n  private active: boolean;\r\n  private notes: boolean[];\r\n  private guess: boolean;\r\n\r\n  private constructor(previous?: Cell) {\r\n    this.value = previous ? previous.value : null;\r\n    this.solution = previous ? previous.solution : -1;\r\n    this.row = previous ? previous.row : -1;\r\n    this.column = previous ? previous.column : -1;\r\n    this.given = previous ? previous.given : false;\r\n    this.active = previous ? previous.active : false;\r\n    this.valid = previous ? previous.valid : true;\r\n    this.notes = previous ? previous.notes : [...NO_NOTES];\r\n    this.guess = previous ? previous.guess : false;\r\n  }\r\n\r\n  static create(solution: number, row: number, column: number, given: boolean): Cell {\r\n    const cell = new Cell();\r\n    cell.solution = solution;\r\n    cell.row = row;\r\n    cell.column = column;\r\n    cell.given = given;\r\n    cell.value = given ? solution : null;\r\n    return cell;\r\n  }\r\n\r\n  public getSolution(): number {\r\n    return this.solution;\r\n  }\r\n\r\n  public getValue(): number | null {\r\n    return this.value;\r\n  }\r\n\r\n  public getRow(): number {\r\n    return this.row;\r\n  }\r\n\r\n  public getColumn(): number {\r\n    return this.column;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public getBlock(): number {\r\n    if (this.row <= 3) {\r\n      return this.calculateBlock(0);\r\n    } else if (this.row >= 4 && this.row <= 6) {\r\n      return this.calculateBlock(1);\r\n    } else {\r\n      return this.calculateBlock(2);\r\n    }\r\n  }\r\n\r\n  private calculateBlock(modifier: number): number {\r\n    if (this.column <= 3) {\r\n      return modifier + 1;\r\n    } else if (this.column >= 4 && this.column <= 6) {\r\n      return modifier + 2;\r\n    } else {\r\n      return modifier + 3;\r\n    }\r\n  }\r\n\r\n  public isGiven(): boolean {\r\n    return this.given;\r\n  }\r\n\r\n  public validate(): Cell {\r\n    const cell = new Cell(this)\r\n    cell.valid = this.value === null || this.value === this.solution;\r\n    return cell;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.valid;\r\n  }\r\n\r\n  public setActive(active: boolean): Cell {\r\n    const cell = new Cell(this);\r\n    cell.active = active;\r\n    return cell;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    if (mode === MODE.Note) {\r\n      cell.notes = this.notes.map((x, i) => i === (digit - 1) ? !x : x)\r\n    } else {\r\n      if (cell.guess) {\r\n        cell.value = digit;\r\n      } else {\r\n        cell.value = this.value === digit ? null : digit;\r\n      }\r\n    }\r\n    cell.guess = mode === MODE.Guess;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public removeDigit(): Cell {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    cell.notes = [...NO_NOTES];\r\n    cell.value = null;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.value === this.solution;\r\n  }\r\n\r\n  public getNotes(): boolean[] {\r\n    return this.notes;\r\n  }\r\n\r\n  public isGuess(): boolean {\r\n    return this.guess;\r\n  }\r\n}\r\n","import Cell from \"./Cell\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\n\r\nexport default class Row {\r\n  private cells: Cell[];\r\n  private index: number;\r\n  private active: boolean;\r\n\r\n  private constructor(previous?: Row) {\r\n    this.index = previous ? previous.index : -1;\r\n    this.active = previous ? previous.active : false;\r\n    this.cells = previous ? previous.cells : [];\r\n  }\r\n\r\n  static create(data: [number, boolean][], index: number): Row {\r\n    const row = new Row();\r\n    row.cells = [...data.map(([value, given], i) => Cell.create(value, index, i + 1, given))];\r\n    row.index = index;\r\n    return row;\r\n  }\r\n\r\n  public getCells(): Cell[] {\r\n    return this.cells;\r\n  }\r\n\r\n  public validate(): Row {\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.validate());\r\n    return row;\r\n  }\r\n\r\n  public getIndex(): number {\r\n    return this.index;\r\n  }\r\n\r\n  public toggleCell(index: number, column: number): Row {\r\n    if (this.index !== index && !this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n\r\n    if (this.active) {\r\n      if (this.index === index) {\r\n        row.cells = this.cells.map(c => {\r\n          return c.setActive(c.isActive() ? false : c.getColumn() === column);\r\n        });\r\n      } else {\r\n        row.active = false;\r\n        row.cells = this.cells.map(c => c.isActive() ? c.setActive(false) : c);\r\n      }\r\n    } else if (this.index === index) {\r\n      row.active = true;\r\n      row.cells = this.cells.map(c => c.getColumn() === column ? c.setActive(true) : c);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.setDigit(digit, mode));\r\n    return row;\r\n  }\r\n\r\n  public removeDigit(): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.removeDigit());\r\n    return row;\r\n  }\r\n\r\n}\r\n","import Row from \"./Row\";\r\nimport { DIFFICULTY } from \"./Difficulty\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\n\r\nconst BASE = [\r\n  [3, 6, 1, 7, 2, 5, 9, 4, 8],\r\n  [5, 8, 7, 9, 6, 4, 2, 1, 3],\r\n  [4, 9, 2, 8, 3, 1, 6, 5, 7],\r\n  [6, 3, 8, 2, 5, 9, 4, 7, 1],\r\n  [1, 7, 4, 6, 8, 3, 5, 9, 2],\r\n  [2, 5, 9, 1, 4, 7, 8, 3, 6],\r\n  [7, 4, 6, 3, 9, 2, 1, 8, 5],\r\n  [9, 2, 3, 5, 1, 8, 7, 6, 4],\r\n  [8, 1, 5, 4, 7, 6, 3, 2, 9]\r\n];\r\n\r\nexport default class Sudoku {\r\n  private difficulty: DIFFICULTY;\r\n  private data: ([number, boolean][])[];\r\n  private rows: Row[];\r\n  private activeCell: { row: number, column: number };\r\n  private createdAt: number;\r\n\r\n  private constructor(previous?: Sudoku) {\r\n    this.difficulty = previous ? previous.difficulty : DIFFICULTY.Easy;\r\n    this.data = previous ? previous.data : [];\r\n    this.rows = previous ? previous.rows : [];\r\n    this.activeCell = previous ? previous.activeCell : { row: -1, column: -1 }\r\n    this.createdAt = previous ? previous.createdAt : 0;\r\n  }\r\n\r\n  static create(difficulty: DIFFICULTY): Sudoku {\r\n    const sudoku = new Sudoku();\r\n    sudoku.difficulty = difficulty;\r\n    sudoku.createdAt = Date.now();\r\n    sudoku.data = BASE.map(r => r.map(c => [c, true] as [number, boolean]));\r\n    sudoku.generateSudoku();\r\n    return sudoku\r\n  }\r\n\r\n  public getRows(): Row[] {\r\n    return this.rows;\r\n  }\r\n\r\n  private generateSudoku() {\r\n    for (let i = 0; i < 42e4; i++) {\r\n      this.moveRowOrColumn();\r\n    }\r\n    this.removeValues();\r\n    this.rows = this.data.map((d, i) => Row.create(d, i + 1))\r\n  }\r\n\r\n  private removeValues() {\r\n    let cellsToRemove = this.difficulty as number\r\n    while (cellsToRemove) {\r\n      const x = Math.floor(Math.random() * 9);\r\n      const y = Math.floor(Math.random() * 9);\r\n      const [value, given] = this.data[x][y]\r\n      if (given) {\r\n        this.data[x][y] = [value, false] as [number, boolean];\r\n        --cellsToRemove;\r\n      }\r\n    }\r\n  }\r\n\r\n  private moveRowOrColumn() {\r\n    const [from, to] = this.getFromAndTo()\r\n    if (!!Math.round(Math.random())) {\r\n      this.moveColumn(from, to);\r\n    } else {\r\n      this.moveRow(from, to);\r\n    }\r\n  }\r\n\r\n  private getFromAndTo(from: number = -1): [number, number] {\r\n    from = from === -1 ? Math.floor(Math.random() * 3) : from;\r\n    let to = Math.floor(Math.random() * 3);\r\n    if (to === from) {\r\n      return this.getFromAndTo(from);\r\n    }\r\n    const block = Math.floor(Math.random() * 3);\r\n    return [block * 3 + from, block * 3 + to];\r\n  }\r\n\r\n  private moveRow(from: number, to: number) {\r\n    const temp = this.data[to];\r\n    this.data[to] = this.data[from];\r\n    this.data[from] = temp;\r\n  }\r\n\r\n  private moveColumn(from: number, to: number) {\r\n    this.data.forEach(row => {\r\n      const temp = row[to];\r\n      row[to] = row[from];\r\n      row[from] = temp;\r\n    });\r\n  }\r\n\r\n  public validate(): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.rows = this.rows.map(r => r.validate());\r\n    return sudoku;\r\n  }\r\n\r\n  public activateCell(row: number, column: number): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.activeCell = { row, column };\r\n    sudoku.rows = this.rows.map(r => r.toggleCell(row, column));\r\n    return sudoku;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.setDigit(digit, mode));\r\n    return sudoku;\r\n  }\r\n\r\n  public removeDigit(): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.removeDigit());\r\n    return sudoku;\r\n  }\r\n\r\n  public getSolvedNumbers(): number[] {\r\n    const allNumbers = this.rows.reduce((acc: number[], next: Row) =>\r\n      acc.concat(next.getCells().map(c => c.getValue() || 0), []),\r\n      []\r\n    );\r\n    const solved = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      if (allNumbers.filter(n => n === i).length === 9) {\r\n        solved.push(i);\r\n      }\r\n    }\r\n    return solved;\r\n  }\r\n\r\n  public navigate(dirrection: DIRECTION): Sudoku {\r\n    const increment = (val: number) => val === 9 ? 1 : val + 1;\r\n    const decrement = (val: number) => val === 1 ? 9 : val - 1;\r\n\r\n    switch (dirrection) {\r\n      case DIRECTION.Up:\r\n        this.activeCell.row = decrement(this.activeCell.row);\r\n        break;\r\n      case DIRECTION.Down:\r\n        this.activeCell.row = increment(this.activeCell.row);\r\n        break;\r\n      case DIRECTION.Right:\r\n        this.activeCell.column = increment(this.activeCell.column);\r\n        break;\r\n      case DIRECTION.Left:\r\n        this.activeCell.column = decrement(this.activeCell.column);\r\n        break;\r\n    }\r\n    return this.activateCell(this.activeCell.row, this.activeCell.column);\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.rows.every(r => r.getCells().every(c => c.isSolved()))\r\n  }\r\n\r\n  public getCreationTimestamp(): number {\r\n    return this.createdAt;\r\n  }\r\n\r\n  public isDigitSolved(digit: number): boolean {\r\n    return this.rows.every(r => r.getCells().some(c => c.getValue() === digit && c.isSolved()));\r\n  }\r\n}\r\n","import {\r\n  IGameState,\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  REMOVE_DIGIT,\r\n  TOGGLE_NOTE_MODE as SET_MODE,\r\n  UNDO,\r\n  REDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE\r\n} from \"./types\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nconst initialDifficulty = readDifficulty(DIFFICULTY.Easy)\r\nconst initialNightMode = false;\r\nconst initialState: IGameState = {\r\n  difficulty: initialDifficulty,\r\n  sudoku: {\r\n    past: [],\r\n    current: Sudoku.create(initialDifficulty).activateCell(1, 1),\r\n    future: []\r\n  },\r\n  mode: MODE.Input,\r\n  nightMode: initialNightMode\r\n};\r\n\r\nexport function gameReducer(state = initialState, action: OptionActions): IGameState {\r\n  switch (action.type) {\r\n    case CHANGE_DIFFICULTY:\r\n      writeDifficulty(action.payload);\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n        sudoku: {\r\n          past: [],\r\n          current: Sudoku.create(action.payload).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case NEW_GAME:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: Sudoku.create(state.difficulty),\r\n          future: []\r\n        }\r\n      };\r\n    case VALIDATE_SOLUTION:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.validate()\r\n        }\r\n      };\r\n    case TOGGLE_CELL:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.activateCell(action.payload.row, action.payload.column)\r\n        }\r\n      };\r\n    case SET_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.setDigit(action.payload.digit, state.mode),\r\n          future: []\r\n        }\r\n      };\r\n    case REMOVE_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.removeDigit(),\r\n          future: []\r\n        }\r\n      };\r\n    case NAVIGATE_CELLS:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.navigate(action.payload.direction)\r\n        }\r\n      };\r\n    case SET_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload.mode\r\n      };\r\n    case UNDO:\r\n      if (!state.sudoku.past.length) {\r\n        return state;\r\n      }\r\n      const previous = state.sudoku.past.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: state.sudoku.past.slice(0, -1),\r\n          current: previous,\r\n          future: [...state.sudoku.future, state.sudoku.current]\r\n        }\r\n      }\r\n    case REDO:\r\n      if (!state.sudoku.future.length) {\r\n        return state;\r\n      }\r\n      const next = state.sudoku.future.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: next,\r\n          future: state.sudoku.future.slice(0, -1)\r\n        }\r\n      }\r\n    case TOGGLE_NIGHT_MODE:\r\n\r\n      return {\r\n        ...state,\r\n        nightMode: !state.nightMode\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction readDifficulty(fallBack: DIFFICULTY): DIFFICULTY {\r\n  const data = window.localStorage.getItem('DIFFICULTY');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return +data as DIFFICULTY;\r\n}\r\nfunction writeDifficulty(difficulty: DIFFICULTY) {\r\n  window.localStorage.setItem('DIFFICULTY', difficulty.toString());\r\n}","import \"typeface-roboto\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nimport { gameReducer } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport Cell from \"../models/Cell\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: Theme) => {\r\n  const borderThin = `solid 1px ${theme.palette.common.black}`;\r\n  const borderThick = `solid 2px ${theme.palette.common.black}`;\r\n\r\n  return createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      width: '11.111111%',\r\n      paddingBottom: '11.111111%',\r\n      textAlign: 'center',\r\n      userSelect: \"none\"\r\n    },\r\n    content: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      borderRight: borderThin,\r\n      borderBottom: borderThin\r\n    },\r\n    thickBorderTop: {\r\n      borderTop: borderThick\r\n    },\r\n    thickBorderBottom: {\r\n      borderBottom: borderThick\r\n    },\r\n    thickBorderLeft: {\r\n      borderLeft: borderThick\r\n    },\r\n    thickBorderRight: {\r\n      borderRight: borderThick\r\n    },\r\n    dark: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.light : theme.palette.grey[200],\r\n    },\r\n    given: {\r\n      fontWeight: 'bold'\r\n    },\r\n    invalid: {\r\n      backgroundColor: theme.palette.error.light,\r\n      color: theme.palette.error.contrastText\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.dark : theme.palette.primary.light,\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    note1: {\r\n      position: 'absolute',\r\n      top: 0,\r\n      left: 0,\r\n      bottom: '66.666667%',\r\n      right: '66.666667%'\r\n    },\r\n    note2: {\r\n      position: 'absolute',\r\n      top: \"0\",\r\n      left: \"33.333333%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note3: {\r\n      position: 'absolute',\r\n      top: \"0\",\r\n      left: \"66.666667%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"0\",\r\n    },\r\n    note4: {\r\n      position: 'absolute',\r\n      top: \"33.333333%\",\r\n      left: \"0\",\r\n      bottom: \"33.333333%\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note5: {\r\n      position: 'absolute',\r\n      top: \"33.333333%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note6: {\r\n      position: 'absolute',\r\n      top: \"33.333333%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"0\",\r\n    },\r\n    note7: {\r\n      position: 'absolute',\r\n      top: \"66.666667%\",\r\n      left: \"0\",\r\n      bottom: \"0\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note8: {\r\n      position: 'absolute',\r\n      top: \"66.666667%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"0\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note9: {\r\n      position: 'absolute',\r\n      top: \"66.666667%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n    }\r\n  });\r\n}\r\n\r\nexport interface ISudokuCellComponentProps extends WithStyles<typeof styles> {\r\n  cell: Cell;\r\n  size: number;\r\n  toggleCell: typeof toggleCell\r\n}\r\n\r\nclass SudokuCellComponent extends Component<ISudokuCellComponentProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} onClick={() => this.handleClick()}>\r\n        <div className={this.calculateClasses()}>\r\n          {this.renderContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent(): JSX.Element {\r\n    const { classes } = this.props;\r\n    const value = this.props.cell.getValue();\r\n    if (!!value) {\r\n      return (\r\n        <span style={{ fontSize: `${this.props.size}px` }}>{value}</span>\r\n      );\r\n    }\r\n    const notes = this.props.cell.getNotes();\r\n    const fontSize = `${Math.ceil((this.props.size / 3))}px`;\r\n    const cellClasses = [\r\n      classes.note1,\r\n      classes.note2,\r\n      classes.note3,\r\n      classes.note4,\r\n      classes.note5,\r\n      classes.note6,\r\n      classes.note7,\r\n      classes.note8,\r\n      classes.note9\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          notes.map((x, i) => (\r\n            <span className={cellClasses[i]} key={i} style={{ fontSize: fontSize }}>\r\n              {x ? i + 1 : ''}\r\n            </span>\r\n          ))\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n\r\n  private handleClick(): void {\r\n    this.props.toggleCell(this.props.cell.getRow(), this.props.cell.getColumn())\r\n  }\r\n\r\n  private calculateClasses(): string {\r\n    const { classes } = this.props;\r\n    const cell = this.props.cell;\r\n    const row = cell.getRow();\r\n    const column = cell.getColumn();\r\n    const block = cell.getBlock();\r\n\r\n    const result = {\r\n      [classes.content]: true,\r\n      [classes.thickBorderTop]: row === 1,\r\n      [classes.thickBorderBottom]: row % 3 === 0,\r\n      [classes.thickBorderLeft]: column === 1,\r\n      [classes.thickBorderRight]: column % 3 === 0,\r\n      [classes.dark]: block % 2 === 0,\r\n      [classes.given]: cell.isGiven(),\r\n      [classes.invalid]: !cell.isValid(),\r\n      [classes.active]: cell.isActive(),\r\n    }\r\n    return Object.keys(result).filter(key => result[key]).join(' ');\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuCellComponent);","import React, { Component } from \"react\";\r\nimport Row from \"../models/Row\";\r\nimport SudokuCell from \"./SudokuCell\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { toggleCell } from \"../store/actions\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  sudokuRow: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport interface ISudokuRowProps extends WithStyles<typeof styles> {\r\n  row: Row;\r\n  rowSize: number;\r\n  toggleCell: typeof toggleCell;\r\n}\r\n\r\nclass SudokuRowComponent extends Component<ISudokuRowProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.sudokuRow}>\r\n        {this.renderRow()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRow(): JSX.Element[] | null {\r\n    return this.props.row\r\n      .getCells()\r\n      .map((c, i) => <SudokuCell toggleCell={this.props.toggleCell} cell={c} size={this.getCellSize()} key={i} />);\r\n  }\r\n\r\n  private getCellSize(): number {\r\n    return this.props.rowSize / 9;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuRowComponent);","import React, { Component, CSSProperties } from \"react\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport SudokuRow from \"./SudokuRow\";\r\nimport { createNewGame, toggleCell } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, WithStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    position: 'relative',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n      paddingBottom: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      height: 'calc(100vh - 2*64px - 100px)',\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  sudokuPaper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    padding: theme.spacing.unit\r\n  }\r\n});\r\n\r\nexport interface ISudokuProps extends WithStyles<typeof styles> {\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n  createNewGame: typeof createNewGame;\r\n  toggleCell: typeof toggleCell\r\n\r\n}\r\n\r\nexport interface ISudokuState {\r\n  rowSize: number;\r\n}\r\n\r\nclass SudokuComponent extends Component<ISudokuProps, ISudokuState> {\r\n  private containerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: ISudokuProps) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.state = {\r\n      rowSize: 0\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} ref={this.containerRef}>\r\n        <Paper className={classes.sudokuPaper} >\r\n          {this.renderRows()}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setCellSize();\r\n  }\r\n\r\n  private setCellSize = () => {\r\n    const rowDOM = this.containerRef.current;\r\n    if (rowDOM) {\r\n      const boundingRectangle = rowDOM.getBoundingClientRect();\r\n      const height = boundingRectangle.height - 100;\r\n      const width = boundingRectangle.width\r\n      const smallestDimmesion = height < width ? height : width;\r\n      const fittedDimmension = 9 * Math.floor(smallestDimmesion / 9);\r\n      this.setState({\r\n        rowSize: fittedDimmension\r\n      });\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        this.setCellSize();\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderRows(): JSX.Element[] | null {\r\n    if (!this.state.rowSize) {\r\n      return null;\r\n    }\r\n    return this.props.sudoku.getRows().map((r, i) => (\r\n      <SudokuRow row={r} key={i} rowSize={this.state.rowSize} toggleCell={this.props.toggleCell} />\r\n    ));\r\n  }\r\n\r\n  private formatMillisecons(milliSeconds: number): string {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SudokuComponent);","import React from 'react';\r\n\r\nimport { setDigit, removeDigit, setMode, redo, undo } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport { Paper, createStyles, Theme, WithStyles, withStyles } from '@material-ui/core';\r\nimport Chip, { ChipProps } from '@material-ui/core/Chip'\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    paddingTop: 15,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  chip: {\r\n    margin: '4px 2px 4px 2px'\r\n  }\r\n});\r\n\r\ninterface INumbersProps extends WithStyles<typeof styles> {\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n  sudoku: Sudoku;\r\n}\r\n\r\nconst INumbers: React.FunctionComponent<INumbersProps> = props => {\r\n  if (props.sudoku.isSolved()) {\r\n    return null;\r\n  }\r\n\r\n  const { classes } = props\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper>\r\n        {[...Array(10).keys()].slice(1).map(x => {\r\n          let color: ChipProps['color'] = 'primary';\r\n          if (props.sudoku.isDigitSolved(x)) {\r\n            color = 'default';\r\n          } else if (props.mode === MODE.Note) {\r\n            color = 'secondary';\r\n          }\r\n          return (\r\n            <Chip onClick={() => props.setDigit(x)} color={color} className={classes.chip} label={x} key={x} />\r\n          );\r\n        })}\r\n      </Paper>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(INumbers);","import React, { Component } from 'react';\r\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\nimport { changeDifficulty, validateSolution, createNewGame, setMode, toggleNightMode } from '../store/actions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { MODE } from '../store/types';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerPaper: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      minWidth: '70%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: '40%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      minWidth: '30%'\r\n    }\r\n  },\r\n  notesToggle: {\r\n    color: theme.palette.common.white\r\n  }\r\n});\r\n\r\nexport interface ITopBarProps extends WithStyles<typeof styles> {\r\n  difficulty: DIFFICULTY;\r\n  mode: MODE;\r\n\r\n  changeDifficulty: typeof changeDifficulty;\r\n  validateSolution: typeof validateSolution;\r\n  createNewGame: typeof createNewGame;\r\n  setMode: typeof setMode;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  nightMode: boolean;\r\n}\r\nexport interface ITopBarState {\r\n  drawerOpen: boolean;\r\n}\r\n\r\nconst DIFFICUTIES = [{\r\n  difficulty: DIFFICULTY.VeryEasy,\r\n  label: \"Very Easy\"\r\n}, {\r\n  difficulty: DIFFICULTY.Easy,\r\n  label: \"Easy\"\r\n}, {\r\n  difficulty: DIFFICULTY.Normal,\r\n  label: \"Normal\"\r\n}, {\r\n  difficulty: DIFFICULTY.Hard,\r\n  label: \"Hard\"\r\n}, {\r\n  difficulty: DIFFICULTY.VeryHard,\r\n  label: \"Very Hard\"\r\n}, {\r\n  difficulty: DIFFICULTY.Insane,\r\n  label: \"Insane\"\r\n}]\r\n\r\nclass TopBar extends Component<ITopBarProps, ITopBarState> {\r\n  constructor(props: ITopBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" onClick={() => this.openDrawer()}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {this.getBarText()}\r\n            </Typography>\r\n            <FormControlLabel\r\n              classes={{ label: classes.notesToggle }}\r\n              label=\"Take Notes\"\r\n              labelPlacement=\"start\"\r\n              onClick={() => this.toggleMode()}\r\n              control={\r\n                <Switch color=\"secondary\" checked={this.props.mode === MODE.Note} />\r\n              }\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"temporary\" classes={{ paper: classes.drawerPaper }} open={this.state.drawerOpen} onClose={() => this.closeDrawer()}>\r\n          <List>\r\n            <ListSubheader>Puzzle</ListSubheader>\r\n            <Divider />\r\n            <ListItem button onClick={() => this.createNewGame()}>\r\n              <ListItemText primary=\"New game\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Reset\" />\r\n            </ListItem>\r\n            <ListItem button>\r\n              <ListItemText primary=\"Validate\" onClick={() => this.validate()} />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListSubheader>Difficulty</ListSubheader>\r\n            <Divider />\r\n            {this.renderDifficulties()}\r\n            <Divider />\r\n            <ListSubheader>Settings</ListSubheader>\r\n            <Divider />\r\n            <ListItem button\r\n              selected={this.props.nightMode}\r\n              onClick={() => this.props.toggleNightMode()}>\r\n              <ListItemText primary=\"Nightmode\" onClick={() => this.validate()} />\r\n            </ListItem>\r\n          </List>\r\n        </Drawer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private openDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: true\r\n    });\r\n  }\r\n\r\n  private closeDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: false\r\n    });\r\n  }\r\n\r\n  private renderDifficulties(): JSX.Element[] {\r\n    return DIFFICUTIES.map(option => (\r\n      <ListItem\r\n        button\r\n        key={option.difficulty}\r\n        selected={this.props.difficulty === option.difficulty}\r\n        onClick={() => this.setDifficulty(option.difficulty)}>\r\n        <ListItemText primary={option.label} />\r\n      </ListItem>\r\n    ));\r\n  }\r\n\r\n  private setDifficulty(difficulty: DIFFICULTY): void {\r\n    this.closeDrawer();\r\n    this.props.changeDifficulty(difficulty);\r\n  }\r\n\r\n  private validate(): void {\r\n    this.closeDrawer();\r\n    this.props.validateSolution()\r\n  }\r\n\r\n  private getBarText(): string {\r\n    const difficulty = DIFFICUTIES.find(option => option.difficulty === this.props.difficulty);\r\n    if (difficulty) {\r\n      return `${difficulty.label}`;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  private toggleMode(): void {\r\n    if (this.props.mode === MODE.Note) {\r\n      this.props.setMode(MODE.Input);\r\n    } else {\r\n      this.props.setMode(MODE.Note);\r\n    }\r\n  }\r\n\r\n  private createNewGame(): void {\r\n    this.closeDrawer();\r\n    this.props.createNewGame();\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopBar);","import React, { Fragment } from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { undo, redo, removeDigit } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  }\r\n});\r\n\r\nexport interface IBottomBarProps extends WithStyles<typeof styles> {\r\n  undo: typeof undo;\r\n  redo: typeof redo;\r\n  removeDigit: typeof removeDigit;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n}\r\n\r\nconst BottomBar: React.FunctionComponent<IBottomBarProps> = (props: IBottomBarProps) => {\r\n  const { classes } = props;\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton color=\"inherit\" disabled={!props.past.length} onClick={() => props.undo()}>\r\n          <UndoIcon />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" onClick={() => props.removeDigit()}>\r\n          <ClearIcon />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" disabled={!props.future.length} onClick={() => props.redo()}>\r\n          <RedoIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(BottomBar);\r\n","import React from 'react';\r\nimport { withStyles, Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button, createStyles, Theme, WithTheme, WithStyles, Typography } from \"@material-ui/core\";\r\nimport { createNewGame } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n})\r\n\r\nexport interface ICompletedDialogProps extends WithStyles<typeof styles> {\r\n  createNewGame: typeof createNewGame;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst CompletedDialog: React.FunctionComponent<ICompletedDialogProps> = (props: ICompletedDialogProps) => {\r\n  const formatMillisecons = (milliSeconds: number) => {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const difficultyText = () => {\r\n    switch (props.difficulty) {\r\n      case DIFFICULTY.VeryEasy:\r\n        return 'a very easy';\r\n      case DIFFICULTY.Easy:\r\n        return 'an easy';\r\n      case DIFFICULTY.Normal:\r\n        return 'a normal';\r\n      case DIFFICULTY.Hard:\r\n        return 'a hard';\r\n      case DIFFICULTY.VeryHard:\r\n        return 'a very hard';\r\n      case DIFFICULTY.Insane:\r\n        return 'an insane';\r\n      default:\r\n        return 'an unknown';\r\n    }\r\n  }\r\n\r\n  const ellapsedTime = formatMillisecons(Date.now() - props.sudoku.getCreationTimestamp())\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xl\"\r\n      open={props.sudoku.isSolved()}\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Done!</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          You completed a {difficultyText()} puzzle.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Ellapsed time: {ellapsedTime}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={() => { props.createNewGame() }}>\r\n          New Game\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CompletedDialog);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../layout/App.scss\";\r\nimport SudokuComponent from \"./Sudoku\";\r\nimport Numbers from \"./Numbers\";\r\nimport { AppState } from \"../store\";\r\nimport { changeDifficulty, createNewGame, validateSolution, toggleCell, setDigit, removeDigit, navigateCells, setMode, redo, undo, toggleNightMode } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport TopBar from \"./TopBar\";\r\nimport BottomBar from \"./BottomBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport CompletedDialog from \"./CompletedDialog\";\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport theme from \"../theme\";\r\n\r\n\r\ninterface IAppProps {\r\n  changeDifficulty: typeof changeDifficulty;\r\n  createNewGame: typeof createNewGame;\r\n  validateSolution: typeof validateSolution;\r\n  toggleCell: typeof toggleCell;\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  navigateCells: typeof navigateCells;\r\n  setMode: typeof setMode;\r\n  undo: typeof undo,\r\n  redo: typeof redo,\r\n  mode: MODE;\r\n  sudoku: Sudoku;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  difficulty: DIFFICULTY;\r\n  nightMode: boolean;\r\n  toggleNightMode: typeof toggleNightMode;\r\n}\r\n\r\nclass App extends Component<IAppProps> {\r\n  public render(): JSX.Element {\r\n    const t = theme(this.props.nightMode)\r\n    return (\r\n      <div className=\"App\">\r\n        <MuiThemeProvider theme={t}>\r\n          <CssBaseline />\r\n          <TopBar {...this.props} />\r\n          <div className=\"App-content\">\r\n            <SudokuComponent {...this.props} />\r\n            <Numbers {...this.props} />\r\n          </div>\r\n          <CompletedDialog {...this.props}></CompletedDialog>\r\n          <BottomBar {...this.props} />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  public componentDidMount(): void {\r\n    document.addEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  private handleKeyboard = (e: KeyboardEvent) => {\r\n    const key = e.which;\r\n    if (key >= 49 && key <= 57) { // [1...9]\r\n      this.props.setDigit(key - 48);\r\n    } else if (key === 8 || key === 2) { // backspace || delete\r\n      this.props.removeDigit()\r\n    } else if (key === 37) { //left \r\n      this.props.navigateCells(DIRECTION.Left);\r\n    } else if (key === 38) { //up\r\n      this.props.navigateCells(DIRECTION.Up);\r\n    } else if (key === 39) { // right\r\n      this.props.navigateCells(DIRECTION.Right);\r\n    } else if (key === 40) { // down\r\n      this.props.navigateCells(DIRECTION.Down);\r\n    } else if (key === 32) { // space\r\n      this.props.setMode(this.props.mode !== MODE.Note ? MODE.Note : MODE.Input)\r\n    } else if (key === 27) { // esc\r\n      this.props.setMode(MODE.Input)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  sudoku: state.game.sudoku.current,\r\n  past: state.game.sudoku.past,\r\n  future: state.game.sudoku.future,\r\n  difficulty: state.game.difficulty,\r\n  mode: state.game.mode,\r\n  nightMode: state.game.nightMode\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeDifficulty,\r\n    createNewGame,\r\n    validateSolution,\r\n    toggleCell,\r\n    setDigit,\r\n    removeDigit,\r\n    navigateCells,\r\n    setMode,\r\n    undo,\r\n    redo,\r\n    toggleNightMode\r\n  }\r\n)(App);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default (nightMode: boolean) => {\r\n  return createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    palette: {\r\n      type: nightMode ? 'dark' : 'light',\r\n      primary: {\r\n        main: '#424242'\r\n      },\r\n      secondary: {\r\n        main: nightMode ? '#616161' : '#ffc107'\r\n      }\r\n    },\r\n  });\r\n};","import {\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  REMOVE_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  DIRECTION,\r\n  TOGGLE_NOTE_MODE,\r\n  REDO,\r\n  UNDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport function changeDifficulty(difficulty: DIFFICULTY): OptionActions {\r\n  return {\r\n    type: CHANGE_DIFFICULTY,\r\n    payload: difficulty\r\n  };\r\n}\r\n\r\nexport function createNewGame(): OptionActions {\r\n  return {\r\n    type: NEW_GAME\r\n  };\r\n}\r\n\r\nexport function validateSolution(): OptionActions {\r\n  return {\r\n    type: VALIDATE_SOLUTION\r\n  };\r\n}\r\n\r\nexport function toggleCell(row: number, column: number): OptionActions {\r\n  return {\r\n    type: TOGGLE_CELL,\r\n    payload: {\r\n      row,\r\n      column\r\n    }\r\n  };\r\n}\r\n\r\nexport function setDigit(digit: number): OptionActions {\r\n  return {\r\n    type: SET_DIGIT,\r\n    payload: {\r\n      digit\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeDigit(): OptionActions {\r\n  return {\r\n    type: REMOVE_DIGIT\r\n  };\r\n}\r\n\r\nexport function navigateCells(direction: DIRECTION): OptionActions {\r\n  return {\r\n    type: NAVIGATE_CELLS,\r\n    payload: {\r\n      direction\r\n    }\r\n  };\r\n}\r\n\r\nexport function setMode(mode: MODE): OptionActions {\r\n  debugger;\r\n  return {\r\n    type: TOGGLE_NOTE_MODE,\r\n    payload: {\r\n      mode\r\n    }\r\n  }\r\n}\r\n\r\nexport function undo(): OptionActions {\r\n  return {\r\n    type: UNDO,\r\n  };\r\n}\r\n\r\nexport function redo(): OptionActions {\r\n  return {\r\n    type: REDO\r\n  };\r\n}\r\n\r\nexport function toggleNightMode(): OptionActions {\r\n  return {\r\n    type: TOGGLE_NIGHT_MODE\r\n  };\r\n}\r\n\r\n","import \"./layout/index.scss\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport configureStore from \"./store\";\r\nimport App from \"./presentation/App\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}