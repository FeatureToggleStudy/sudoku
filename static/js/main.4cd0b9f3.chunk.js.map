{"version":3,"sources":["workers/GeneratePuzzle.worker.ts","serviceWorker.ts","store/types.ts","models/Difficulty.ts","models/Cell.ts","models/Row.ts","models/Analyzer.ts","models/Sudoku.ts","PuzzleStorage.ts","store/reducers.ts","store/index.ts","presentation/SudokuCell.tsx","presentation/SudokuRow.tsx","presentation/Sudoku.tsx","presentation/Numbers.tsx","presentation/TopBar.tsx","presentation/BottomBar.tsx","presentation/CompletedDialog.tsx","presentation/App.tsx","theme.ts","store/actions.ts","index.tsx"],"names":["module","exports","Worker","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","DIRECTION","MODE","DIFFICULTY","CHANGE_DIFFICULTY","NEW_GAME","VALIDATE_SOLUTION","TOGGLE_CELL","SET_DIGIT","REMOVE_DIGIT","NAVIGATE_CELLS","TOGGLE_NOTE_MODE","UNDO","REDO","TOGGLE_NIGHT_MODE","RESET_SUDOKU","FILL_CANDIDATES","CLEAR_CANDIDATES","NO_NOTES","Cell","previous","Object","classCallCheck","this","value","valid","solution","row","column","given","active","notes","guess","concat","calculateBlock","modifier","cell","digit","mode","Note","map","x","i","Guess","n","Row","cells","index","c","validate","setActive","isActive","getColumn","setDigit","removeDigit","clearNotes","data","toConsumableArray","_ref","_ref2","slicedToArray","create","Analyzer","rows","blocks","columns","v","_this$findParents","findParents","block","push","_this$segment","segment","candidates","_this$findParents2","candidate","isAvailable","flatData","reduce","s","findCandidates","result","Sudoku","activeCell","createdAt","sudoku","r","toggleCell","allNumbers","acc","next","getCells","getValue","solved","_loop","filter","length","dirrection","increment","val","decrement","objectSpread","Up","Down","Right","Left","activateCell","every","isSolved","some","sum","getNotes","getCandidates","forEach","rowCandidates","cellCandidates","clearCandidates","Date","now","d","EMPTY_DATA","src_PuzzleStorage","PuzzleStorage","_this","worker","inititializeStorage","GeneratePuzzleWorker","addEventListener","e","addPuzzle","hasLocalStorageKeys","_puzzles","puzzles","defineProperty","VeryEasy","saveJSONPuzzles","Puzzles","Easy","Normal","Hard","VeryHard","save","localStorage","_this2","id","uuid","puzzle","decodedPuzle","difficulty","puzzleMap","load","shift","decodeStoredPuzzle","postMessage","message","puzzleData","key","setItem","JSON","stringify","parse","initialDifficulty","fallBack","getItem","readDifficulty","initialNightMode","readNightMode","initialState","past","current","getPuzzle","future","Input","nightMode","rootReducer","combineReducers","game","arguments","undefined","action","type","payload","toString","navigate","direction","SET_MODE","slice","writeNightMode","fillCandidates","SudokuCellComponent","classes","props","react_default","a","createElement","className","container","onClick","handleClick","calculateClasses","renderContent","style","fontSize","size","Math","ceil","cellClasses","note1","note2","note3","note4","note5","note6","note7","note8","note9","Fragment","note","activeNote","inactiveNote","getRow","_result","getBlock","content","thickBorderTop","thickBorderBottom","thickBorderLeft","thickBorderRight","dark","isGiven","invalid","isValid","keys","join","Component","withStyles","theme","borderThin","palette","common","black","borderThick","createStyles","display","position","width","paddingBottom","textAlign","userSelect","fontFamily","justifyContent","alignItems","top","right","bottom","left","borderRight","borderBottom","color","grey","borderTop","borderLeft","backgroundColor","primary","light","fontWeight","opacity","contrastText","SudokuRowComponent","sudokuRow","renderRow","SudokuCell","getCellSize","rowSize","SudokuComponent","possibleConstructorReturn","getPrototypeOf","call","containerRef","setCellSize","rowDOM","boundingRectangle","getBoundingClientRect","height","smallestDimmesion","fittedDimmension","floor","setState","requestAnimationFrame","React","createRef","ref","Paper_default","sudokuPaper","renderRows","getRows","SudokuRow","milliSeconds","pad","num","round","padStart","seconds","minutes","hours","marginLeft","marginRight","@media (orientation: portrait)","@media (orientation: landscape)","padding","spacing","unit","paddingTop","progress","borderBottomRightRadius","borderBottomLeftRadius","errorBar","successBar","chip","margin","isNoteMode","showRedProgressBar","countEmptyCells","index_es","Array","isDigitSolved","Chip_default","label","bar","variant","DIFFICUTIES","TopBar","drawerOpen","showSnackbar","AppBar_default","Toolbar_default","IconButton_default","menuButton","openDrawer","Menu_default","Typography_default","grow","getBarText","FormControlLabel_default","notesToggle","labelPlacement","toggleNightMode","control","Switch_default","checked","Drawer_default","paper","drawerPaper","open","onClose","closeDrawer","drawerHeader","ChevronLeft_default","List_default","drawerList","Divider_default","ListSubheader_default","ListItem_default","button","createNewGame","ListItemText_default","reset","renderDifficulties","_this3","option","selected","setDifficulty","changeDifficulty","validateSolution","_this4","find","resetSudoku","_drawerPaper","flexGrow","paddingLeft","paddingRight","secondary","main","breakpoints","down","minWidth","up","white","snackbar","appBar","toolbar","modeFab","zIndex","clearFab","Fab_default","Clear_default","disabled","undo","Undo_default","redo","Redo_default","setMode","EditOutlined_default","Edit_default","ellapsedTime","formatMillisecons","getCreationTimestamp","disableBackdropClick","disableEscapeKeyDown","maxWidth","fullWidth","gutterBottom","difficultyText","App","handleKeyboard","which","navigateCells","t","createMuiTheme","typography","useNextVariants","MuiThemeProvider_default","CssBaseline_default","presentation_TopBar","presentation_Sudoku","Numbers","presentation_CompletedDialog","presentation_BottomBar","document","removeEventListener","connect","store","createStore","ReactDOM","render","es","presentation_App","getElementById","URL","process","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4cd0b9f3.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"ff45af37f8444a8bbfa5.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Sudoku from \"../models/Sudoku\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport interface IGameState {\r\n  difficulty: DIFFICULTY;\r\n  sudoku: {\r\n    past: Sudoku[];\r\n    current: Sudoku;\r\n    future: Sudoku[];\r\n  };\r\n  mode: MODE;\r\n  nightMode: boolean;\r\n}\r\n\r\nexport enum DIRECTION {\r\n  Up,\r\n  Down,\r\n  Left,\r\n  Right\r\n}\r\n\r\nexport enum MODE {\r\n  Input,\r\n  Note,\r\n  Guess\r\n}\r\n\r\nexport const CHANGE_DIFFICULTY = \"CHANGE_DIFFICULTY\";\r\nexport const NEW_GAME = \"NEW_GAME\";\r\nexport const VALIDATE_SOLUTION = \"VALIDATE_SOLUTION\";\r\nexport const TOGGLE_CELL = \"TOGGLE_CELLs\";\r\nexport const SET_DIGIT = \"SET_DIGIT\";\r\nexport const REMOVE_DIGIT = \"REMOVE_DIGIT\";\r\nexport const NAVIGATE_CELLS = \"NAVIGATE_CELLS\";\r\nexport const TOGGLE_NOTE_MODE = \"TOGGLE_NOTE_MODE\";\r\nexport const UNDO = \"UNDO\";\r\nexport const REDO = \"REDO\";\r\nexport const TOGGLE_NIGHT_MODE = \"TOGGLE_NIGHT_MODE\";\r\nexport const RESET_SUDOKU = \"RESET_SUDOKU\";\r\nexport const FILL_CANDIDATES = \"FILL_CANDIDATES\";\r\nexport const CLEAR_CANDIDATES = \"CLEAR_CANDIDATES\";\r\n\r\ninterface IChangeDifficultyAction {\r\n  type: typeof CHANGE_DIFFICULTY;\r\n  payload: DIFFICULTY;\r\n}\r\n\r\ninterface INewGameAction {\r\n  type: typeof NEW_GAME;\r\n}\r\n\r\ninterface IValidateSolutionAction {\r\n  type: typeof VALIDATE_SOLUTION;\r\n}\r\n\r\ninterface IToggleCellAction {\r\n  type: typeof TOGGLE_CELL;\r\n  payload: {\r\n    row: number;\r\n    column: number;\r\n  }\r\n}\r\n\r\ninterface ISetDigitAction {\r\n  type: typeof SET_DIGIT;\r\n  payload: {\r\n    digit: number;\r\n  }\r\n}\r\n\r\ninterface IRemoveDigitAction {\r\n  type: typeof REMOVE_DIGIT;\r\n}\r\n\r\ninterface INavigateCellsAction {\r\n  type: typeof NAVIGATE_CELLS;\r\n  payload: {\r\n    direction: DIRECTION;\r\n  }\r\n}\r\n\r\ninterface ISetModeAction {\r\n  type: typeof TOGGLE_NOTE_MODE;\r\n  payload: {\r\n    mode: MODE\r\n  }\r\n}\r\ninterface IUndoAction {\r\n  type: typeof UNDO;\r\n}\r\ninterface IRedoAction {\r\n  type: typeof REDO;\r\n}\r\ninterface IToggleNightModeAction {\r\n  type: typeof TOGGLE_NIGHT_MODE;\r\n}\r\n\r\ninterface IResetSudokuAction {\r\n  type: typeof RESET_SUDOKU;\r\n}\r\n\r\ninterface IFillCandidatesAction {\r\n  type: typeof FILL_CANDIDATES;\r\n}\r\n\r\ninterface IClearCandidatesAction {\r\n  type: typeof CLEAR_CANDIDATES;\r\n}\r\n\r\nexport type OptionActions = IChangeDifficultyAction\r\n  | INewGameAction\r\n  | IValidateSolutionAction\r\n  | IToggleCellAction\r\n  | ISetDigitAction\r\n  | IRemoveDigitAction\r\n  | INavigateCellsAction\r\n  | ISetModeAction\r\n  | IUndoAction\r\n  | IRedoAction\r\n  | IToggleNightModeAction\r\n  | IResetSudokuAction\r\n  | IFillCandidatesAction\r\n  | IClearCandidatesAction;","\r\nexport enum DIFFICULTY {\r\n  VeryEasy = 30,\r\n  Easy = 36,\r\n  Normal = 42,\r\n  Hard = 50,\r\n  VeryHard = 57\r\n}","import { MODE } from \"../store/types\";\r\n\r\nconst NO_NOTES = [false, false, false, false, false, false, false, false, false];\r\n\r\nexport default class Cell {\r\n  private value: number | null;\r\n  private valid: boolean;\r\n  private solution: number;\r\n  private row: number;\r\n  private column: number;\r\n  private given: boolean;\r\n  private active: boolean;\r\n  private notes: boolean[];\r\n  private guess: boolean;\r\n\r\n  private constructor(previous?: Cell) {\r\n    this.value = previous ? previous.value : null;\r\n    this.solution = previous ? previous.solution : -1;\r\n    this.row = previous ? previous.row : -1;\r\n    this.column = previous ? previous.column : -1;\r\n    this.given = previous ? previous.given : false;\r\n    this.active = previous ? previous.active : false;\r\n    this.valid = previous ? previous.valid : true;\r\n    this.notes = previous ? previous.notes : [...NO_NOTES];\r\n    this.guess = previous ? previous.guess : false;\r\n  }\r\n\r\n  static create(solution: number, row: number, column: number, given: boolean): Cell {\r\n    const cell = new Cell();\r\n    cell.solution = solution;\r\n    cell.row = row;\r\n    cell.column = column;\r\n    cell.given = given;\r\n    cell.value = given ? solution : null;\r\n    return cell;\r\n  }\r\n\r\n  public getSolution(): number {\r\n    return this.solution;\r\n  }\r\n\r\n  public getValue(): number | null {\r\n    return this.value;\r\n  }\r\n\r\n  public getRow(): number {\r\n    return this.row;\r\n  }\r\n\r\n  public getColumn(): number {\r\n    return this.column;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public getBlock(): number {\r\n    if (this.row <= 3) {\r\n      return this.calculateBlock(0);\r\n    } else if (this.row >= 4 && this.row <= 6) {\r\n      return this.calculateBlock(1);\r\n    } else {\r\n      return this.calculateBlock(2);\r\n    }\r\n  }\r\n\r\n  private calculateBlock(modifier: number): number {\r\n    if (this.column <= 3) {\r\n      return modifier + 1;\r\n    } else if (this.column >= 4 && this.column <= 6) {\r\n      return modifier + 2;\r\n    } else {\r\n      return modifier + 3;\r\n    }\r\n  }\r\n\r\n  public isGiven(): boolean {\r\n    return this.given;\r\n  }\r\n\r\n  public validate(): Cell {\r\n    const cell = new Cell(this)\r\n    cell.valid = this.value === null || this.value === this.solution;\r\n    if (!cell.valid) {\r\n      cell.active = false;\r\n    }\r\n    return cell;\r\n  }\r\n\r\n  public isValid(): boolean {\r\n    return this.valid;\r\n  }\r\n\r\n  public setActive(active: boolean): Cell {\r\n    const cell = new Cell(this);\r\n    cell.active = active;\r\n    return cell;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    if (mode === MODE.Note) {\r\n      cell.notes = this.notes.map((x, i) => i === (digit - 1) ? !x : x)\r\n      cell.value = null\r\n    } else {\r\n      if (cell.guess) {\r\n        cell.value = digit;\r\n      } else {\r\n        cell.value = this.value === digit ? null : digit;\r\n      }\r\n    }\r\n    cell.guess = mode === MODE.Guess;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public removeDigit(): Cell {\r\n    if (!this.active || this.given) {\r\n      return this;\r\n    }\r\n    const cell = new Cell(this);\r\n    cell.notes = [...NO_NOTES];\r\n    cell.value = null;\r\n    cell.valid = true;\r\n    return cell;\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.value === this.solution;\r\n  }\r\n\r\n  public getNotes(): boolean[] {\r\n    return this.notes;\r\n  }\r\n\r\n  public isGuess(): boolean {\r\n    return this.guess;\r\n  }\r\n\r\n  public clearNotes(): Cell {\r\n    const cell = new Cell(this);\r\n    cell.notes = cell.notes.map(n => false);\r\n    return cell;\r\n  }\r\n}\r\n","import Cell from \"./Cell\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\n\r\nexport default class Row {\r\n  private cells: Cell[];\r\n  private index: number;\r\n  private active: boolean;\r\n\r\n  private constructor(previous?: Row) {\r\n    this.index = previous ? previous.index : -1;\r\n    this.active = previous ? previous.active : false;\r\n    this.cells = previous ? previous.cells : [];\r\n  }\r\n\r\n  static create(data: [number, boolean][], index: number): Row {\r\n    const row = new Row();\r\n    row.cells = [...data.map(([value, given], i) => Cell.create(value, index, i + 1, given))];\r\n    row.index = index;\r\n    return row;\r\n  }\r\n\r\n  public getCells(): Cell[] {\r\n    return this.cells;\r\n  }\r\n\r\n  public validate(): Row {\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.validate());\r\n    return row;\r\n  }\r\n\r\n  public getIndex(): number {\r\n    return this.index;\r\n  }\r\n\r\n  public toggleCell(index: number, column: number): Row {\r\n    if (this.index !== index && !this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n\r\n    if (this.active) {\r\n      if (this.index === index) {\r\n        row.cells = this.cells.map(c => {\r\n          return c.setActive(c.isActive() ? false : c.getColumn() === column);\r\n        });\r\n      } else {\r\n        row.active = false;\r\n        row.cells = this.cells.map(c => c.isActive() ? c.setActive(false) : c);\r\n      }\r\n    } else if (this.index === index) {\r\n      row.active = true;\r\n      row.cells = this.cells.map(c => c.getColumn() === column ? c.setActive(true) : c);\r\n    }\r\n    return row;\r\n  }\r\n\r\n  public isActive(): boolean {\r\n    return this.active;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.setDigit(digit, mode));\r\n    return row;\r\n  }\r\n\r\n  public removeDigit(): Row {\r\n    if (!this.active) {\r\n      return this;\r\n    }\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.removeDigit());\r\n    return row;\r\n  }\r\n\r\n  public clearCandidates(): Row {\r\n    const row = new Row(this);\r\n    row.cells = this.cells.map(c => c.clearNotes());\r\n    return row;\r\n  }\r\n\r\n}\r\n","export default class Analyzer {\r\n  constructor(private data: nullber[][]) {\r\n\r\n  }\r\n\r\n  private segment<T>(data: T[]): segments<T> {\r\n    const rows: T[][] = [[], [], [], [], [], [], [], [], []]\r\n    const blocks: T[][] = [[], [], [], [], [], [], [], [], []]\r\n    const columns: T[][] = [[], [], [], [], [], [], [], [], []]\r\n\r\n    for (let i = 0; i < 81; i++) {\r\n      const v = data[i]\r\n      const { row, column, block } = this.findParents(i);\r\n      rows[row].push(v)\r\n      blocks[block].push(v)\r\n      columns[column].push(v)\r\n    }\r\n\r\n    return {\r\n      rows,\r\n      blocks,\r\n      columns\r\n    }\r\n  }\r\n\r\n  private findParents(index: number): { row: number, column: number, block: number } {\r\n    const row = ~~(index / 9);\r\n    const column = index % 9\r\n    const block = ~~(row / 3) * 3 + ~~(column / 3)\r\n\r\n    return {\r\n      block,\r\n      row,\r\n      column\r\n    }\r\n  }\r\n\r\n  private findCandidates(data: nullber[]) {\r\n    const { rows, blocks, columns } = this.segment(data)\r\n    const candidates: number[][] = []\r\n    for (let i = 0; i < 81; i++) {\r\n      const value = data[i];\r\n      candidates[i] = [];\r\n      if (value !== null) {\r\n        candidates[i].push(value);\r\n      } else {\r\n        const { row, column, block } = this.findParents(i)\r\n        for (let candidate = 1; candidate <= 9; candidate++) {\r\n          if (this.isAvailable(blocks[block], rows[row], columns[column], candidate)) {\r\n            candidates[i].push(candidate);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return candidates;\r\n  }\r\n\r\n  private isAvailable(block: nullber[], row: nullber[], column: nullber[], value: number): boolean {\r\n    for (let i = 0; i < 9; i++) {\r\n      if (block[i] === value || row[i] === value || column[i] === value) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  public getCandidates(): number[][][] {\r\n    const flatData = this.data.reduce((s, x) => s.concat(x), []);\r\n    const candidates = this.findCandidates(flatData);\r\n    const result = [] as number[][][]\r\n    for (let row = 0; row < 9; row++) {\r\n      result[row] = []\r\n      for (let column = 0; column < 9; column++) {\r\n        result[row][column] = candidates[row * 9 + column]\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\ntype nullber = number | null\r\n\r\ntype segments<T> = {\r\n  rows: T[][]\r\n  blocks: T[][]\r\n  columns: T[][]\r\n}\r\n","import Row from \"./Row\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport Cell from \"./Cell\";\r\nimport Analyzer from \"./Analyzer\";\r\n\r\nexport default class Sudoku {\r\n  private rows: Row[];\r\n  private activeCell: { row: number, column: number };\r\n  private createdAt: number;\r\n\r\n  private constructor(previous?: Sudoku) {\r\n    this.rows = previous ? previous.rows : [];\r\n    this.activeCell = previous ? previous.activeCell : { row: -1, column: -1 }\r\n    this.createdAt = previous ? previous.createdAt : 0;\r\n  }\r\n\r\n  static create(data: ([number, boolean])[][]): Sudoku {\r\n    const sudoku = new Sudoku();\r\n    sudoku.createdAt = Date.now();\r\n    sudoku.rows = data.map((d, i) => Row.create(d, i + 1));\r\n    return sudoku\r\n  }\r\n\r\n  public getRows(): Row[] {\r\n    return this.rows;\r\n  }\r\n\r\n  public validate(): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    sudoku.rows = this.rows.map(r => r.validate());\r\n    return sudoku;\r\n  }\r\n\r\n  public activateCell(row: number, column: number): Sudoku {\r\n    const sudoku = new Sudoku(this)\r\n    if (sudoku.activeCell.row === row && sudoku.activeCell.column === column) {\r\n      sudoku.activeCell = { row: -1, column: -1 }\r\n    } else {\r\n      sudoku.activeCell = { row, column };\r\n    }\r\n    sudoku.rows = this.rows.map(r => r.toggleCell(row, column));\r\n    return sudoku;\r\n  }\r\n\r\n  public setDigit(digit: number, mode: MODE): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.setDigit(digit, mode));\r\n    return sudoku;\r\n  }\r\n\r\n  public removeDigit(): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = this.rows.map(r => r.removeDigit());\r\n    return sudoku;\r\n  }\r\n\r\n  public getSolvedNumbers(): number[] {\r\n    const allNumbers = this.rows.reduce((acc: number[], next: Row) =>\r\n      acc.concat(next.getCells().map(c => c.getValue() || 0), []),\r\n      []\r\n    );\r\n    const solved = []\r\n    for (let i = 1; i <= 9; i++) {\r\n      if (allNumbers.filter(n => n === i).length === 9) {\r\n        solved.push(i);\r\n      }\r\n    }\r\n    return solved;\r\n  }\r\n\r\n  public navigate(dirrection: DIRECTION): Sudoku {\r\n    const increment = (val: number) => val === 9 ? 1 : val + 1;\r\n    const decrement = (val: number) => val === 1 ? 9 : val - 1;\r\n    const activeCell = { ...this.activeCell }\r\n\r\n    switch (dirrection) {\r\n      case DIRECTION.Up:\r\n        activeCell.row = decrement(activeCell.row);\r\n        break;\r\n      case DIRECTION.Down:\r\n        activeCell.row = increment(activeCell.row);\r\n        break;\r\n      case DIRECTION.Right:\r\n        activeCell.column = increment(activeCell.column);\r\n        break;\r\n      case DIRECTION.Left:\r\n        activeCell.column = decrement(activeCell.column);\r\n        break;\r\n    }\r\n    return this.activateCell(activeCell.row, activeCell.column);\r\n  }\r\n\r\n  public isSolved(): boolean {\r\n    return this.rows.every(r => r.getCells().every(c => c.isSolved()))\r\n  }\r\n\r\n  public getCreationTimestamp(): number {\r\n    return this.createdAt;\r\n  }\r\n\r\n  public isDigitSolved(digit: number): boolean {\r\n    return this.rows.every(r => r.getCells().some(c => c.getValue() === digit && c.isSolved()));\r\n  }\r\n\r\n  public countEmptyCells(): number {\r\n    const cells = this.rows.reduce((acc, row) => acc.concat(row.getCells()), [] as Cell[])\r\n    return cells.reduce((sum, cell) => {\r\n      if (cell.getValue() === null) {\r\n        return sum + 1;\r\n      }\r\n      return sum;\r\n    }, 0)\r\n  }\r\n\r\n  public fillCandidates(): Sudoku {\r\n    const notes = this.rows.map(r => r.getCells().map(c => c.getNotes()))\r\n    const data = this.rows.map(r => r.getCells().map(c => c.getValue()))\r\n    const analyzer = new Analyzer(data)\r\n    const candidates = analyzer.getCandidates()\r\n    let sudoku = new Sudoku(this);\r\n    if (sudoku.activeCell.row !== -1 && sudoku.activeCell.column !== -1) {\r\n      sudoku = sudoku.activateCell(sudoku.activeCell.row, sudoku.activeCell.column)\r\n    }\r\n    candidates.forEach((rowCandidates, row) => {\r\n      rowCandidates.forEach((cellCandidates, cell) => {\r\n        sudoku = sudoku.activateCell(row + 1, cell + 1)\r\n        cellCandidates.forEach(candidate => {\r\n          if (data[row][cell] === null && !notes[row][cell][candidate - 1]) {\r\n            sudoku = sudoku.setDigit(candidate, MODE.Note)\r\n          }\r\n        })\r\n      })\r\n    })\r\n    return sudoku;\r\n  }\r\n\r\n  public clearCandidates(): Sudoku {\r\n    const sudoku = new Sudoku(this);\r\n    sudoku.rows = sudoku.rows.map(row => row.clearCandidates())\r\n    return sudoku;\r\n  }\r\n}\r\n","\r\nimport Puzzles from \"./puzzles.json\"\r\nimport { DIFFICULTY } from \"./models/Difficulty\";\r\nimport Sudoku from \"./models/Sudoku\";\r\nimport GeneratePuzzleWorker from \"./workers/GeneratePuzzle.worker\"\r\nimport { v4 as uuid } from \"uuid\"\r\n\r\nconst EMPTY_DATA: [number, boolean][][] = [\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]],\r\n  [[1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false], [1, false]]\r\n]\r\n\r\nconst PUZZLE_MAP_KEY = \"PUZZLE-MAP\"\r\nconst BUFFER_SIZE = 20\r\n\r\ntype idMap = { [key: number]: string[] }\r\ntype serializedPuzzle = (number | boolean)[][][]\r\n\r\nclass PuzzleStorage {\r\n  private worker: Worker;\r\n\r\n  constructor() {\r\n    this.inititializeStorage()\r\n    this.worker = new GeneratePuzzleWorker() as Worker;\r\n    this.worker.addEventListener('message', e => this.addPuzzle(e))\r\n  }\r\n\r\n  private inititializeStorage() {\r\n    if (!this.hasLocalStorageKeys()) {\r\n      const puzzles: idMap = {\r\n        [DIFFICULTY.VeryEasy]: this.saveJSONPuzzles(Puzzles.VeryEasy),\r\n        [DIFFICULTY.Easy]: this.saveJSONPuzzles(Puzzles.Easy),\r\n        [DIFFICULTY.Normal]: this.saveJSONPuzzles(Puzzles.Normal),\r\n        [DIFFICULTY.Hard]: this.saveJSONPuzzles(Puzzles.Hard),\r\n        [DIFFICULTY.VeryHard]: this.saveJSONPuzzles(Puzzles.VeryHard)\r\n      }\r\n      this.save(PUZZLE_MAP_KEY, puzzles)\r\n    }\r\n  }\r\n\r\n  private hasLocalStorageKeys(): boolean {\r\n    return !!window.localStorage[PUZZLE_MAP_KEY]\r\n  }\r\n\r\n  private saveJSONPuzzles(puzzles: serializedPuzzle[]): string[] {\r\n    return puzzles.map(p => {\r\n      const id = uuid();\r\n      this.save(id, p)\r\n      return id;\r\n    })\r\n  }\r\n\r\n  private decodeStoredPuzzle(puzzle: serializedPuzzle): Sudoku {\r\n    const decodedPuzle = [[], [], [], [], [], [], [], [], []] as [number, boolean][][];\r\n    puzzle.forEach((row, i) => {\r\n      decodedPuzle[i] = row.map(([value, given]) => [value, given] as [number, boolean])\r\n    })\r\n    return Sudoku.create(decodedPuzle)\r\n  }\r\n\r\n  public getPuzzle(difficulty: DIFFICULTY): Sudoku {\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    const id = puzzleMap[difficulty].shift()\r\n    if (!id) {\r\n      return Sudoku.create(EMPTY_DATA)\r\n    }\r\n    const puzzle = this.load<serializedPuzzle>(id)\r\n    const sudoku = this.decodeStoredPuzzle(puzzle)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap);\r\n    this.worker.postMessage(difficulty)\r\n\r\n    if (!!sudoku) {\r\n      return sudoku\r\n    }\r\n    return Sudoku.create(EMPTY_DATA)\r\n  }\r\n\r\n  private addPuzzle(message: MessageEvent): void {\r\n    const difficulty = message.data.difficulty as DIFFICULTY;\r\n    const data = message.data.puzzleData as [number, boolean][][];\r\n    const id = uuid();\r\n    const puzzleMap = this.load<idMap>(PUZZLE_MAP_KEY);\r\n    puzzleMap[difficulty].push(id);\r\n    this.save(id, data)\r\n    this.save(PUZZLE_MAP_KEY, puzzleMap)\r\n    if (puzzleMap[difficulty].length < BUFFER_SIZE) {\r\n      this.worker.postMessage(difficulty)\r\n    }\r\n  }\r\n\r\n  private save(key: string, data: any): void {\r\n    window.localStorage.setItem(key, JSON.stringify(data))\r\n  }\r\n\r\n  private load<T>(key: string): T {\r\n    return JSON.parse(window.localStorage[key]) as T\r\n  }\r\n}\r\n\r\nexport default new PuzzleStorage();","import {\r\n  IGameState,\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  REMOVE_DIGIT,\r\n  TOGGLE_NOTE_MODE as SET_MODE,\r\n  UNDO,\r\n  REDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU,\r\n  FILL_CANDIDATES,\r\n  CLEAR_CANDIDATES\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport PuzzleStorage from \"../PuzzleStorage\"\r\n\r\n\r\nconst initialDifficulty = readDifficulty(DIFFICULTY.Easy)\r\nconst initialNightMode = readNightMode(false);\r\nconst initialState: IGameState = {\r\n  difficulty: initialDifficulty,\r\n  sudoku: {\r\n    past: [],\r\n    current: PuzzleStorage.getPuzzle(initialDifficulty).activateCell(1, 1),\r\n    future: []\r\n  },\r\n  mode: MODE.Input,\r\n  nightMode: initialNightMode\r\n};\r\n\r\nexport function gameReducer(state = initialState, action: OptionActions): IGameState {\r\n  switch (action.type) {\r\n    case CHANGE_DIFFICULTY:\r\n      writeDifficulty(action.payload);\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(action.payload).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case NEW_GAME:\r\n\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: PuzzleStorage.getPuzzle(state.difficulty).activateCell(1, 1),\r\n          future: []\r\n        }\r\n      };\r\n    case VALIDATE_SOLUTION:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.validate()\r\n        }\r\n      };\r\n    case TOGGLE_CELL:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.activateCell(action.payload.row, action.payload.column)\r\n        }\r\n      };\r\n    case SET_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.setDigit(action.payload.digit, state.mode),\r\n          future: []\r\n        }\r\n      };\r\n    case REMOVE_DIGIT:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.removeDigit(),\r\n          future: []\r\n        }\r\n      };\r\n    case NAVIGATE_CELLS:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          ...state.sudoku,\r\n          current: state.sudoku.current.navigate(action.payload.direction)\r\n        }\r\n      };\r\n    case SET_MODE:\r\n      return {\r\n        ...state,\r\n        mode: action.payload.mode\r\n      };\r\n    case UNDO:\r\n      if (!state.sudoku.past.length) {\r\n        return state;\r\n      }\r\n      const previous = state.sudoku.past.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: state.sudoku.past.slice(0, -1),\r\n          current: previous,\r\n          future: [...state.sudoku.future, state.sudoku.current]\r\n        }\r\n      }\r\n    case REDO:\r\n      if (!state.sudoku.future.length) {\r\n        return state;\r\n      }\r\n      const next = state.sudoku.future.slice(-1)[0];\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: next,\r\n          future: state.sudoku.future.slice(0, -1)\r\n        }\r\n      }\r\n    case TOGGLE_NIGHT_MODE:\r\n      const nightMode = !state.nightMode;\r\n      writeNightMode(nightMode);\r\n      return {\r\n        ...state,\r\n        nightMode\r\n      }\r\n    case RESET_SUDOKU:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [],\r\n          current: state.sudoku.past.shift() || state.sudoku.current,\r\n          future: []\r\n        }\r\n      }\r\n    case FILL_CANDIDATES:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.fillCandidates(),\r\n          future: []\r\n        }\r\n      }\r\n    case CLEAR_CANDIDATES:\r\n      return {\r\n        ...state,\r\n        sudoku: {\r\n          past: [...state.sudoku.past, state.sudoku.current],\r\n          current: state.sudoku.current.clearCandidates(),\r\n          future: []\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction readDifficulty(fallBack: DIFFICULTY): DIFFICULTY {\r\n  const data = window.localStorage.getItem('DIFFICULTY');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return +data as DIFFICULTY;\r\n}\r\nfunction writeDifficulty(difficulty: DIFFICULTY) {\r\n  window.localStorage.setItem('DIFFICULTY', difficulty.toString());\r\n}\r\n\r\nfunction readNightMode(fallBack: boolean): boolean {\r\n  const data = window.localStorage.getItem('NIGHT_MODE');\r\n  if (!data) {\r\n    return fallBack;\r\n  }\r\n  return data === 'true';\r\n}\r\nfunction writeNightMode(nightMode: boolean) {\r\n  window.localStorage.setItem('NIGHT_MODE', nightMode.toString());\r\n}","import \"typeface-roboto\";\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\nimport { gameReducer } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  game: gameReducer,\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer\r\n  );\r\n\r\n  return store;\r\n}\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport Cell from \"../models/Cell\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => {\r\n  const borderThin = `solid 1px ${theme.palette.common.black}`;\r\n  const borderThick = `solid 2px ${theme.palette.common.black}`;\r\n\r\n  return createStyles({\r\n    container: {\r\n      display: 'flex',\r\n      position: 'relative',\r\n      width: '11.111111%',\r\n      paddingBottom: '11.111111%',\r\n      textAlign: 'center',\r\n      userSelect: \"none\",\r\n      fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      position: 'absolute',\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      borderRight: borderThin,\r\n      borderBottom: borderThin,\r\n      color: theme.palette.type === \"dark\" ? theme.palette.grey[400] : theme.palette.common.black\r\n    },\r\n    thickBorderTop: {\r\n      borderTop: borderThick\r\n    },\r\n    thickBorderBottom: {\r\n      borderBottom: borderThick\r\n    },\r\n    thickBorderLeft: {\r\n      borderLeft: borderThick\r\n    },\r\n    thickBorderRight: {\r\n      borderRight: borderThick\r\n    },\r\n    dark: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.light : theme.palette.grey[200],\r\n    },\r\n    given: {\r\n      fontWeight: 'bold'\r\n    },\r\n    note: {\r\n      position: 'absolute'\r\n    },\r\n    inactiveNote: {\r\n      opacity: 0.1\r\n    },\r\n    activeNote: {\r\n      opacity: 1,\r\n    },\r\n    note1: {\r\n      top: 0,\r\n      left: 0,\r\n      bottom: '66.666667%',\r\n      right: '66.666667%'\r\n    },\r\n    note2: {\r\n      top: \"0\",\r\n      left: \"33.333333%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note3: {\r\n      top: \"0\",\r\n      left: \"66.666667%\",\r\n      bottom: \"66.666667%\",\r\n      right: \"0\",\r\n    },\r\n    note4: {\r\n      top: \"33.333333%\",\r\n      left: \"0\",\r\n      bottom: \"33.333333%\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note5: {\r\n      top: \"33.333333%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note6: {\r\n      top: \"33.333333%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"33.333333%\",\r\n      right: \"0\",\r\n    },\r\n    note7: {\r\n      top: \"66.666667%\",\r\n      left: \"0\",\r\n      bottom: \"0\",\r\n      right: \"66.666667%\",\r\n    },\r\n    note8: {\r\n      top: \"66.666667%\",\r\n      left: \"33.333333%\",\r\n      bottom: \"0\",\r\n      right: \"33.333333%\",\r\n    },\r\n    note9: {\r\n      top: \"66.666667%\",\r\n      left: \"66.666667%\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n    },\r\n    invalid: {\r\n      backgroundColor: theme.palette.error.light,\r\n      color: theme.palette.error.contrastText\r\n    },\r\n    active: {\r\n      backgroundColor: theme.palette.type === \"dark\" ? theme.palette.primary.dark : theme.palette.primary.light,\r\n      color: theme.palette.primary.contrastText,\r\n    }\r\n  });\r\n}\r\n\r\nexport interface ISudokuCellComponentProps extends WithStyles<typeof styles> {\r\n  cell: Cell;\r\n  size: number;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nclass SudokuCellComponent extends Component<ISudokuCellComponentProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} onClick={() => this.handleClick()}>\r\n        <div className={this.calculateClasses()}>\r\n          {this.renderContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderContent(): JSX.Element {\r\n    const { classes } = this.props;\r\n    const value = this.props.cell.getValue();\r\n    if (!!value) {\r\n      return (\r\n        <span style={{ fontSize: `${this.props.size}px` }}>{value}</span>\r\n      );\r\n    }\r\n    const notes = this.props.cell.getNotes();\r\n    const fontSize = `${Math.ceil((this.props.size / 3))}px`;\r\n    const cellClasses = [\r\n      classes.note1,\r\n      classes.note2,\r\n      classes.note3,\r\n      classes.note4,\r\n      classes.note5,\r\n      classes.note6,\r\n      classes.note7,\r\n      classes.note8,\r\n      classes.note9\r\n    ];\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          notes.map((x, i) => (\r\n            <span className={`${classes.note} ${cellClasses[i]} ${x ? classes.activeNote : classes.inactiveNote}`}\r\n              key={i}\r\n              style={{ fontSize: fontSize }}>\r\n              {(x || this.props.mode === MODE.Note) ? i + 1 : ''}\r\n            </span>\r\n          ))\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n\r\n  private handleClick(): void {\r\n    this.props.toggleCell(this.props.cell.getRow(), this.props.cell.getColumn())\r\n  }\r\n\r\n  private calculateClasses(): string {\r\n    const { classes } = this.props;\r\n    const cell = this.props.cell;\r\n    const row = cell.getRow();\r\n    const column = cell.getColumn();\r\n    const block = cell.getBlock();\r\n\r\n    const result = {\r\n      [classes.content]: true,\r\n      [classes.thickBorderTop]: row === 1,\r\n      [classes.thickBorderBottom]: row % 3 === 0,\r\n      [classes.thickBorderLeft]: column === 1,\r\n      [classes.thickBorderRight]: column % 3 === 0,\r\n      [classes.dark]: block % 2 === 0,\r\n      [classes.given]: cell.isGiven(),\r\n      [classes.invalid]: !cell.isValid(),\r\n      [classes.active]: cell.isActive(),\r\n    }\r\n    return Object.keys(result).filter(key => result[key]).join(' ');\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuCellComponent);","import React, { Component } from \"react\";\r\nimport Row from \"../models/Row\";\r\nimport SudokuCell from \"./SudokuCell\";\r\nimport { createStyles, Theme, WithStyles, withStyles } from \"@material-ui/core\";\r\nimport { toggleCell } from \"../store/actions\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  sudokuRow: {\r\n    display: 'flex',\r\n    width: '100%'\r\n  }\r\n});\r\n\r\nexport interface ISudokuRowProps extends WithStyles<typeof styles> {\r\n  row: Row;\r\n  rowSize: number;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nclass SudokuRowComponent extends Component<ISudokuRowProps> {\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props\r\n    return (\r\n      <div className={classes.sudokuRow}>\r\n        {this.renderRow()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderRow(): JSX.Element[] | null {\r\n    return this.props.row\r\n      .getCells()\r\n      .map((c, i) => <SudokuCell mode={this.props.mode} toggleCell={this.props.toggleCell} cell={c} size={this.getCellSize()} key={i} />);\r\n  }\r\n\r\n  private getCellSize(): number {\r\n    return this.props.rowSize / 9;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(SudokuRowComponent);","import React, { Component, CSSProperties } from \"react\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport SudokuRow from \"./SudokuRow\";\r\nimport { createNewGame, toggleCell } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles, WithStyles, createStyles, Theme } from \"@material-ui/core\";\r\nimport { MODE } from \"../store/types\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    position: 'relative',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n      paddingBottom: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      height: 'calc(100vh - 2*64px - 100px)',\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  sudokuPaper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    padding: theme.spacing.unit\r\n  }\r\n});\r\n\r\nexport interface ISudokuProps extends WithStyles<typeof styles> {\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n  createNewGame: typeof createNewGame;\r\n  toggleCell: typeof toggleCell;\r\n  mode: MODE;\r\n}\r\n\r\nexport interface ISudokuState {\r\n  rowSize: number;\r\n}\r\n\r\nclass SudokuComponent extends Component<ISudokuProps, ISudokuState> {\r\n  private containerRef: React.RefObject<HTMLDivElement>;\r\n\r\n  constructor(props: ISudokuProps) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.state = {\r\n      rowSize: 0\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.container} ref={this.containerRef}>\r\n        <Paper className={classes.sudokuPaper} >\r\n          {this.renderRows()}\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setCellSize();\r\n  }\r\n\r\n  private setCellSize = () => {\r\n    const rowDOM = this.containerRef.current;\r\n    if (rowDOM) {\r\n      const boundingRectangle = rowDOM.getBoundingClientRect();\r\n      const height = boundingRectangle.height - 100;\r\n      const width = boundingRectangle.width\r\n      const smallestDimmesion = height < width ? height : width;\r\n      const fittedDimmension = 9 * Math.floor(smallestDimmesion / 9);\r\n      this.setState({\r\n        rowSize: fittedDimmension\r\n      });\r\n    } else {\r\n      requestAnimationFrame(() => {\r\n        this.setCellSize();\r\n      });\r\n    }\r\n  }\r\n\r\n  private renderRows(): JSX.Element[] | null {\r\n    if (!this.state.rowSize) {\r\n      return null;\r\n    }\r\n    return this.props.sudoku.getRows().map((r, i) => (\r\n      <SudokuRow mode={this.props.mode} row={r} key={i} rowSize={this.state.rowSize} toggleCell={this.props.toggleCell} />\r\n    ));\r\n  }\r\n\r\n  private formatMillisecons(milliSeconds: number): string {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(SudokuComponent);","import React from 'react';\r\n\r\nimport { setDigit, removeDigit, setMode, redo, undo } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport { Paper, createStyles, Theme, WithStyles, withStyles, LinearProgress } from '@material-ui/core';\r\nimport Chip, { ChipProps } from '@material-ui/core/Chip'\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  container: {\r\n    paddingTop: theme.spacing.unit,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    '@media (orientation: portrait)': {\r\n      width: '100%',\r\n    },\r\n    '@media (orientation: landscape)': {\r\n      width: 'calc(100vh - 2*64px - 100px)',\r\n    },\r\n  },\r\n  progress: {\r\n    borderBottomRightRadius: theme.spacing.unit / 2,\r\n    borderBottomLeftRadius: theme.spacing.unit / 2\r\n  },\r\n  errorBar: {\r\n    backgroundColor: theme.palette.error.light\r\n  },\r\n  successBar: {\r\n    backgroundColor: '#66bb6a'\r\n  },\r\n  chip: {\r\n    margin: '4px 2px 4px 2px'\r\n  }\r\n});\r\n\r\ninterface INumbersProps extends WithStyles<typeof styles> {\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst INumbers: React.FunctionComponent<INumbersProps> = props => {\r\n  const { classes } = props;\r\n  const isNoteMode = props.mode === MODE.Note;\r\n  const sudoku = props.sudoku;\r\n  const isSolved = sudoku.isSolved();\r\n  const showRedProgressBar = sudoku.countEmptyCells() === 0 && !isSolved;\r\n  const progress = ((props.difficulty - props.sudoku.countEmptyCells()) / props.difficulty) * 100\r\n\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Paper>\r\n        {[...Array(10).keys()].slice(1).map(x => {\r\n          let color: ChipProps['color'] = 'primary';\r\n          if (props.sudoku.isDigitSolved(x)) {\r\n            color = 'default';\r\n          } else if (isNoteMode) {\r\n            color = 'secondary';\r\n          }\r\n          return (\r\n            <Chip onClick={() => props.setDigit(x)} color={color} className={classes.chip} label={x} key={x} />\r\n          );\r\n        })}\r\n        <LinearProgress className={classes.progress}\r\n          classes={{\r\n            bar: showRedProgressBar ? classes.errorBar : \"\"\r\n          }}\r\n          variant=\"determinate\"\r\n          value={progress}\r\n        />\r\n      </Paper>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(INumbers);","import React, { Component } from 'react';\r\nimport { createStyles, withStyles, WithStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport List from '@material-ui/core/List';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\nimport { changeDifficulty, validateSolution, createNewGame, toggleNightMode, resetSudoku, fillCandidates, clearCandidates } from '../store/actions';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing.unit / 2,\r\n    paddingBottom: theme.spacing.unit / 2,\r\n    paddingLeft: theme.spacing.unit,\r\n    paddingRight: theme.spacing.unit,\r\n    color: theme.palette.type === \"dark\" ? theme.palette.primary.contrastText : theme.palette.secondary.main,\r\n  },\r\n  drawerList: {\r\n    paddingTop: 0\r\n  },\r\n  drawerPaper: {\r\n    [theme.breakpoints.down('xs')]: {\r\n      minWidth: '70%'\r\n    },\r\n    [theme.breakpoints.up('sm')]: {\r\n      minWidth: '40%'\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      minWidth: '30%'\r\n    }\r\n  },\r\n  notesToggle: {\r\n    color: theme.palette.common.white\r\n  },\r\n  snackbar: {\r\n    color: theme.palette.type === \"dark\" ? theme.palette.common.black : theme.palette.primary.contrastText\r\n  }\r\n});\r\n\r\nexport interface ITopBarProps extends WithStyles<typeof styles> {\r\n  difficulty: DIFFICULTY;\r\n  changeDifficulty: typeof changeDifficulty;\r\n  validateSolution: typeof validateSolution;\r\n  createNewGame: typeof createNewGame;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  nightMode: boolean;\r\n  resetSudoku: typeof resetSudoku;\r\n  fillCandidates: typeof fillCandidates;\r\n  clearCandidates: typeof clearCandidates;\r\n}\r\nexport interface ITopBarState {\r\n  drawerOpen: boolean;\r\n  showSnackbar: boolean;\r\n}\r\n\r\nconst DIFFICUTIES = [{\r\n  difficulty: DIFFICULTY.VeryEasy,\r\n  label: \"Very Easy\"\r\n}, {\r\n  difficulty: DIFFICULTY.Easy,\r\n  label: \"Easy\"\r\n}, {\r\n  difficulty: DIFFICULTY.Normal,\r\n  label: \"Medium\"\r\n}, {\r\n  difficulty: DIFFICULTY.Hard,\r\n  label: \"Hard\"\r\n}, {\r\n  difficulty: DIFFICULTY.VeryHard,\r\n  label: \"Very Hard\"\r\n}]\r\n\r\nclass TopBar extends Component<ITopBarProps, ITopBarState> {\r\n  constructor(props: ITopBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n      showSnackbar: false\r\n    }\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { classes } = this.props;\r\n    return (\r\n      <React.Fragment>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton className={classes.menuButton} color=\"inherit\" onClick={() => this.openDrawer()}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              {this.getBarText()}\r\n            </Typography>\r\n            <FormControlLabel\r\n              classes={{ label: classes.notesToggle }}\r\n              label=\"Night mode\"\r\n              labelPlacement=\"start\"\r\n              onClick={() => this.props.toggleNightMode()}\r\n              control={<Switch checked={this.props.nightMode} />}\r\n            />\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"temporary\" classes={{ paper: classes.drawerPaper }} open={this.state.drawerOpen} onClose={() => this.closeDrawer()}>\r\n          <div className={classes.drawerHeader}>\r\n            <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n              Options\r\n              </Typography>\r\n            <IconButton onClick={() => this.closeDrawer()}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <List className={classes.drawerList}>\r\n            <Divider />\r\n            <ListSubheader>Puzzle</ListSubheader>\r\n            <Divider />\r\n            <ListItem button onClick={() => this.createNewGame()}>\r\n              <ListItemText primary=\"New puzzle\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.reset()} >\r\n              <ListItemText primary=\"Reset puzzle\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.validate()} >\r\n              <ListItemText primary=\"Show invalid cells\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.fillCandidates()} >\r\n              <ListItemText primary=\"Add notes\" />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.clearCandidates()} >\r\n              <ListItemText primary=\"Remove notes\" />\r\n            </ListItem>\r\n            <Divider />\r\n            <ListSubheader>Difficulty</ListSubheader>\r\n            <Divider />\r\n            {this.renderDifficulties()}\r\n          </List>\r\n        </Drawer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private openDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: true\r\n    });\r\n  }\r\n\r\n  private closeDrawer(): void {\r\n    this.setState({\r\n      drawerOpen: false\r\n    });\r\n  }\r\n\r\n  private renderDifficulties(): JSX.Element[] {\r\n    return DIFFICUTIES.map(option => (\r\n      <ListItem\r\n        button\r\n        key={option.difficulty}\r\n        selected={this.props.difficulty === option.difficulty}\r\n        onClick={() => this.setDifficulty(option.difficulty)}>\r\n        <ListItemText primary={option.label} />\r\n      </ListItem>\r\n    ));\r\n  }\r\n\r\n  private setDifficulty(difficulty: DIFFICULTY): void {\r\n    this.closeDrawer();\r\n    this.props.changeDifficulty(difficulty);\r\n  }\r\n\r\n  private validate(): void {\r\n    this.closeDrawer();\r\n    this.props.validateSolution();\r\n  }\r\n\r\n  private getBarText(): string {\r\n    const difficulty = DIFFICUTIES.find(option => option.difficulty === this.props.difficulty);\r\n    if (difficulty) {\r\n      return `${difficulty.label}`;\r\n    }\r\n    return \"\";\r\n  }\r\n  private createNewGame(): void {\r\n    this.closeDrawer();\r\n    this.props.createNewGame();\r\n  }\r\n\r\n  private reset(): void {\r\n    this.closeDrawer();\r\n    this.props.resetSudoku();\r\n  }\r\n\r\n  private fillCandidates(): void {\r\n    this.closeDrawer();\r\n    this.props.fillCandidates();\r\n  }\r\n\r\n  private clearCandidates(): void {\r\n    this.closeDrawer();\r\n    this.props.clearCandidates();\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(TopBar);","import React, { Fragment } from 'react';\r\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport RedoIcon from '@material-ui/icons/Redo';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { undo, redo, removeDigit, setMode } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { MODE } from '../store/types';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PenIcon from \"@material-ui/icons/Edit\";\r\nimport PenIconOutline from \"@material-ui/icons/EditOutlined\";\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n  appBar: {\r\n    top: 'auto',\r\n    bottom: 0,\r\n  },\r\n  toolbar: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  modeFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 25% 0 auto'\r\n  },\r\n  clearFab: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    top: -30,\r\n    left: 0,\r\n    right: 0,\r\n    margin: '0 auto 0 25%'\r\n  },\r\n});\r\n\r\nexport interface IBottomBarProps extends WithStyles<typeof styles> {\r\n  undo: typeof undo;\r\n  redo: typeof redo;\r\n  removeDigit: typeof removeDigit;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  mode: MODE;\r\n  setMode: typeof setMode;\r\n}\r\n\r\nconst BottomBar: React.FunctionComponent<IBottomBarProps> = (props: IBottomBarProps) => {\r\n  const isNoteMode = props.mode === MODE.Note\r\n  const toggleMode = () => {\r\n    if (isNoteMode) {\r\n      props.setMode(MODE.Input);\r\n    } else {\r\n      props.setMode(MODE.Note);\r\n    }\r\n  }\r\n\r\n\r\n  const { classes } = props;\r\n  return (\r\n    <AppBar position=\"fixed\" color=\"default\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <Fab color=\"primary\" className={classes.clearFab} onClick={() => props.removeDigit()}>\r\n          <ClearIcon />\r\n        </Fab>\r\n        <IconButton color=\"inherit\" disabled={!props.past.length} onClick={() => props.undo()}>\r\n          <UndoIcon />\r\n        </IconButton>\r\n        <IconButton color=\"inherit\" disabled={!props.future.length} onClick={() => props.redo()}>\r\n          <RedoIcon />\r\n        </IconButton>\r\n        <Fab color={isNoteMode ? 'secondary' : 'default'} className={classes.modeFab} onClick={() => toggleMode()}>\r\n          {isNoteMode ? <PenIconOutline /> : <PenIcon />}\r\n        </Fab>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(BottomBar);\r\n","import React from 'react';\r\nimport { withStyles, Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button, createStyles, Theme, WithTheme, WithStyles, Typography } from \"@material-ui/core\";\r\nimport { createNewGame } from '../store/actions';\r\nimport Sudoku from '../models/Sudoku';\r\nimport { DIFFICULTY } from '../models/Difficulty';\r\n\r\nconst styles = (theme: Theme) => createStyles({\r\n\r\n})\r\n\r\nexport interface ICompletedDialogProps extends WithStyles<typeof styles> {\r\n  createNewGame: typeof createNewGame;\r\n  sudoku: Sudoku;\r\n  difficulty: DIFFICULTY;\r\n}\r\n\r\nconst CompletedDialog: React.FunctionComponent<ICompletedDialogProps> = (props: ICompletedDialogProps) => {\r\n  const formatMillisecons = (milliSeconds: number) => {\r\n    const pad = (num: number) => Math.round(num).toString().padStart(2, '0');\r\n\r\n    const seconds = pad((milliSeconds / 1000) % 60);\r\n    const minutes = pad((milliSeconds / (1000 * 60)) % 60);\r\n    const hours = pad((milliSeconds / (1000 * 60 * 60)) % 24);\r\n\r\n    return `${hours}:${minutes}:${seconds}`;\r\n  }\r\n\r\n  const difficultyText = () => {\r\n    switch (props.difficulty) {\r\n      case DIFFICULTY.VeryEasy:\r\n        return 'a very easy';\r\n      case DIFFICULTY.Easy:\r\n        return 'an easy';\r\n      case DIFFICULTY.Normal:\r\n        return 'a medium';\r\n      case DIFFICULTY.Hard:\r\n        return 'a hard';\r\n      case DIFFICULTY.VeryHard:\r\n        return 'a very hard';\r\n      default:\r\n        return 'an unknown';\r\n    }\r\n  }\r\n\r\n  const ellapsedTime = formatMillisecons(Date.now() - props.sudoku.getCreationTimestamp())\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xl\"\r\n      open={props.sudoku.isSolved()}\r\n      fullWidth={true}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Done!</DialogTitle>\r\n      <DialogContent>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          You completed {difficultyText()} puzzle.\r\n        </Typography>\r\n        <Typography variant=\"body1\">\r\n          Elapsed time: {ellapsedTime}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => { props.createNewGame() }}>\r\n          New Game\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(CompletedDialog);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../layout/App.scss\";\r\nimport SudokuComponent from \"./Sudoku\";\r\nimport Numbers from \"./Numbers\";\r\nimport { AppState } from \"../store\";\r\nimport { changeDifficulty, createNewGame, validateSolution, toggleCell, setDigit, removeDigit, navigateCells, setMode, redo, undo, toggleNightMode, resetSudoku, fillCandidates, clearCandidates } from \"../store/actions\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\nimport Sudoku from \"../models/Sudoku\";\r\nimport { DIRECTION, MODE } from \"../store/types\";\r\nimport TopBar from \"./TopBar\";\r\nimport BottomBar from \"./BottomBar\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport CompletedDialog from \"./CompletedDialog\";\r\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\r\nimport theme from \"../theme\";\r\n\r\ninterface IAppProps {\r\n  changeDifficulty: typeof changeDifficulty;\r\n  createNewGame: typeof createNewGame;\r\n  validateSolution: typeof validateSolution;\r\n  toggleCell: typeof toggleCell;\r\n  setDigit: typeof setDigit;\r\n  removeDigit: typeof removeDigit;\r\n  navigateCells: typeof navigateCells;\r\n  setMode: typeof setMode;\r\n  undo: typeof undo,\r\n  redo: typeof redo,\r\n  mode: MODE;\r\n  sudoku: Sudoku;\r\n  past: Sudoku[];\r\n  future: Sudoku[];\r\n  difficulty: DIFFICULTY;\r\n  nightMode: boolean;\r\n  toggleNightMode: typeof toggleNightMode;\r\n  resetSudoku: typeof resetSudoku;\r\n  fillCandidates: typeof fillCandidates;\r\n  clearCandidates: typeof clearCandidates;\r\n}\r\n\r\nclass App extends Component<IAppProps> {\r\n  constructor(props: IAppProps) {\r\n    super(props);\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const t = theme(this.props.nightMode)\r\n    return (\r\n      <div className=\"App\">\r\n        <MuiThemeProvider theme={t}>\r\n          <CssBaseline />\r\n          <TopBar {...this.props} />\r\n          <div className=\"App-content\">\r\n            <SudokuComponent {...this.props} />\r\n            <Numbers {...this.props} />\r\n          </div>\r\n          <CompletedDialog {...this.props}></CompletedDialog>\r\n          <BottomBar {...this.props} />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  public componentDidMount(): void {\r\n    document.addEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    document.removeEventListener(\"keydown\", this.handleKeyboard);\r\n  }\r\n\r\n  private handleKeyboard = (e: KeyboardEvent) => {\r\n    const key = e.which;\r\n    if (key >= 49 && key <= 57) { // [1...9]\r\n      this.props.setDigit(key - 48);\r\n    } else if (key === 8 || key === 2) { // backspace || delete\r\n      this.props.removeDigit()\r\n    } else if (key === 37) { //left \r\n      this.props.navigateCells(DIRECTION.Left);\r\n    } else if (key === 38) { //up\r\n      this.props.navigateCells(DIRECTION.Up);\r\n    } else if (key === 39) { // right\r\n      this.props.navigateCells(DIRECTION.Right);\r\n    } else if (key === 40) { // down\r\n      this.props.navigateCells(DIRECTION.Down);\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppState) => ({\r\n  sudoku: state.game.sudoku.current,\r\n  past: state.game.sudoku.past,\r\n  future: state.game.sudoku.future,\r\n  difficulty: state.game.difficulty,\r\n  mode: state.game.mode,\r\n  nightMode: state.game.nightMode\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeDifficulty,\r\n    createNewGame,\r\n    validateSolution,\r\n    toggleCell,\r\n    setDigit,\r\n    removeDigit,\r\n    navigateCells,\r\n    setMode,\r\n    undo,\r\n    redo,\r\n    toggleNightMode,\r\n    resetSudoku,\r\n    fillCandidates,\r\n    clearCandidates\r\n  }\r\n)(App);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n\r\nexport default (nightMode: boolean) => {\r\n  return createMuiTheme({\r\n    typography: {\r\n      useNextVariants: true,\r\n    },\r\n    palette: {\r\n      type: nightMode ? 'dark' : 'light',\r\n      primary: {\r\n        main: '#424242'\r\n      },\r\n      secondary: {\r\n        main: '#616161'\r\n      }\r\n    },\r\n  });\r\n};","import {\r\n  OptionActions,\r\n  CHANGE_DIFFICULTY,\r\n  NEW_GAME,\r\n  VALIDATE_SOLUTION,\r\n  TOGGLE_CELL,\r\n  SET_DIGIT,\r\n  REMOVE_DIGIT,\r\n  NAVIGATE_CELLS,\r\n  DIRECTION,\r\n  TOGGLE_NOTE_MODE,\r\n  REDO,\r\n  UNDO,\r\n  MODE,\r\n  TOGGLE_NIGHT_MODE,\r\n  RESET_SUDOKU,\r\n  FILL_CANDIDATES,\r\n  CLEAR_CANDIDATES\r\n} from \"./types\";\r\nimport { DIFFICULTY } from \"../models/Difficulty\";\r\n\r\nexport function changeDifficulty(difficulty: DIFFICULTY): OptionActions {\r\n  return {\r\n    type: CHANGE_DIFFICULTY,\r\n    payload: difficulty\r\n  };\r\n}\r\n\r\nexport function createNewGame(): OptionActions {\r\n  return {\r\n    type: NEW_GAME\r\n  };\r\n}\r\n\r\nexport function validateSolution(): OptionActions {\r\n  return {\r\n    type: VALIDATE_SOLUTION\r\n  };\r\n}\r\n\r\nexport function toggleCell(row: number, column: number): OptionActions {\r\n  return {\r\n    type: TOGGLE_CELL,\r\n    payload: {\r\n      row,\r\n      column\r\n    }\r\n  };\r\n}\r\n\r\nexport function setDigit(digit: number): OptionActions {\r\n  return {\r\n    type: SET_DIGIT,\r\n    payload: {\r\n      digit\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeDigit(): OptionActions {\r\n  return {\r\n    type: REMOVE_DIGIT\r\n  };\r\n}\r\n\r\nexport function navigateCells(direction: DIRECTION): OptionActions {\r\n  return {\r\n    type: NAVIGATE_CELLS,\r\n    payload: {\r\n      direction\r\n    }\r\n  };\r\n}\r\n\r\nexport function setMode(mode: MODE): OptionActions {\r\n  return {\r\n    type: TOGGLE_NOTE_MODE,\r\n    payload: {\r\n      mode\r\n    }\r\n  }\r\n}\r\n\r\nexport function undo(): OptionActions {\r\n  return {\r\n    type: UNDO,\r\n  };\r\n}\r\n\r\nexport function redo(): OptionActions {\r\n  return {\r\n    type: REDO\r\n  };\r\n}\r\n\r\nexport function toggleNightMode(): OptionActions {\r\n  return {\r\n    type: TOGGLE_NIGHT_MODE\r\n  };\r\n}\r\n\r\nexport function resetSudoku(): OptionActions {\r\n  return {\r\n    type: RESET_SUDOKU\r\n  };\r\n}\r\n\r\nexport function fillCandidates(): OptionActions {\r\n  return {\r\n    type: FILL_CANDIDATES\r\n  };\r\n}\r\n\r\n\r\nexport function clearCandidates(): OptionActions {\r\n  return {\r\n    type: CLEAR_CANDIDATES\r\n  };\r\n}\r\n","import \"./layout/index.scss\";\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport configureStore from \"./store\";\r\nimport App from \"./presentation/App\";\r\nimport pregenerate from \"./utils/pregenerate\";\r\n\r\nconst store = configureStore();\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  (window as any).pregenerate = pregenerate;\r\n}\r\n"],"sourceRoot":""}